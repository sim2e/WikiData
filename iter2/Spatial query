A spatial database is a general-purpose database (usually a relational database) that has been enhanced to include spatial data that represents objects defined in a geometric space, along with tools for querying and analyzing such data.  
Most spatial databases allow the representation of simple geometric objects such as points, lines and polygons. Some spatial databases handle more complex structures such as 3D objects, topological coverages, linear networks, and triangulated irregular networks (TINs). While typical databases have developed to manage various numeric and character types of data, such databases require additional functionality to process spatial data types efficiently, and developers have often added geometry or feature data types. 
Geographic database (or geodatabase) is a georeferenced spatial database, used for storing and manipulating geographic data (or geodata, i.e., data associated with a location on Earth), especially in geographic information systems (GIS).
Almost all current relational and object-relational database management systems now have spatial extensions, and some GIS software vendors have developed their own spatial extensions to database management systems.
The Open Geospatial Consortium (OGC) developed the Simple Features specification (first released in 1997) and sets standards for adding spatial functionality to database systems. The SQL/MM Spatial ISO/IEC standard is a part of the structured query language and multimedia standard extending the Simple Features.

Characteristics
The core functionality add by a spatial extension to a database is one or more spatial datatypes, which allow for the storage of spatial data as attribute values in a table. Most commonly, a single spatial value would be a geometric primitive (point, line, polygon, etc.) based on the vector data model. The datatypes in most spatial databases are based on the OGC Simple Features specification for representing geometric primitives. Some spatial databases also support the storage of raster data. Because all geographic locations must be specified according to a spatial reference system, spatial databases must also allow for the tracking and transformation of coordinate systems. In many systems, when a spatial column is defined in a table, it also includes a choice of coordinate system, chosen from a list of available systems that is stored in a lookup table.
The second major functionality extension in a spatial database is the addition of spatial capabilities to the query language (e.g., SQL); these give the spatial database the same  query, analysis, and manipulation operations that are available in traditional GIS software. In most relational database management systems, this functionality is implemented as a set of new functions that can be used in SQL SELECT statements. Several types of operations are specified by the Open Geospatial Consortium standard:

Measurement: Computes line length, polygon area, the distance between geometries, etc.
Geoprocessing: Modify existing features to create new ones, for example by creating a buffer around them, intersecting features, etc.
Predicates: Allows true/false queries about spatial relationships between geometries.  Examples include "do two polygons overlap?" or 'is there a residence located within a mile of the area we are planning to build the landfill?' (see DE-9IM)
Geometry Constructors: Creates new geometries, usually by specifying the vertices (points or nodes) which define the shape.
Observer Functions: Queries that return specific information about a feature, such as the location of the center of a circle.Some databases support only simplified or modified sets of these operations, especially in cases of NoSQL systems like MongoDB and CouchDB.

Spatial index
A Spatial index is used by a spatial database to optimize spatial queries.  Database systems use indices to quickly look up values by sorting data values in a linear (e.g. alphabetical) order; however, this way of indexing data is not optimal for spatial queries in two- or three-dimensional space. Instead, spatial databases use a spatial index designed specifically for multi-dimensional ordering. Common spatial index methods include:

Binary space partitioning (BSP-Tree): Subdividing space by hyperplanes.
Bounding volume hierarchy (BVH)
Geohash
Grid (spatial index)
HHCode
Hilbert R-tree
kd-tree
m-tree – an m-tree index can be used for the efficient resolution of similarity queries on complex objects as compared using an arbitrary metric.
Octree
PH-tree
Quadtree
R-tree: Typically the preferred method for indexing spatial data. Objects (shapes, lines and points) are grouped using the minimum bounding rectangle (MBR). Objects are added to an MBR within the index that will lead to the smallest increase in its size.
R+ tree
R* tree
UB-tree
X-tree
Z-order (curve)

Spatial query
A spatial query is a special type of database query supported by spatial databases, including geodatabases. The queries differ from non-spatial SQL queries in several important ways. Two of the most important are that they allow for the use of geometry data types such as points, lines and polygons and that these queries consider the spatial relationship between these geometries.
The function names for queries differ across geodatabases. The following are a few of the functions built into PostGIS, a free geodatabase which is a PostgreSQL extension (the term 'geometry' refers to a point, line, box or other two or three dimensional shape):Function prototype: functionName (parameter(s)) : return type 

ST_Distance(geometry, geometry) : number
ST_Equals(geometry, geometry) : boolean
ST_Disjoint(geometry, geometry) : boolean
ST_Intersects(geometry, geometry) : boolean
ST_Touches(geometry, geometry) : boolean
ST_Crosses(geometry, geometry) : boolean
ST_Overlaps(geometry, geometry) : boolean
ST_Contains(geometry, geometry) : boolean
ST_Length(geometry) : number
ST_Area(geometry) : number
ST_Centroid(geometry) : geometry
ST_Intersection(geometry, geometry) : geometryThus, a spatial join between a points layer of cities and a polygon layer of countries could be performed in a spatially-extended SQL statement as:
SELECT * FROM cities, countries WHERE ST_Contains(countries.shape, cities.shape)
The Intersect vector overlay operation (a core element of GIS software) could be replicated as:
SELECT ST_Intersection(veg.shape, soil.shape) int_poly, veg.*, soil.* FROM veg, soil where ST_Intersects(veg.shape, soil.shape)

Spatial database management systems
List
AllegroGraph – a graph database which provides a mechanism for efficient storage and retrieval of two-dimensional geospatial coordinates for Resource Description Framework data. It includes an extension syntax for SPARQL queries.
ArangoDB - a multi-model database which provides geoindexing capability.
Apache Drill - A MPP SQL query engine for querying large datasets.  Drill supports spatial data types and functions  similar to PostgreSQL.
Esri Geodatabase (Enterprise, Mobile) - a proprietary spatial database structure and logical model that can be implemented on several relational databases, both commercial (Oracle, MS SQL Server, Db2) and open source (PostgreSQL, SQLite)
Caliper extends the Raima Data Manager with spatial datatypes, functions, and utilities.
CouchDB a document-based database system that can be spatially enabled by a plugin called Geocouch
Elasticsearch is a document-based database system that supports two types of geo data: geo_point fields which support lat/lon pairs, and geo_shape fields, which support points, lines, circles, polygons, multi-polygons, etc.
GeoMesa is a cloud-based spatio-temporal database built on top of Apache Accumulo and Apache Hadoop (also supports Apache HBase, Google Bigtable, Apache Cassandra, and Apache Kafka). GeoMesa supports full OGC Simple Features and a GeoServer plugin.
H2 supports geometry types and spatial indices as of version 1.3.173 (2013-07-28). An extension called H2GIS available on Maven Central gives full OGC Simple Features support.
Any edition of IBM Db2 can be spatially-enabled to implement the OpenGIS spatial functionality with SQL spatial types and functions.
IBM Informix Geodetic and Spatial datablade extensions auto-install on use and expand Informix's datatypes to include multiple standard coordinate systems and support for RTree indexes. Geodetic and Spatial data can also be incorporated with Informix's Timeseries data support for tracking objects in motion over time.
Linter SQL Server supports spatial types and spatial functions according to the OpenGIS specifications.
Microsoft SQL Server has support for spatial types since version 2008
MonetDB/GIS extension for MonetDB adds OGS Simple Features to the relational column-store database.
MySQL DBMS implements the datatype geometry, plus some spatial functions implemented according to the OpenGIS specifications. However, in MySQL version 5.5 and earlier, functions that test spatial relationships are limited to working with minimum bounding rectangles rather than the actual geometries. MySQL versions earlier than 5.0.16 only supported spatial data in MyISAM tables. As of MySQL 5.0.16, InnoDB, NDB, BDB, and ARCHIVE also support spatial features.
Neo4j – a graph database that can build 1D and 2D indexes as B-tree, Quadtree and Hilbert curve directly in the graph
OpenLink Virtuoso has supported SQL/MM since version 6.01.3126, with significant enhancements including GeoSPARQL in Open Source Edition 7.2.6, and in Enterprise Edition 8.2.0
Oracle Spatial
PostgreSQL DBMS (database management system) uses the extension PostGIS to implement OGC-compliant  spatial functionality, including standardized datatype geometry and corresponding functions.
Redis with the Geo API.
RethinkDB supports geospatial indexes in 2D.
SAP HANA supports geospatial with SPS08.
Smallworld VMDS, the native GE Smallworld GIS database
Spatial Query Server from Boeing spatially enables Sybase ASE.
SpatiaLite extends Sqlite with spatial datatypes, functions, and utilities.
Tarantool supports geospatial queries with RTREE index.
Teradata Geospatial includes 2D spatial functionality (OGC-compliant) in its data warehouse system.
Vertica Place, the geo-spatial extension for HP Vertica, adds OGC-compliant spatial features to the relational column-store database.

Table of free systems especially for spatial data processing
See also
Geographic information system (GIS)
GeoSPARQL
Glacio-geological databases
Location intelligence
Multimedia database
Nearest neighbor search
Object-based spatial database
Simple Features
Spatial analysis
Spatial ETL
Spatiotemporal database

Notes
References
Further reading
Spatial Databases: A Tour, Shashi Shekhar and Sanjay Chawla, Prentice Hall, 2003 (ISBN 0-13-017480-7)
Spatial Databases – With Application to GIS Philippe Rigaux, Michel Scholl and Agnes Voisard. Morgan Kaufmann Publishers. 2002 (ISBN 1-55860-588-6)
Evaluation of Data Management Systems for Geospatial Big Data Pouria Amirian, Anahid Basiri and Adam Winstanley. Springer. 2014 (ISBN 9783319091563)

External links
An introduction to PostgreSQL PostGIS
PostgreSQL PostGIS as components in a Service Oriented Architecture SOA
A Trigger Based Security Alarming Scheme for Moving Objects on Road Networks Sajimon Abraham, P. Sojan Lal, Published by Springer Berlin / Heidelberg-2008.
geodatabase ArcGIS Resource Center description of a geodatabase