In computability theory, many reducibility relations (also called reductions, reducibilities, and notions of reducibility) are studied. They are motivated by the question: given sets 
  
    
      
        A
      
    
    {\displaystyle A}
   and 
  
    
      
        B
      
    
    {\displaystyle B}
   of natural numbers, is it possible to effectively convert a method for deciding membership in 
  
    
      
        B
      
    
    {\displaystyle B}
   into a method for deciding membership in 
  
    
      
        A
      
    
    {\displaystyle A}
  ?  If the answer to this question is affirmative then 
  
    
      
        A
      
    
    {\displaystyle A}
   is said to be reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
  . 
The study of reducibility notions is motivated by the study of decision problems. For many notions of reducibility, if any noncomputable set is reducible to a set 
  
    
      
        A
      
    
    {\displaystyle A}
   then 
  
    
      
        A
      
    
    {\displaystyle A}
   must also be noncomputable.  This gives a powerful technique for proving that many sets are noncomputable.

Reducibility relations
A reducibility relation is a binary relation on sets of natural numbers that is 

Reflexive:  Every set is reducible to itself.
Transitive:  If a set 
  
    
      
        A
      
    
    {\displaystyle A}
   is reducible to a set 
  
    
      
        B
      
    
    {\displaystyle B}
   and 
  
    
      
        B
      
    
    {\displaystyle B}
   is reducible to a set 
  
    
      
        C
      
    
    {\displaystyle C}
   then 
  
    
      
        A
      
    
    {\displaystyle A}
   is reducible to 
  
    
      
        C
      
    
    {\displaystyle C}
  .These two properties imply that reducibility is a preorder on the powerset of the natural numbers.  Not all preorders are studied as reducibility notions, however.  The notions studied in computability theory have the informal property that 
  
    
      
        A
      
    
    {\displaystyle A}
   is reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   if and only if any (possibly noneffective) decision procedure for 
  
    
      
        B
      
    
    {\displaystyle B}
   can be effectively converted to a decision procedure for 
  
    
      
        A
      
    
    {\displaystyle A}
  . The different reducibility relations vary in the methods they permit such a conversion process to use.

Degrees of a reducibility relation
Every reducibility relation (in fact, every preorder) induces an equivalence relation on the powerset of the natural numbers in which two sets are equivalent if and only if each one is reducible to the other.  In computability theory, these equivalence classes are called the degrees of the reducibility relation.  For example, the Turing degrees are the equivalence classes of sets of naturals induced by Turing reducibility. 
The degrees of any reducibility relation are partially ordered by the relation in the following manner.  Let 
  
    
      
        ≤
      
    
    {\displaystyle \leq }
   be a reducibility relation and let 
  
    
      
        C
      
    
    {\displaystyle C}
   and 
  
    
      
        D
      
    
    {\displaystyle D}
   be two of its degrees.  Then 
  
    
      
        C
        ≤
        D
      
    
    {\displaystyle C\leq D}
   if and only if there is a set 
  
    
      
        A
      
    
    {\displaystyle A}
   in 
  
    
      
        C
      
    
    {\displaystyle C}
   and a set 
  
    
      
        B
      
    
    {\displaystyle B}
   in 
  
    
      
        D
      
    
    {\displaystyle D}
   such that 
  
    
      
        A
        ≤
        B
      
    
    {\displaystyle A\leq B}
  .  This is equivalent to the property that for every set 
  
    
      
        A
      
    
    {\displaystyle A}
   in 
  
    
      
        C
      
    
    {\displaystyle C}
   and every set 
  
    
      
        B
      
    
    {\displaystyle B}
   in 
  
    
      
        D
      
    
    {\displaystyle D}
  , 
  
    
      
        A
        ≤
        B
      
    
    {\displaystyle A\leq B}
  , because any two sets in C are equivalent and any two sets in 
  
    
      
        D
      
    
    {\displaystyle D}
   are equivalent.  It is common, as shown here, to use boldface notation to denote degrees.

Turing reducibility
The most fundamental reducibility notion is Turing reducibility.  A set 
  
    
      
        A
      
    
    {\displaystyle A}
   of natural numbers is Turing reducible to a set 
  
    
      
        B
      
    
    {\displaystyle B}
   if and only if there is an oracle Turing machine that, when run with 
  
    
      
        B
      
    
    {\displaystyle B}
   as its oracle set, will compute the indicator function (characteristic function) of 
  
    
      
        A
      
    
    {\displaystyle A}
  .  Equivalently, 
  
    
      
        A
      
    
    {\displaystyle A}
   is Turing reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   if and only if there is an algorithm for computing the indicator function for 
  
    
      
        A
      
    
    {\displaystyle A}
   provided that the algorithm is provided with a means to correctly answer questions of the form "Is 
  
    
      
        n
      
    
    {\displaystyle n}
   in 
  
    
      
        B
      
    
    {\displaystyle B}
  ?". 
Turing reducibility serves as a dividing line for other reducibility notions because, according to the Church-Turing thesis, it is the most general reducibility relation that is effective.  Reducibility relations that imply Turing reducibility have come to be known as strong reducibilities, while those that are implied by Turing reducibility are weak reducibilities.   Equivalently, a strong reducibility relation is one whose degrees form a finer equivalence relation than the Turing degrees, while a weak reducibility relation is one whose degrees form a coarser equivalence relation than Turing equivalence.

Reductions stronger than Turing reducibility
The strong reducibilities include

One-one reducibility: 
  
    
      
        A
      
    
    {\displaystyle A}
   is one-one reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   if there is a computable one-to-one function 
  
    
      
        f
      
    
    {\displaystyle f}
   with 
  
    
      
        A
        (
        x
        )
        =
        B
        (
        f
        (
        x
        )
        )
      
    
    {\displaystyle A(x)=B(f(x))}
   for all 
  
    
      
        x
      
    
    {\displaystyle x}
  .
Many-one reducibility: 
  
    
      
        A
      
    
    {\displaystyle A}
   is many-one reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   if there is a computable function 
  
    
      
        f
      
    
    {\displaystyle f}
   with 
  
    
      
        A
        (
        x
        )
        =
        B
        (
        f
        (
        x
        )
        )
      
    
    {\displaystyle A(x)=B(f(x))}
   for all 
  
    
      
        x
      
    
    {\displaystyle x}
  .
Truth-table reducible: 
  
    
      
        A
      
    
    {\displaystyle A}
   is truth-table reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   if 
  
    
      
        A
      
    
    {\displaystyle A}
   is Turing reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   via a single (oracle) Turing machine which produces a total function relative to every oracle.
Weak truth-table reducible: 
  
    
      
        A
      
    
    {\displaystyle A}
   is weak truth-table reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   if there is a Turing reduction from 
  
    
      
        B
      
    
    {\displaystyle B}
   to 
  
    
      
        A
      
    
    {\displaystyle A}
   and a computable function 
  
    
      
        f
      
    
    {\displaystyle f}
   which bounds the use. Whenever 
  
    
      
        A
      
    
    {\displaystyle A}
   is truth-table reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
  , 
  
    
      
        A
      
    
    {\displaystyle A}
   is also weak truth-table reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
  , since one can construct a computable bound on the use by considering the maximum use over the tree of all oracles, which will exist if the reduction is total on all oracles.
Positive reducible: 
  
    
      
        A
      
    
    {\displaystyle A}
   is positive reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   if and only if 
  
    
      
        A
      
    
    {\displaystyle A}
   is truth-table reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   in a way that one can compute for every 
  
    
      
        x
      
    
    {\displaystyle x}
   a formula consisting of atoms of the form 
  
    
      
        B
        (
        0
        )
        ,
        B
        (
        1
        )
        ,
        .
        .
        .
      
    
    {\displaystyle B(0),B(1),...}
   such that these atoms are combined by and's and or's, where the and of 
  
    
      
        a
      
    
    {\displaystyle a}
   and 
  
    
      
        b
      
    
    {\displaystyle b}
   is 1 if 
  
    
      
        a
        =
        1
      
    
    {\displaystyle a=1}
   and 
  
    
      
        b
        =
        1
      
    
    {\displaystyle b=1}
   and so on.
Enumeration reducibility: Similar to positive reducibility, relating to the effective procedure of enumerability from 
  
    
      
        A
      
    
    {\displaystyle A}
   to 
  
    
      
        B
      
    
    {\displaystyle B}
  .
Disjunctive reducible: Similar to positive reducible with the additional constraint that only or's are permitted.
Conjunctive reducibility: Similar to positive reducibility with the additional constraint that only and's are permitted.
Linear reducibility: Similar to positive reducibility but with the constraint that all atoms of the form 
  
    
      
        B
        (
        n
        )
      
    
    {\displaystyle B(n)}
   are combined by exclusive or's. In other words, 
  
    
      
        A
      
    
    {\displaystyle A}
   is linear reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   if and only if a computable function computes for each 
  
    
      
        x
      
    
    {\displaystyle x}
   a finite set 
  
    
      
        F
        (
        x
        )
      
    
    {\displaystyle F(x)}
   given as an explicit list of numbers such that 
  
    
      
        x
        ∈
        A
      
    
    {\displaystyle x\in A}
   if and only if 
  
    
      
        F
        (
        x
        )
      
    
    {\displaystyle F(x)}
   contains an odd number of elements of 
  
    
      
        B
      
    
    {\displaystyle B}
  .Many of these were introduced by Post (1944). Post was searching for a non-computable, computably enumerable set which the halting problem could not be Turing reduced to. As he could not construct such a set in 1944, he instead worked on the analogous problems for the various reducibilities that he introduced. These reducibilities have since been the subject of much research, and many relationships between them are known.

Bounded reducibilities
A bounded form of each of the above strong reducibilities can be defined. The most famous of these is bounded truth-table reduction, but there are also bounded Turing, bounded weak truth-table, and others. These first three are the most common ones and they are based on the number of queries. For example, a set 
  
    
      
        A
      
    
    {\displaystyle A}
   is bounded truth-table reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   if and only if the Turing machine 
  
    
      
        M
      
    
    {\displaystyle M}
   computing 
  
    
      
        A
      
    
    {\displaystyle A}
   relative to 
  
    
      
        B
      
    
    {\displaystyle B}
   computes a list of up to 
  
    
      
        n
      
    
    {\displaystyle n}
   numbers, queries 
  
    
      
        B
      
    
    {\displaystyle B}
   on these numbers and then terminates for all possible oracle answers; the value 
  
    
      
        n
      
    
    {\displaystyle n}
   is a constant independent of 
  
    
      
        x
      
    
    {\displaystyle x}
  . The difference between bounded weak truth-table and bounded Turing reduction is that in the first case, the up to 
  
    
      
        n
      
    
    {\displaystyle n}
   queries have to be made at the same time while in the second case, the queries can be made one after the other. For that reason, there are cases where 
  
    
      
        A
      
    
    {\displaystyle A}
   is bounded Turing reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
   but not weak truth-table reducible to 
  
    
      
        B
      
    
    {\displaystyle B}
  .

Strong reductions in computational complexity
The strong reductions listed above restrict the manner in which oracle information can be accessed by a decision procedure but do not otherwise limit the computational resources available.  Thus if a set 
  
    
      
        A
      
    
    {\displaystyle A}
   is decidable then 
  
    
      
        A
      
    
    {\displaystyle A}
   is reducible to any set 
  
    
      
        B
      
    
    {\displaystyle B}
   under any of the strong reducibility relations listed above, even if 
  
    
      
        A
      
    
    {\displaystyle A}
   is not polynomial-time or exponential-time decidable.   This is acceptable in the study of computability theory, which is interested in theoretical computability, but it is not reasonable for computational complexity theory, which studies which sets can be decided under certain asymptotical resource bounds.  
The most common reducibility in computational complexity theory is polynomial-time reducibility; a set A is polynomial-time reducible to a set 
  
    
      
        B
      
    
    {\displaystyle B}
   if there is a polynomial-time function f such that for every 
  
    
      
        n
      
    
    {\displaystyle n}
  , 
  
    
      
        n
      
    
    {\displaystyle n}
   is in 
  
    
      
        A
      
    
    {\displaystyle A}
   if and only if 
  
    
      
        f
        (
        n
        )
      
    
    {\displaystyle f(n)}
   is in 
  
    
      
        B
      
    
    {\displaystyle B}
  .  This reducibility is, essentially, a resource-bounded version of many-one reducibility.  Other resource-bounded reducibilities are used in other contexts of computational complexity theory where other resource bounds are of interest.

Reductions weaker than Turing reducibility
Although Turing reducibility is the most general reducibility that is effective, weaker reducibility relations are commonly studied.  These reducibilities are related to the relative definability of sets over arithmetic or set theory. They include:

Arithmetical reducibility: A set 
  
    
      
        A
      
    
    {\displaystyle A}
   is arithmetical in a set 
  
    
      
        B
      
    
    {\displaystyle B}
   if 
  
    
      
        A
      
    
    {\displaystyle A}
   is definable over the standard model of Peano arithmetic with an extra predicate for 
  
    
      
        B
      
    
    {\displaystyle B}
  .   Equivalently, according to Post's theorem, A is arithmetical in 
  
    
      
        B
      
    
    {\displaystyle B}
   if and only if 
  
    
      
        A
      
    
    {\displaystyle A}
   is Turing reducible to 
  
    
      
        
          B
          
            (
            n
            )
          
        
      
    
    {\displaystyle B^{(n)}}
  , the 
  
    
      
        n
      
    
    {\displaystyle n}
  th Turing jump of 
  
    
      
        B
      
    
    {\displaystyle B}
  , for some natural number 
  
    
      
        n
      
    
    {\displaystyle n}
  . The arithmetical hierarchy gives a finer classification of arithmetical reducibility.
Hyperarithmetical reducibility:  A set 
  
    
      
        A
      
    
    {\displaystyle A}
   is hyperarithmetical in a set 
  
    
      
        B
      
    
    {\displaystyle B}
   if 
  
    
      
        A
      
    
    {\displaystyle A}
   is 
  
    
      
        
          Δ
          
            1
          
          
            1
          
        
      
    
    {\displaystyle \Delta _{1}^{1}}
   definable (see analytical hierarchy) over the standard model of Peano arithmetic with a predicate for 
  
    
      
        B
      
    
    {\displaystyle B}
  .  Equivalently, 
  
    
      
        A
      
    
    {\displaystyle A}
   is hyperarithmetical in 
  
    
      
        B
      
    
    {\displaystyle B}
   if and only if 
  
    
      
        A
      
    
    {\displaystyle A}
   is Turing reducible to 
  
    
      
        
          B
          
            (
            α
            )
          
        
      
    
    {\displaystyle B^{(\alpha )}}
  , the 
  
    
      
        a
      
    
    {\displaystyle a}
  th Turing jump of 
  
    
      
        B
      
    
    {\displaystyle B}
  , for some 
  
    
      
        B
      
    
    {\displaystyle B}
  -recursive ordinal 
  
    
      
        a
      
    
    {\displaystyle a}
  .
Relative constructibility: A set 
  
    
      
        A
      
    
    {\displaystyle A}
   is relatively constructible from a set 
  
    
      
        B
      
    
    {\displaystyle B}
   if 
  
    
      
        A
      
    
    {\displaystyle A}
   is in 
  
    
      
        L
        (
        B
        )
      
    
    {\displaystyle L(B)}
  , the smallest transitive model of ZFC set theory containing 
  
    
      
        B
      
    
    {\displaystyle B}
   and all the ordinals.

References
External links
Stanford Encyclopedia of Philosophy: Recursive Functions