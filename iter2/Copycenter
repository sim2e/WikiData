A permissive software license, sometimes also called BSD-like or BSD-style license, is a free-software license which instead of copyleft protections, carries only minimal restrictions on how the software can be used, modified, and redistributed, usually including a warranty disclaimer. Examples include the GNU All-permissive License, MIT License, BSD licenses, Apple Public Source License and Apache license. As of 2016, the most popular free-software license is the permissive MIT license.

Example
The following is the full text of the simple GNU All-permissive License:

Copyright <YEAR>, <AUTHORS>Copying and distribution of this file, with or without modification, are permitted in any medium without royalty, provided the copyright notice and this notice are preserved. This file is offered as-is, without any warranty.

Definitions
The Open Source Initiative defines a permissive software license as a "non-copyleft license that guarantees the freedoms to use, modify and redistribute". GitHub's choosealicense website describes the permissive MIT license as "[letting] people do anything they want with your code as long as they provide attribution back to you and don't hold you liable." California Western School of Law's newmediarights.com defined them as follows: "The 'BSD-like' licenses such as the BSD, MIT and Apache licenses are extremely permissive, requiring little more than attributing the original portions of the licensed code to the original developers in your own code and/or documentation."

Comparison to copyleft
Copyleft licenses generally require the reciprocal publication of the source code of any modified versions under the original work's copyleft license. Permissive licenses, in contrast, do not try to guarantee that modified versions of the software will remain free and publicly available, generally requiring only that the original copyright notice be retained. As a result, derivative works, or future versions, of permissively-licensed software can be released as proprietary software.Defining how liberal a license is, however, is not something easily quantifiable, and often depends on the goals of the final users. If the latter are developers, for some it might be valuable to have the right to modify and exploit source code written by others and possibly incorporate it into proprietary code and make money with it (and therefore these see permissive licenses as offering them a "right"), while for other developers it might be more valuable to know that nobody will ever capitalize what has mostly been their work (and therefore these see copyleft licenses as offering them a "right"). Furthermore, the final users might not be developers at all, and in this case copyleft licenses offer them the everlasting right to access a software as free software, ensuring that it will never become closed source – while permissive licenses offer no rights at all to non-developer final users, and software released with a permissive license could theoretically become from one day to another a closed source malware without the user even knowing it.
Permissive licenses offer more extensive license compatibility than copyleft licenses, which cannot generally be freely combined and mixed, because their reciprocity requirements conflict with each other.

Comparison to public domain
Computer Associates Int'l v. Altai used the term "public domain" to refer to works that have become widely shared and distributed under permission, rather than work that was deliberately put into the public domain.  However, permissive licenses are not actually equivalent to releasing a work into the public domain.
Permissive licenses often do stipulate some limited requirements, such as that the original authors must be credited (attribution).  If a work is truly in the public domain, this is usually not legally required, but a United States copyright registration requires disclosing material that has been previously published, and attribution may still be considered an ethical requirement in academia.
Advocates of permissive licenses often recommend against attempting to release software to the public domain, on the grounds that this can be legally problematic in some jurisdictions. Public-domain-equivalent licenses are an attempt to solve this problem, providing a fallback permissive license for cases where renunciation of copyright is not legally possible, and sometimes also including a disclaimer of warranties similar to most permissive licenses.

License compatibility
In general permissive licenses have good license compatibility with most other software licenses in most situations.Due to their non-restrictiveness, most permissive software licenses are even compatible with copyleft licenses, which are incompatible with most other licenses. Some older permissive licenses, such as the 4-clause BSD license, the PHP License, and the OpenSSL License, have clauses requiring advertising materials to credit the copyright holder, which made them incompatible with copyleft licenses. Popular modern permissive licenses, however, such as the MIT License, the 3-clause BSD license and the zlib license, don't include advertising clauses and are generally compatible with copyleft licenses.
Some licenses do not allow derived works to add a restriction that says a redistributor cannot add more restrictions. Examples include the CDDL and MsPL. However such restrictions also make the license incompatible with permissive free-software licenses.

Reception and adoption
While they have been in use since the mid-1980s, several authors noted an increase in the popularity of permissive licenses during the 2010s.As of 2015, the MIT License, a permissive license, is the most popular free software license, followed by GPLv2.

Other terms
Non-copyleft
A "permissive" license is simply a non-copyleft open source license.
Sometimes the word "permissive" is considered too ambiguous, because all free software licenses are "permissive", in the sense that they all allow to modify and redistribute the source code. In most cases the real opposition is between copyleft licenses and non-copyleft ones, thus some authors prefer to use the term "non-copyleft" instead of "permissive".

Copycenter
Berkeley had what we called "copycenter," which is "take it down to the copy center and make as many copies as you want."
Copycenter is a term originally used to explain the modified BSD license, a permissive free-software license. The term was presented by computer scientist and Berkeley Software Distribution (BSD) contributor Marshall Kirk McKusick at a BSD conference in 1999. It is a word play on copyright, copyleft and copy center.

Pushover license
We call them “pushover licenses” because they can't say “no” when one user tries to deny freedom to others.."
In the Free Software Foundation's guide to license compatibility and relicensing, Richard Stallman defines permissive licenses as "pushover licenses", comparing them to those people who "can't say no", because they are seen as granting a right to "deny freedom to others." The Foundation recommends pushover licenses only for small programs, below 300 lines of code, where "the benefits provided by copyleft are usually too small to justify the inconvenience of making sure a copy of the license always accompanies the software".

Cuck license
Why be mean and bully BSD and MIT licenses calling them "Cuck Licenses"? Quite simply, using them is precisely analogous to being cuckolded. When you really look at it, the similarity is uncanny."
In response to those corporations that put pressure on developers to move away from copyleft licenses in favour of permissive ones, some developers have coined the term "cuck license" (precisely in analogy to being cuckolded), as they perceive that corporations want to benefit from collaborative work and privatize profits without giving anything back.

See also
List of permissive software licenses
License-free software
Public domain equivalent license
Free-software license
Comparison of free and open-source software licenses
Free Software Foundation

References


== External links ==