GXL (Graph eXchange Language) is designed to be a standard exchange format for graphs. GXL is an extensible markup language (XML) sublanguage and the syntax is given by an XML document type definition (DTD). This exchange format offers an adaptable and flexible means to support interoperability between graph-based tools.

Overview
In particular, GXL was developed to enable interoperability between software reengineering tools and components, such as code extractors (parsers), analyzers and visualizers. GXL allows software reengineers to combine single-purpose tools especially for parsing, source code extraction, architecture recovery, data flow analysis, pointer analysis, program slicing, query techniques, source code visualization, object recovery, restructuring, refactoring, remodularization, etc., into a single powerful reengineering workbench.
There are two innovative features in GXL that make it well-suited to an exchange format for software data.

The conceptual data model is a typed, attributed, directed graph. This is not to say that all software data ought to be manipulated as graphs, but rather that they can be exchanged as graphs.
It can be used to represent instance data as well as schemas for describing the structure of the data.  Moreover, the schema can be explicitly stated along with instance data.  The structure of graphs exchanged by GXL streams is given by a schema represented as a Unified Modeling Language (UML) class diagram.Since GXL is a general graph exchange format, it can also be used to interchange any graph-based data, including models between computer-aided software engineering (CASE) tools, data between graph transformation systems, or graph visualization tools. GXL includes support for hypergraphs and hierarchical graphs, and can be extended to support other types of graphs.
GXL originated in the merger of  GRAph eXchange format (GraX: University of Koblenz, DE) for exchanging typed, attributed, ordered, directed graphs (TGraphs), Tuple Attribute Language (TA: University of Waterloo, CA), and the graph format of the PROGRES graph rewriting system (University Bw München, DE). Furthermore, GXL includes ideas from exchange formats from reverse engineering, including Relation Partition Algebra (RPA: Philips Research Eindhoven, NL) and Rigi Standard Format (RSF: University of Victoria, CA). The development of GXL was also influenced by various formats used in graph drawing (e.g. daVinci, Graph Modelling Language (GML), Graphlet, GraphXML) and current discussions on exchange formats for graph transformation systems.

Presentations of former GXL versions
At the 2000 International Conference on Software Engineering (ICSE 2000) Workshop on Standard Exchange Formats (WoSEF), GXL was accepted as working draft for an exchange format by numerous research groups working in the domain of software reengineering and graph transformation.
During the APPLIGRAPH Subgroup Meeting on Exchange Formats for Graph Transformation, an overview of GXL was given [Schürr, 2000] and participants decided to use GXL to represent graphs within their exchange format for graph transformation systems (GTXL).
The 2000 IBM Centers for Advanced Studies Conference (CASCON 2000) included two half-day workshops on GXL. In the morning, 'Software Data Interchange with GXL: Introduction and Tutorial' gave a primer on the syntax and concepts in the format, while the afternoon workshop, 'Software Data Interchange with GXL: Implementation Issues' discussed the development of converters and standard schemas.
At the Seventh Working Conference on Reverse Engineering (WCRE 2000), GXL was presented in a tutorial [Holt et al., 2000] and during the workshop on exchange formats [Holt/Winter, 2000]. Central results were a simpler representation of ordering information, the usage of UML class diagrams to present graph schemata and the representation of UML class diagrams by GXL graphs.
The Dagstuhl Seminar on Interoperability of Reengineering Tools ratified GXL 1.0 as a standard interchange format for exchanging reengineering related data. Numerous groups from industry and research committed to using GXL, to import and export GXL documents to their tools, and to write various GXL tools.

GXL Partners
During various conferences and workshops the following groups from industry and academics committed to refining GXL to be the standard graph exchange format, write GXL filters and tools or use GXL as exchange format in their tools:

Bell Canada (Datrix Group)
Centrum Wiskunde & Informatica (CWI), The Netherlands (Interactive Software Development and Renovation and Information Visualization)
IBM Centre for Advanced Studies, Canada
Mahindra British Telecom, India
Merlin Software-Engineering GmbH, Germany
Nokia Research Center, Finland (Software Technology Laboratory)
Philips Research, The Netherlands (Software Architecture Group)
RWTH Aachen, Germany (Department of Computer Science III)
TU Berlin, Germany (Theoretical CS/Formal Specification Group)
University of Berne, Switzerland (Software Composition Group)
University of Bremen, Germany (Software Engineering Group)
Bundeswehr University Munich, Germany (Institute for Software Technology)
University of Edinburgh, UK, (Edinburgh Concurrency Workbench)
University of Koblenz, Germany (GUPRO Group)
University of Oregon, USA (Department of Computer Science)
University of Paderborn, Germany (AG Softwaretechnik)
University of Stuttgart, Germany (BAUHAUS Group)
University of Szeged, Hungary (Research Group on Artificial Intelligence)
University of Toronto, Canada (Software Architecture Group)
University of Victoria, Canada (RIGI Group)
University of Waterloo, Canada (Software Architecture Group)

External links
GXL homepage