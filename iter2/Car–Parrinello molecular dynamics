Car–Parrinello molecular dynamics or CPMD refers to either a method used in molecular dynamics (also known as the Car–Parrinello method) or the computational chemistry software package used to implement this method.The CPMD method is one of the major methods for calculating ab-initio molecular dynamics (ab-initio MD or AIMD).
Ab initio molecular dynamics (ab initio MD) is a computational method that uses first principles, or fundamental laws of nature, to simulate the motion of atoms in a system. It is a type of molecular dynamics (MD) simulation that does not rely on empirical potentials or force fields to describe the interactions between atoms, but rather calculates these interactions directly from the electronic structure of the system using quantum mechanics.
In an ab initio MD simulation, the total energy of the system is calculated at each time step using density functional theory (DFT) or another method of quantum chemistry. The forces acting on each atom are then determined from the gradient of the energy with respect to the atomic coordinates, and the equations of motion are solved to predict the trajectory of the atoms.
AIMD permits chemical bond breaking and forming events to occur and accounts for electronic polarization effect. Therefore, Ab initio MD simulations can be used to study a wide range of phenomena, including the structural, thermodynamic, and dynamic properties of materials and chemical reactions. They are particularly useful for systems that are not well described by empirical potentials or force fields, such as systems with strong electronic correlation or systems with many degrees of freedom. However, ab initio MD simulations are computationally demanding and require significant computational resources.
The CPMD method is related to the more common Born–Oppenheimer molecular dynamics (BOMD) method in that the quantum mechanical effect of the electrons is included in the calculation of energy and forces for the classical motion of the nuclei. CPMD and BOMD are different types of AIMD. However, whereas BOMD treats the electronic structure problem within the time-independent Schrödinger equation, CPMD explicitly includes the electrons as active degrees of freedom, via (fictitious) dynamical variables.
The software is a parallelized plane wave / pseudopotential implementation of density functional theory, particularly designed for ab initio molecular dynamics.

Car–Parrinello method
The Car–Parrinello method is a type of molecular dynamics, usually employing periodic boundary conditions, planewave basis sets, and density functional theory, proposed by Roberto Car and Michele Parrinello in 1985, who were subsequently awarded the Dirac Medal by ICTP in 2009.
In contrast to Born–Oppenheimer molecular dynamics wherein the nuclear (ions) degree of freedom are propagated using ionic forces which are calculated at each iteration by approximately solving the electronic problem with conventional matrix diagonalization methods, the Car–Parrinello method explicitly introduces the electronic degrees of freedom as (fictitious) dynamical variables, writing an extended Lagrangian for the system which leads to a system of coupled equations of motion for both ions and electrons. In this way, an explicit electronic minimization at each time step, as done in Born–Oppenheimer MD, is not needed: after an initial standard electronic minimization, the fictitious dynamics of the electrons keeps them on the electronic ground state corresponding to each new ionic configuration visited along the dynamics, thus yielding accurate ionic forces. In order to maintain this adiabaticity condition, it is necessary that the fictitious mass of the electrons is chosen small enough to avoid a significant energy transfer from the ionic to the electronic degrees of freedom. This small fictitious mass in turn requires that the equations of motion are integrated using a smaller time step than the one (1–10 fs) commonly used in Born–Oppenheimer molecular dynamics.
Currently, the CPMD method can be applied to systems that consist of a few tens or hundreds of atoms and access timescales on the order of tens of picoseconds.

General approach
In CPMD the core electrons are usually described by a pseudopotential and the wavefunction of the valence electrons are approximated by a plane wave basis set.
The ground state electronic density (for fixed nuclei) is calculated self-consistently, usually using the density functional theory method. Kohn-Sham equations are often used to calculate the electronic structure, where electronic orbitals are expanded in a plane-wave basis set. Then, using that density, forces on the nuclei can be computed, to update the trajectories (using, e.g. the Verlet integration algorithm). In addition, however, the coefficients used to obtain the electronic orbital functions can be treated as a set of extra spatial dimensions, and trajectories for the orbitals can be calculated in this context. Compared to BOMD, CPMD allows for a more accurate description of the electronic structure and results in a more accurate simulation of the system. However, CPMD is computationally demanding and requires significant computational resources.

Fictitious dynamics
CPMD is an approximation of the Born–Oppenheimer MD (BOMD) method. In BOMD, the electrons' wave function must be minimized via matrix diagonalization at every step in the trajectory. CPMD uses fictitious dynamics to keep the electrons close to the ground state, preventing the need for a costly self-consistent iterative minimization at each time step. The fictitious dynamics relies on the use of a fictitious electron mass (usually in the range of 400 – 800 a.u.) to ensure that there is very little energy transfer from nuclei to electrons, i.e. to ensure adiabaticity. Any increase in the fictitious electron mass resulting in energy transfer would cause the system to leave the ground-state BOMD surface.

Lagrangian
L
          
        
        =
        
          
            1
            2
          
        
        
          (
          
            
              ∑
              
                I
              
              
                
                  n
                  u
                  c
                  l
                  e
                  i
                
              
            
             
            
              M
              
                I
              
            
            
              
                
                  
                    
                      R
                    
                    ˙
                  
                
              
              
                I
              
              
                2
              
            
            +
            μ
            
              ∑
              
                i
              
              
                
                  o
                  r
                  b
                  i
                  t
                  a
                  l
                  s
                
              
            
            ∫
            d
            
              r
            
             
            
              |
            
            
              
                
                  
                    ψ
                    ˙
                  
                
              
              
                i
              
            
            (
            
              r
            
            ,
            t
            )
            
              
                |
              
              
                2
              
            
          
          )
        
        −
        E
        
          [
          
            {
            
              ψ
              
                i
              
            
            }
            ,
            {
            
              
                R
              
              
                I
              
            
            }
          
          ]
        
        +
        
          ∑
          
            i
            j
          
        
        
          Λ
          
            i
            j
          
        
        
          (
          
            ∫
            d
            
              r
            
             
            
              ψ
              
                i
              
            
            
              ψ
              
                j
              
            
            −
            
              δ
              
                i
                j
              
            
          
          )
        
        ,
      
    
    {\displaystyle {\mathcal {L}}={\frac {1}{2}}\left(\sum _{I}^{\mathrm {nuclei} }\ M_{I}{\dot {\mathbf {R} }}_{I}^{2}+\mu \sum _{i}^{\mathrm {orbitals} }\int d\mathbf {r} \ |{\dot {\psi }}_{i}(\mathbf {r} ,t)|^{2}\right)-E\left[\{\psi _{i}\},\{\mathbf {R} _{I}\}\right]+\sum _{ij}\Lambda _{ij}\left(\int d\mathbf {r} \ \psi _{i}\psi _{j}-\delta _{ij}\right),}
  where 
  
    
      
        μ
      
    
    {\displaystyle \mu }
   is the fictitious mass parameter; E[{ψi},{RI}] is the Kohn–Sham energy density functional, which outputs energy values when given Kohn–Sham orbitals and nuclear positions.

Orthogonality constraint
∫
        d
        
          r
        
         
        
          ψ
          
            i
          
          
            ∗
          
        
        (
        
          r
        
        ,
        t
        )
        
          ψ
          
            j
          
        
        (
        
          r
        
        ,
        t
        )
        =
        
          δ
          
            i
            j
          
        
        ,
      
    
    {\displaystyle \int d\mathbf {r} \ \psi _{i}^{*}(\mathbf {r} ,t)\psi _{j}(\mathbf {r} ,t)=\delta _{ij},}
  where δij is the Kronecker delta.

Equations of motion
The equations of motion are obtained by finding the stationary point of the Lagrangian under variations of ψi and RI, with the orthogonality constraint.

  
    
      
        
          M
          
            I
          
        
        
          
            
              
                
                  R
                
                ¨
              
            
          
          
            I
          
        
        =
        −
        
          ∇
          
            I
          
        
        
        E
        
          [
          
            {
            
              ψ
              
                i
              
            
            }
            ,
            {
            
              
                R
              
              
                I
              
            
            }
          
          ]
        
      
    
    {\displaystyle M_{I}{\ddot {\mathbf {R} }}_{I}=-\nabla _{I}\,E\left[\{\psi _{i}\},\{\mathbf {R} _{I}\}\right]}
  
  
    
      
        μ
        
          
            
              
                ψ
                ¨
              
            
          
          
            i
          
        
        (
        
          r
        
        ,
        t
        )
        =
        −
        
          
            
              δ
              E
            
            
              δ
              
                ψ
                
                  i
                
                
                  ∗
                
              
              (
              
                r
              
              ,
              t
              )
            
          
        
        +
        
          ∑
          
            j
          
        
        
          Λ
          
            i
            j
          
        
        
          ψ
          
            j
          
        
        (
        
          r
        
        ,
        t
        )
        ,
      
    
    {\displaystyle \mu {\ddot {\psi }}_{i}(\mathbf {r} ,t)=-{\frac {\delta E}{\delta \psi _{i}^{*}(\mathbf {r} ,t)}}+\sum _{j}\Lambda _{ij}\psi _{j}(\mathbf {r} ,t),}
  where Λij is a Lagrangian multiplier matrix to comply with the orthonormality constraint.

Born–Oppenheimer limit
In the formal limit where μ → 0, the equations of motion approach Born–Oppenheimer molecular dynamics.

Software packages
There are a number of software packages available for performing AIMD simulations. Some of the most widely used packages include:

CP2K: an open-source software package for AIMD.
Quantum Espresso: an open-source package for performing DFT calculations. It includes a module for AIMD.
VASP: a commercial software package for performing DFT calculations. It includes a module for AIMD.
Gaussian: a commercial software package that can perform AIMD.
NWChem: an open-source software package for AIMD.
LAMMPS: an open-source software package for performing classical and ab initio MD simulations.
SIESTA: an open-source software package for AIMD.

Application
Studying the behavior of water near a hydrophobic graphene sheet.
Investigating the structure and dynamics of liquid water at ambient temperature.
Solving the heat transfer problems (heat conduction and thermal radiation) between Si/Ge superlattices.
Probing the proton transfer along 1D water chains inside carbon nanotubes.
Evaluating the critical point of aluminum.
Predicting the amorphous phase of the phase-change memory material GeSbTe.
Studying the combustion process of lignite-water systems. 
Computing and analyzing the IR spectra in terms of H-bond interactions.

See also
Computational physics
Density functional theory
Computational chemistry
Molecular dynamics
Quantum chemistry
Ab initio quantum chemistry methods
Quantum chemistry computer programs
List of software for molecular mechanics modeling
List of quantum chemistry and solid-state physics software
CP2K

References
External links
http://www.cpmd.org/
http://www.cp2k.org/