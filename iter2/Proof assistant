In computer science and mathematical logic, a proof assistant or interactive theorem prover is a software tool to assist with the development of formal proofs by human-machine collaboration. This involves some sort of interactive proof editor, or other interface, with which a human can guide the search for proofs, the details of which are stored in, and some steps provided by, a computer.
A recent effort within this field is making these tools use artificial intelligence to automate the formalization of ordinary mathematics.

System comparison
ACL2 – a programming language, a first-order logical theory, and a theorem prover (with both interactive and automatic modes) in the Boyer–Moore tradition.
Coq – Allows the expression of mathematical assertions, mechanically checks proofs of these assertions, helps to find formal proofs, and extracts a certified program from the constructive proof of its formal specification.
HOL theorem provers – A family of tools ultimately derived from the LCF theorem prover.  In these systems the logical core is a library of their programming language.  Theorems represent new elements of the language and can only be introduced via "strategies" which guarantee logical correctness.  Strategy composition gives users the ability to produce significant proofs with relatively few interactions with the system.  Members of the family include:
HOL4 – The "primary descendant", still under active development.  Support for both Moscow ML and Poly/ML. Has a BSD-style license.
HOL Light – A thriving "minimalist fork". OCaml based.
ProofPower – Went proprietary, then returned to open source. Based on Standard ML.
IMPS, An Interactive Mathematical Proof System
Isabelle is an interactive theorem prover, successor of HOL.  The main code-base is BSD-licensed, but the Isabelle distribution bundles many add-on tools with different licenses.
Jape – Java based.
Lean
LEGO
Matita – A light system based on the Calculus of Inductive Constructions.
MINLOG – A proof assistant based on first-order minimal logic.
Mizar – A proof assistant based on first-order logic, in a natural deduction style, and Tarski–Grothendieck set theory.
PhoX – A proof assistant based on higher-order logic which is eXtensible.
Prototype Verification System (PVS) – a proof language and system based on higher-order logic.
TPS and ETPS – Interactive theorem provers also based on simply-typed lambda calculus, but based on an independent formulation of the logical theory and independent implementation.

User interfaces
A popular front-end for proof assistants is the Emacs-based Proof General, developed at the University of Edinburgh.
Coq includes CoqIDE, which is based on OCaml/Gtk.  Isabelle includes Isabelle/jEdit, which is based on jEdit and the Isabelle/Scala infrastructure for document-oriented proof processing. More recently, Visual Studio Code extensions have been developed for Isabelle by Makarius Wenzel, and for Lean 4 by the leanprover developers.

Formalization extent
Freek Wiedijk has been keeping a ranking of proof assistants by the amount of formalized theorems out of a list of 100 well-known theorems. As of September 2023, only five systems have formalized proofs of more than 70% of the theorems, namely Isabelle, HOL Light, Coq, Lean	and Metamath.

See also
Automated theorem proving – Subfield of automated reasoning and mathematical logic
Computer-assisted proof – Mathematical proof at least partially generated by computer
Formal verification – Proving or disproving the correctness of certain intended algorithms
QED manifesto – Proposal for a computer-based database of all mathematical knowledge
Satisfiability modulo theories – Logical problem studied in computer science

Notes
References
Barendregt, Henk; Geuvers, Herman (2001). "18. Proof-assistants using Dependent Type Systems" (PDF). In Robinson, Alan J.A.; Voronkov, Andrei (eds.). Handbook of Automated Reasoning. Vol. 2. Elsevier. pp. 1149–. ISBN 978-0-444-50812-6. Archived from the original (PDF) on 2007-07-27.
Pfenning, Frank. "17. Logical frameworks" (PDF). Handbook vol 2 2001. pp. 1065–1148.
Pfenning, Frank (1996). "The practice of logical frameworks". In Kirchner, H. (ed.). Trees in Algebra and Programming — CAAP '96. Lecture Notes in Computer Science. Vol. 1059. Springer. pp. 119–134. doi:10.1007/3-540-61064-2_33. ISBN 3-540-61064-2.
Constable, Robert L. (1998). "X. Types in computer science, philosophy and logic". In Buss, S.R. (ed.). Handbook of Proof Theory. Studies in Logic. Vol. 137. Elsevier. pp. 683–786. ISBN 978-0-08-053318-6.
Wiedijk, Freek (2005). "The Seventeen Provers of the World" (PDF). Radboud University Nijmegen.

External links
Theorem Prover Museum
"Introduction" in Certified Programming with Dependent Types.
Introduction to the Coq Proof Assistant (with a general introduction to interactive theorem proving)
Interactive Theorem Proving for Agda Users
A list of theorem proving toolsCataloguesDigital Math by Category: Tactic Provers
Automated Deduction Systems and Groups
Theorem Proving and Automated Reasoning Systems
Database of Existing Mechanized Reasoning Systems
NuPRL: Other Systems
Specific Logical Frameworks and Implementations
DMOZ: Science: Math: Logic and Foundations: Computational Logic: Logical Frameworks