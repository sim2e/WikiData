In logic, the monadic predicate calculus (also called monadic first-order logic) is the fragment of first-order logic in which all relation symbols in the signature are monadic (that is, they take only one argument), and there are no function symbols. All atomic formulas are thus of the form 
  
    
      
        P
        (
        x
        )
      
    
    {\displaystyle P(x)}
  , where 
  
    
      
        P
      
    
    {\displaystyle P}
   is a relation symbol and 
  
    
      
        x
      
    
    {\displaystyle x}
   is a variable.
Monadic predicate calculus can be contrasted with polyadic predicate calculus, which allows relation symbols that take two or more arguments.

Expressiveness
The absence of polyadic relation symbols severely restricts what can be expressed in the monadic predicate calculus. It is so weak that, unlike the full predicate calculus, it is  decidable—there is a decision procedure that determines whether a given formula of monadic predicate calculus is logically valid (true for all nonempty domains). Adding a single binary relation symbol to monadic logic, however, results in an undecidable logic.

Relationship with term logic
The need to go beyond monadic logic was not appreciated until the work on the logic of relations, by Augustus De Morgan and Charles Sanders Peirce in the nineteenth century, and by Frege in his 1879 Begriffsschrifft. Prior to the work of these three men, term logic (syllogistic logic) was widely considered adequate for formal deductive reasoning.
Inferences in term logic can all be represented in the monadic predicate calculus. For example the argument

All dogs are mammals.
No mammal is a bird.
Thus, no dog is a bird.can be notated in the language of monadic predicate calculus as

  
    
      
        [
        (
        ∀
        x
        
        D
        (
        x
        )
        ⇒
        M
        (
        x
        )
        )
        ∧
        ¬
        (
        ∃
        y
        
        M
        (
        y
        )
        ∧
        B
        (
        y
        )
        )
        ]
        ⇒
        ¬
        (
        ∃
        z
        
        D
        (
        z
        )
        ∧
        B
        (
        z
        )
        )
      
    
    {\displaystyle [(\forall x\,D(x)\Rightarrow M(x))\land \neg (\exists y\,M(y)\land B(y))]\Rightarrow \neg (\exists z\,D(z)\land B(z))}
  where 
  
    
      
        D
      
    
    {\displaystyle D}
  , 
  
    
      
        M
      
    
    {\displaystyle M}
   and 
  
    
      
        B
      
    
    {\displaystyle B}
   denote the predicates of being, respectively, a dog, a mammal, and a bird.
Conversely, monadic predicate calculus is not significantly more expressive than term logic. Each formula in the monadic predicate calculus is equivalent to a formula in which quantifiers appear only in closed subformulas of the form

  
    
      
        ∀
        x
        
        
          P
          
            1
          
        
        (
        x
        )
        ∨
        ⋯
        ∨
        
          P
          
            n
          
        
        (
        x
        )
        ∨
        ¬
        
          P
          
            1
          
          ′
        
        (
        x
        )
        ∨
        ⋯
        ∨
        ¬
        
          P
          
            m
          
          ′
        
        (
        x
        )
      
    
    {\displaystyle \forall x\,P_{1}(x)\lor \cdots \lor P_{n}(x)\lor \neg P'_{1}(x)\lor \cdots \lor \neg P'_{m}(x)}
  or

  
    
      
        ∃
        x
        
        ¬
        
          P
          
            1
          
        
        (
        x
        )
        ∧
        ⋯
        ∧
        ¬
        
          P
          
            n
          
        
        (
        x
        )
        ∧
        
          P
          
            1
          
          ′
        
        (
        x
        )
        ∧
        ⋯
        ∧
        
          P
          
            m
          
          ′
        
        (
        x
        )
        ,
      
    
    {\displaystyle \exists x\,\neg P_{1}(x)\land \cdots \land \neg P_{n}(x)\land P'_{1}(x)\land \cdots \land P'_{m}(x),}
  These formulas slightly generalize the basic judgements considered in term logic. For example, this form allows statements such as "Every mammal is either a herbivore or a carnivore (or both)", 
  
    
      
        (
        ∀
        x
        
        ¬
        M
        (
        x
        )
        ∨
        H
        (
        x
        )
        ∨
        C
        (
        x
        )
        )
      
    
    {\displaystyle (\forall x\,\neg M(x)\lor H(x)\lor C(x))}
  . Reasoning about such statements can, however, still be handled within the framework of term logic, although not by the 19 classical Aristotelian syllogisms alone.
Taking propositional logic as given, every formula in the monadic predicate calculus expresses something that can likewise be formulated in term logic. On the other hand, a modern view of the problem of multiple generality in traditional logic concludes that quantifiers cannot nest usefully if there are no polyadic predicates to relate the bound variables.

Variants
The formal system described above is sometimes called the pure monadic predicate calculus, where "pure" signifies the absence of function letters. Allowing monadic function letters changes the logic only superficially, whereas admitting even a single binary function letter results in an undecidable logic.
Monadic second-order logic allows predicates of higher arity in formulas, but restricts second-order quantification to unary predicates, i.e. the only second-order variables allowed are subset variables.


== Footnotes ==