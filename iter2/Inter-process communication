In computer science, inter-process communication (IPC), also spelled interprocess communication, are the mechanisms provided by an operating system for processes to manage shared data. Typically, applications can use IPC, categorized as clients and servers, where the client requests data and the server responds to client requests. Many applications are both clients and servers, as commonly seen in distributed computing.
IPC is very important to the design process for microkernels and nanokernels, which reduce the number of functionalities provided by the kernel. Those functionalities are then obtained by communicating with servers via IPC, leading to a large increase in communication when compared to a regular monolithic kernel. IPC interfaces generally encompass variable analytic framework structures. These processes ensure compatibility between the multi-vector protocols upon which IPC models rely.An IPC mechanism is either synchronous or asynchronous. Synchronization primitives may be used to have synchronous behavior with an asynchronous IPC mechanism.

Approaches
Different approaches to IPC have been tailored to different software requirements, such as performance, modularity, and system circumstances such as network bandwidth and latency.

Applications
Remote procedure call interfaces
Java's Remote Method Invocation (RMI)
ONC RPC
XML-RPC or SOAP
JSON-RPC
Message Bus (Mbus) (specified in RFC 3259) (not to be confused with M-Bus)
.NET Remoting
gRPC

Platform communication stack
The following are messaging, and information systems that utilize IPC mechanisms but don't implement IPC themselves:

Operating system communication stack
The following are platform or programming language-specific APIs:

Distributed object models
The following are platform or programming language specific-APIs that use IPC, but do not themselves implement it:

See also
Computer network programming
Communicating Sequential Processes (CSP paradigm)
Data Distribution Service
Protected procedure call

References
External links
Linux ipc(5) man page describing System V IPC
Windows IPC
IPC available using Qt
Unix Network Programming (Vol 2: Interprocess Communications) by W. Richard Stevens
Interprocess Communication and Pipes in C
DIPC, Distributed System V IPC