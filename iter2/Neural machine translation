Neural machine translation (NMT) is an approach to machine translation that uses an artificial neural network to predict the likelihood of a sequence of words, typically modeling and then translating entire sentences in a single integrated model.

Properties
NMT systems require only a fraction of the memory needed by traditional statistical machine translation (SMT) models. Furthermore, unlike conventional translation systems, all parts of the neural translation model are trained jointly (end-to-end) to maximize the translation performance.

History
The first scientific paper on using neural networks in machine translation appeared in 2014 when Bahdanau et al. and Sutskever et al. proposed end-to-end neural network translation models and formally used the phrase "neural machine translation" in their research. The first large-scale NMT system was launched by Baidu in 2015. The following year Google and other organizations launched a variety of NMT systems. These systems were followed by substantial advances in the following years. These advances included: a large-vocabulary NMT, applications to image captioning, subword-NMT, multilingual NMT, multi-source NMT, character-level NMT, zero-resource NMT, and zero-shot NMT. In 2015 there was the first appearance of a NMT system in two public machine translation competitions (OpenMT'15 and WMT'15). The following year 90% of the winners at WMT were NMT systems.Since 2017, the European Patent Office has used neural machine translation to make information from the global patent system instantly accessible. The system, developed in collaboration with Google, is paired with 31 languages, and as of 2018, the system has translated over nine million documents.

Workings
NMT systems use deep learning and representation learning and depart from phrase-based statistical approaches that use separately engineered subcomponents by taking the whole sentence into account. Neural machine translation (NMT) is similar to what has been traditionally done in statistical machine translation (SMT). The main difference between NMT and SMT is the use of vector representations ("embeddings" and "continuous space representations") for words and internal states. The structure of the model in NMT systems is simpler than phrase-based models. There is no separate language model, translation model, and reordering model, but just a single sequence model that predicts one word at a time. However, this sequence prediction is conditioned on the entire source sentence and the already-produced target sequence.
Word sequence modeling in NMT systems was, at first, typically done using a recurrent neural network (RNN).
A bidirectional recurrent neural network, known as an encoder, is used by the neural network to encode a source sentence for a second RNN, known as a decoder, that is used to predict words in the target language. RNNs struggle to encode long inputs into a single vector. This can be addressed by using an attention mechanism which allows the decoder to focus on different input parts while generating each word. Further Coverage Models address the issues in these attention mechanisms, such as ignoring past alignment information leading to over-translation and under-translation.Convolutional Neural Networks (CNNs) are, in principle, somewhat better for long continuous sequences but were initially not used due to several weaknesses, but many of these were addressed with the development of "attention mechanisms".Transformer systems, which are attention-based models, remains the dominant architecture for several language pairs. The self-attention layers of the Transformer model learn the dependencies between words in a sequence by examining links between all the words in the paired sequences and by directly modeling those relationships.  This is a simpler approach than the gating mechanism that RNNs employ.  And its simplicity has enabled researchers to develop high-quality translation models with the Transformer model, even in low-resource settings.

Applications
One application for NMT is low resource machine translation, when only a small amount of data and examples are available for training. One such use case is ancient languages like Akkadian and its dialects, Babylonian and Assyrian.

Remarks


== References ==