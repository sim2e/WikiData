A distance transform, also known as distance map or distance field, is a derived representation of a digital image. The choice of the term depends on the point of view on the object in question: whether the initial image is transformed into another representation, or it is simply endowed with an additional map or field.
Distance fields can also be signed, in the case where it is important to distinguish whether the point is inside or outside of the shape.The map labels each pixel of the image with the distance to the nearest obstacle pixel. A most common type of obstacle pixel is a boundary pixel in a binary image. See the image for an example of a Chebyshev distance transform on a binary image.

Usually the transform/map is qualified with the chosen metric. For example, one may speak of Manhattan distance transform, if the underlying metric is Manhattan distance. Common metrics are:

Euclidean distance
Taxicab geometry, also known as City block distance or Manhattan distance.
Chebyshev distanceThere are several algorithms to compute the distance transform for these different distance metrics, however the computation of the exact Euclidean distance transform (EEDT) needs special treatment if it is computed on  the image grid. Recently, distance transform computation has also been proposed using a static  Schrodinger's equation. This particular approach has the benefit of obtaining an analytical closed-form solution to distance transforms, and of computing the average distance transform over a set of distance transforms, owing to the linearity of the Schr√∂dinger equation. Further, this approach has also been leveraged to extend distance transforms to line-segments and curves.Applications are digital image processing (e.g., blurring effects, skeletonizing), motion planning in robotics, medical-image analysis for prenatal genetic testing, and even pathfinding.

Uniformly-sampled signed distance fields have been used for GPU-accelerated font smoothing, for example by Valve researchers.Signed distance fields can also be used for (3D) solid modelling. Rendering on typical GPU hardware requires conversion to polygon meshes, e.g. by the marching cubes algorithm.

See also
Signed distance function
Function representation
Parallel curve
Level sets methods for distance computation.

References
External links
Fast distance transform in C++ by Felzenszwalb and Huttenlocher
Distance Transform tutorials in CVonline
Survey of fast exact Euclidean distance transform algorithms
Using distance mapping for AI
Distance Transforms by Henry Kwong and Dynamic Step Distance Transforms by Richard Scott, The Wolfram Demonstrations Project.
Morphological DistanceTransform function in Mathematica
Morphological Inverse Distance Transform function in Mathematica
A general algorithm for computing distance transforms in linear time [1]