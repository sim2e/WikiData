Scroll Lock (⤓ or ⇳) is a lock key (typically with an associated status light) on most IBM-compatible computer keyboards.
Depending on the operating system, it may be used for different purposes, and applications may assign functions to the key or change their behavior depending on its toggling state.The key is not frequently used, and therefore some reduced or specialized keyboards lack Scroll Lock altogether.
Pressing Ctrl+Scroll Lock performs the same function as pressing Ctrl+Pause/Break. This behavior is a remnant of the original IBM PC keyboards, which did not have a dedicated Pause/Break key. Instead, they assigned the Pause function to Ctrl+Num Lock and the Break function to Ctrl+Scroll Lock.

Function
Window scrolling
The Scroll Lock key was meant to lock all scrolling techniques, and is a vestige of the original IBM PC keyboard. In the original design, Scroll Lock was intended to modify the behavior of the arrow keys. When the Scroll Lock mode was on, the arrow keys would scroll the contents of a text window instead of moving the cursor. In this usage, Scroll Lock is a toggling lock key like Num Lock or Caps Lock, which have a state that persists after the key is released.
Today, this particular use of Scroll Lock is rare. Modern programs honoring this behavior include IBM Lotus Notes, Forté Agent, Image-Line FL Studio, Renoise, Cakewalk by BandLab, Microsoft Excel, Microsoft Project, LibreOffice Calc, and occasionally Microsoft Word.
Some text editors (such as Notepad++, Microsoft Visual Studio) exhibit similar behavior when the arrow keys are used with Ctrl pressed.
Most GUI environments neglect Scroll Lock, which means scrolling must be accomplished with a mouse, using means such as scrollbars or scroll wheels, or an "autoscroll" feature activated by the middle mouse button (which may be part of the scroll wheel).
Some web browsers including Google Chrome, Firefox, and Internet Explorer support a Caret browsing mode which can be toggled by F7. While the window scrolling behavior with Caret navigation disabled (the default) is similar to that suggested for Scroll Lock, enabling Caret navigation will enable a cursor scrolling behavior as if Scroll Lock were disabled.

Console scrolling
Pressing the Scroll Lock key in the Linux console while the text is scrolling through the screen freezes the console output (but not input) during which no further text is sent to the screen, while the program continues running as usual. When Scroll Lock is pressed again, the screen is unfrozen and all text generated during the freeze is displayed at once. This allows the user to pause the display and read long messages that scroll through the screen too quickly to read, such as when the system is booting up (provided the keyboard driver has already been loaded). If not configured otherwise, Ctrl+S and Ctrl+Q can be used instead of Scroll Lock in any terminal in Linux to freeze and unfreeze the terminal output respectively.
This behavior emulates the Hold Screen key or similar flow control mechanisms on computer terminals.
The behavior must be distinguished from pressing the Pause key during POST or under DOS, which, by default, has the effect of temporarily halting the running process.
On the FreeBSD system console, the Scroll Lock key additionally enables scrolling: after pressing Scroll Lock, one can use Page Up and Page Down to scroll up or down. Pressing Scroll Lock again disables this mode and moves back to the bottom of the output. The Linux console implemented this behaviour by using ⇧ Shift+Page Up and ⇧ Shift+Page Down, not requiring Scroll Lock to be active; this behavior was removed due to a vulnerability (CVE-2020-14390).

Boot diagnostics
In Multiuser DOS, System Manager, and REAL/32, activating Scroll Lock during boot will always enter a special diagnostic mode, where the operating system and loaded device drivers will display detailed status and debugging information about themselves and their interaction with the operating system, sometimes up to several screenfulls per loaded driver. Automatic scrolling is suspended for as long as Scroll Lock remains activated.DR-DOS 7.02 and higher provides a CONFIG.SYS directive named SCROLLOCK=ON|OFF to change the Scroll Lock status on the fly.
Activating Scroll Lock during boot will enter a DIAG mode as well, wherein some special drivers may display more verbose messages, but in contrast to the situation under the Multiuser DOS family normal DOS drivers do not typically display additional information. The operating system, however, will temporarily suspend any automatic timeouts (TIMEOUT=<seconds>,<character>,<switch>) in CONFIG.SYS trace (TRACE=ON|OFF) and F7/F8 single-stepping modes for as long as Scroll Lock is active.

Debugging
In the Microsoft Windows NT family starting with Windows 2000, a debugging feature can be enabled, that allows the user to manually crash the system, generating a memory dump for analysis of the current state of the operating system. This can be accomplished by setting the REG_DWORD registry key HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\i8042prt\Parameters\CrashOnCtrlScroll to 1. Once set, the user can hold the RCtrl key and tap the Scroll Lock key twice to trigger a Blue Screen of Death.In Microsoft Visual Basic 5.0 and 6.0, Ctrl+Pause/Break pauses the running program in the integrated development environment, as does its alias Ctrl+Scroll Lock.

Copy and paste
In conjunction with the alternative DOS keyboard and console drivers FreeKEYB and K3PLUS, Scroll Lock also served as part of a copy & paste facility between applications. Compared to the standard keyboard driver KEYB these drivers offered several extensions including an extended keystroke buffer with key stacking facility, macro recorder, and a second cursor called CopyCursor, which could be invoked on demand (by default on pressing Ctrl+Alt+F11 or the middle mouse button) and freely moved on the screen using the cursor keys or the mouse, even outside the area reachable by the standard cursor in the running application. Once invoked, pressing F11 (or the left mouse button) the characters under the CopyCursor could be stuffed, one after another, into the keyboard buffer, from where they would be read by the running application as emulated key (or Alt Numpad) input, thereby typically showing up at the location of the standard cursor. The CopyCursor would move to the next screen position after each F11 (or backwards with each ⇧ Shift+F11). Normal keyboard input was still possible while the CopyCursor was enabled, and the user could switch between the two cursors by toggling the Ctrl+Alt+F11 hotkey again. Pressing Esc or ↵ Enter would exit the CopyCursor, so that, on its next invocation, it would show up at the position of the standard cursor again rather than at its previous location. If the screen contents were scrolled, the position of the CopyCursor would move accordingly until reaching the display limits. With Scroll Lock activated, keypresses would still reach the normal keystroke buffer, while CopyCursor input would be stacked up internally for later use in a second queue, dynamically maintained within the extended keystroke buffer. Thereby, it was possible to "collect" selected screen output from different programs and spool out the data much later while within yet another application by toggling Scroll Lock off again. It was also possible to use this as input into the macro recorder for later use as scrap macro. Since this was an integral part of these keyboard drivers, it was fully transparent to running software and therefore worked with virtually any DOS programs, including at the command prompt, temporary shelled programs, and task switchers.

Other uses
IBM PC documentation called Scroll Lock an "inactive key". When PC Magazine asked an executive of keyboard manufacturer Key Tronic about the key's purpose in a 1983 interview, he replied "I don't know, but we put it on ours, too".The indicator light is sometimes used for other purposes such as a keyboard layout indicator in some Linux distributions or other applications, because doing so is less likely to cause problems than manipulating other keys/lights.
Keyboard, video, mouse switches (KVM) often use the Scroll Lock key on the keyboard connected to the KVM switch for selecting between computers. On KVM switches with On-screen display (OSD), a "double click" of the Scroll Lock key often brings up the OSD, allowing the user to select the desired computer from a list or access the configuration menu of the KVM. Some models, especially those which lack an OSD, switch to the input corresponding to the number key pressed after Scroll Lock, or in the case of some 2-port switches, the up and down arrow keys. Simple models with only two or four inputs may immediately switch to the next input following a double press of the Scroll Lock key.

Scroll Lock on keyboards without a Scroll Lock key
Some laptops and keyboards do not have a physical Scroll Lock key. Some of these have a second function on another key that acts as if a Scroll Lock key was pressed. Some common methods are:

Fn+S or Fn+F6 on certain Dell laptops.
Fn+C or Fn+K on certain Lenovo laptops.
Fn+C on certain HP laptops.
Fn+F11 on Windows.Another way to press the Scroll Lock key is to use an on-screen keyboard. In Windows 8 and later versions, it can be found in the "Windows Ease of Access" program group. This will provide access to an emulation of a standard 101/102-key keyboard.

See also
Arrow keys
Break key
Scroll wheel
Sys Rq

References
External links
Straightdope article about the Scroll Lock key