In the theory of formal languages, the Myhill–Nerode theorem provides a necessary and sufficient condition for a language to be regular. The theorem is named for John Myhill and Anil Nerode, who proved it at the University of Chicago in 1957 (Nerode & Sauer 1957, p. ii).

Statement
Given a language 
  
    
      
        L
      
    
    {\displaystyle L}
  , and a pair of strings 
  
    
      
        x
      
    
    {\displaystyle x}
   and 
  
    
      
        y
      
    
    {\displaystyle y}
  , define a  distinguishing extension to be a string 
  
    
      
        z
      
    
    {\displaystyle z}
   such that
exactly one of the two strings 
  
    
      
        x
        z
      
    
    {\displaystyle xz}
   and 
  
    
      
        y
        z
      
    
    {\displaystyle yz}
   belongs to 
  
    
      
        L
      
    
    {\displaystyle L}
  .
Define a relation 
  
    
      
        
          ∼
          
            L
          
        
      
    
    {\displaystyle \sim _{L}}
   on strings as 
  
    
      
        x
        
        
          ∼
          
            L
          
        
         
        y
      
    
    {\displaystyle x\;\sim _{L}\ y}
   if there is no distinguishing extension for 
  
    
      
        x
      
    
    {\displaystyle x}
   and 
  
    
      
        y
      
    
    {\displaystyle y}
  .  It is easy to show that 
  
    
      
        
          ∼
          
            L
          
        
      
    
    {\displaystyle \sim _{L}}
   is an equivalence relation on strings, and thus it divides the set of all strings into  equivalence classes.
The Myhill–Nerode theorem states that a language 
  
    
      
        L
      
    
    {\displaystyle L}
   is regular if and only if 
  
    
      
        
          ∼
          
            L
          
        
      
    
    {\displaystyle \sim _{L}}
   has a finite number of equivalence classes, and moreover, that this number is equal to the number of states in the minimal deterministic finite automaton (DFA) accepting 
  
    
      
        L
      
    
    {\displaystyle L}
  . Furthermore, every minimal DFA for the language is isomorphic to the canonical one (Hopcroft & Ullman 1979).

Generally, for any language, the constructed automaton is a state automaton acceptor. However, it does not necessarily have finitely many states. The Myhill–Nerode theorem shows that finiteness is necessary and sufficient for language regularity.
Some authors refer to the 
  
    
      
        
          ∼
          
            L
          
        
      
    
    {\displaystyle \sim _{L}}
   relation as Nerode congruence, in honor of Anil Nerode.

Use and consequences
The Myhill–Nerode theorem may be used to show that a language 
  
    
      
        L
      
    
    {\displaystyle L}
   is regular by proving that the number of equivalence classes of 
  
    
      
        
          ∼
          
            L
          
        
      
    
    {\displaystyle \sim _{L}}
   is finite. This may be done by an exhaustive case analysis in which, beginning from the empty string, distinguishing extensions are used to find additional equivalence classes until no more can be found. For example, the language consisting of binary representations of numbers that can be divided by 3 is regular. Given the empty string, 
  
    
      
        00
      
    
    {\displaystyle 00}
   (or 
  
    
      
        11
      
    
    {\displaystyle 11}
  ), 
  
    
      
        01
      
    
    {\displaystyle 01}
  , and 
  
    
      
        10
      
    
    {\displaystyle 10}
   are distinguishing extensions resulting in the three classes (corresponding to numbers that give remainders 0, 1 and 2 when divided by 3), but after this step there is no distinguishing extension anymore. The minimal automaton accepting our language would have three states corresponding to these three equivalence classes.
Another immediate corollary of the theorem is that if for a language 
  
    
      
        L
      
    
    {\displaystyle L}
   the relation 
  
    
      
        
          ∼
          
            L
          
        
      
    
    {\displaystyle \sim _{L}}
   has infinitely many equivalence classes, it is not regular.  It is this corollary that is frequently used to prove that a language is not regular.

Generalizations
The Myhill–Nerode theorem can be generalized to tree automata.

See also
Pumping lemma for regular languages, an alternative method for proving that a language is not regular. The pumping lemma may not always be able to prove that a language is not regular.
Syntactic monoid

References
Hopcroft, John E.; Ullman, Jeffrey D. (1979), "Chapter 3.4", Introduction to Automata Theory, Languages, and Computation, Reading, Massachusetts: Addison-Wesley Publishing, ISBN 0-201-02988-X.
Nerode, Anil (1958), "Linear Automaton Transformations", Proceedings of the American Mathematical Society, 9 (4): 541–544, doi:10.1090/S0002-9939-1958-0135681-9, JSTOR 2033204.
Nerode, Anil; Sauer, Burton P. (Nov 1957), Fundamental Concepts in the Theory of Systems (WADC Technical Report), Wright Air Development Center. ASTIA Document No. AD 155741.
Regan, Kenneth (2007), Notes on the Myhill-Nerode Theorem (PDF), retrieved 2016-03-22.

Further reading
Bakhadyr Khoussainov; Anil Nerode (6 December 2012). Automata Theory and its Applications. Springer Science & Business Media. ISBN 978-1-4612-0171-7.