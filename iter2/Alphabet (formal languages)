In formal language theory, an alphabet, sometimes called a vocabulary, is a non-empty set of indivisible symbols/glyphs, typically thought of as representing letters, characters, digits, phonemes, or even words. Alphabets in this technical sense of a set are used in a diverse range of fields including logic, mathematics, computer science, and linguistics. An alphabet may have any cardinality ("size") and, depending on its purpose, may be finite (e.g., the alphabet of letters "a" through "z"), countable (e.g., 
  
    
      
        {
        
          v
          
            1
          
        
        ,
        
          v
          
            2
          
        
        ,
        …
        }
      
    
    {\displaystyle \{v_{1},v_{2},\ldots \}}
  ), or even uncountable (e.g., 
  
    
      
        {
        
          v
          
            x
          
        
        :
        x
        ∈
        
          R
        
        }
      
    
    {\displaystyle \{v_{x}:x\in \mathbb {R} \}}
  ).
Strings, also known as "words" or "sentences", over an alphabet are defined as a sequence of the symbols from the alphabet set. For example, the alphabet of lowercase letters "a" through "z" can be used to form English words like "iceberg" while the alphabet of both upper and lower case letters can also be used to form proper names like "Wikipedia". A common alphabet is {0,1}, the binary alphabet, and a "00101111" is an example of a binary string. Infinite sequence of symbols may be considered as well (see Omega language).
It is often necessary for practical purposes to restrict the symbols in an alphabet so that they are unambiguous when interpreted. For instance, if the two-member alphabet is {00,0}, a string written on paper as "000" is ambiguous because it is unclear if it is a sequence of three "0" symbols, a "00" followed by a "0", or a "0" followed by a "00".

Notation
If L is a formal language, i.e. a (possibly infinite) set of finite-length strings, the alphabet of L is the set of all symbols that may occur in any string in L.
For example, if L is the set of all variable identifiers in the programming language  C, L's alphabet is the set { a, b, c, ..., x, y, z, A, B, C, ..., X, Y, Z, 0, 1, 2, ..., 7, 8, 9, _ }.
Given an alphabet 
  
    
      
        Σ
      
    
    {\displaystyle \Sigma }
  , the set of all strings of length 
  
    
      
        n
      
    
    {\displaystyle n}
   over the alphabet 
  
    
      
        Σ
      
    
    {\displaystyle \Sigma }
   is indicated by 
  
    
      
        
          Σ
          
            n
          
        
      
    
    {\displaystyle \Sigma ^{n}}
  . The set 
  
    
      
        
          ⋃
          
            i
            ∈
            
              N
            
          
        
        
          Σ
          
            i
          
        
      
    
    {\textstyle \bigcup _{i\in \mathbb {N} }\Sigma ^{i}}
   of all finite strings (regardless of their length) is indicated by the Kleene star operator as 
  
    
      
        
          Σ
          
            ∗
          
        
      
    
    {\displaystyle \Sigma ^{*}}
  , and is also called the Kleene closure of 
  
    
      
        Σ
      
    
    {\displaystyle \Sigma }
  . The notation 
  
    
      
        
          Σ
          
            ω
          
        
      
    
    {\displaystyle \Sigma ^{\omega }}
   indicates the set of all infinite sequences over the alphabet 
  
    
      
        Σ
      
    
    {\displaystyle \Sigma }
  , and 
  
    
      
        
          Σ
          
            ∞
          
        
      
    
    {\displaystyle \Sigma ^{\infty }}
   indicates the set 
  
    
      
        
          Σ
          
            ∗
          
        
        ∪
        
          Σ
          
            ω
          
        
      
    
    {\displaystyle \Sigma ^{\ast }\cup \Sigma ^{\omega }}
   of all finite or infinite sequences.
For example, using the binary alphabet {0,1}, the strings ε, 0, 1, 00, 01, 10, 11, 000, etc. are all in the Kleene closure of the alphabet (where ε represents the empty string).

Applications
Alphabets are important in the use of formal languages, automata and semiautomata.  In most cases, for defining instances of automata, such as deterministic finite automata (DFAs), it is required to specify an alphabet from which the input strings for the automaton are built. In these applications, an alphabet is usually required to be a finite set, but is not otherwise restricted.
When using automata, regular expressions, or formal grammars as part of string-processing algorithms, the alphabet may be assumed to be the character set of the text to be processed by these algorithms, or a subset of allowable characters from the character set.

See also
Combinatorics on words
Terminal and nonterminal symbols

References
Literature
John E. Hopcroft and Jeffrey D. Ullman, Introduction to Automata Theory, Languages, and Computation, Addison-Wesley Publishing, Reading Massachusetts, 1979. ISBN 0-201-02988-X.