In computer science, information science and systems engineering, ontology engineering is a field which studies the methods and methodologies for building ontologies, which encompasses a representation, formal naming and definition of the categories, properties and relations between the concepts, data and entities of a given domain of interest. In a broader sense, this field also includes a knowledge construction of the domain using formal ontology representations such as OWL/RDF.
A large-scale representation of abstract concepts such as actions, time, physical objects and beliefs would be an example of ontological engineering. Ontology engineering is one of the areas of applied ontology, and can be seen as an application of philosophical ontology. Core ideas and objectives of ontology engineering are also central in conceptual modeling.

Ontology engineering aims at making explicit the knowledge contained within software applications, and within enterprises and business procedures for a particular domain. Ontology engineering offers a direction towards solving the inter-operability problems brought about by semantic obstacles, i.e. the obstacles related to the definitions of business terms and software classes. Ontology engineering is a set of tasks related to the development of ontologies for a particular domain.
Automated processing of information not interpretable by software agents can be improved by adding rich semantics to the corresponding resources, such as video files. One of the approaches for the formal conceptualization of represented knowledge domains is the use of machine-interpretable ontologies, which provide structured data in, or based on, RDF, RDFS, and OWL. Ontology engineering is the design and creation of such ontologies, which can contain more than just the list of terms (controlled vocabulary); they contain terminological, assertional, and relational axioms to define concepts (classes), individuals, and roles (properties) (TBox, ABox, and RBox, respectively). Ontology engineering is a relatively new field of study concerning the ontology development process, the ontology life cycle, the methods and methodologies for building ontologies, and the tool suites and languages that support them.
A common way to provide the logical underpinning of ontologies is to formalize the axioms with description logics, which can then be translated to any serialization of RDF, such as RDF/XML or Turtle. Beyond the description logic axioms, ontologies might also contain SWRL rules. The concept definitions can be mapped to any kind of resource or resource segment in RDF, such as images, videos, and regions of interest, to annotate objects, persons, etc., and interlink them with related resources across knowledge bases, ontologies, and LOD datasets. This information, based on human experience and knowledge, is valuable for reasoners for the automated interpretation of sophisticated and ambiguous contents, such as the visual content of multimedia resources. Application areas of ontology-based reasoning include, but are not limited to, information retrieval, automated scene interpretation, and knowledge discovery.

Ontology languages
An ontology language is a formal language used to encode the ontology. There are a number of such languages for ontologies, both proprietary and standards-based:

Common logic is ISO standard 24707, a specification for a family of ontology languages that can be accurately translated into each other.
The Cyc project has its own ontology language called CycL, based on first-order predicate calculus with some higher-order extensions.
The Gellish language includes rules for its own extension and thus integrates an ontology with an ontology language.
IDEF5 is a software engineering method to develop and maintain usable, accurate, domain ontologies.
KIF is a syntax for first-order logic that is based on S-expressions.
Rule Interchange Format (RIF), F-Logic and its successor ObjectLogic combine ontologies and rules.
OWL is a language for making ontological statements, developed as a follow-on from RDF and RDFS, as well as earlier ontology language projects including OIL, DAML and DAML+OIL. OWL is intended to be used over the World Wide Web, and all its elements (classes, properties and individuals) are defined as RDF resources, and identified by URIs.
OntoUML is a well-founded language for specifying reference ontologies.
SHACL (RDF SHapes Constraints Language) is a language for describing structure of RDF data. It can be used together with RDFS and OWL or it can be used independently from them.
XBRL (Extensible Business Reporting Language) is a syntax for expressing business semantics.

Ontology engineering in life sciences
Life sciences is flourishing with ontologies that biologists use to make sense of their experiments. For inferring correct conclusions from experiments, ontologies have to be structured optimally against the knowledge base they represent. The structure of an ontology needs to be changed continuously so that it is an accurate representation of the underlying domain.
Recently, an automated method was introduced for engineering ontologies in life sciences such as Gene Ontology (GO), one of the most successful and widely used biomedical ontology. Based on information theory, it restructures ontologies so that the levels represent the desired specificity of the concepts. Similar information theoretic approaches have also been used for optimal partition of Gene Ontology. Given the mathematical nature of such engineering algorithms, these optimizations can be automated to produce a principled and scalable architecture to restructure ontologies such as GO.
Open Biomedical Ontologies (OBO), a 2006 initiative of  the U.S. National Center for Biomedical Ontology, provides a common 'foundry' for various ontology initiatives, amongst which are:

The Generic Model Organism Project (GMOD)
Gene Ontology Consortium
Sequence Ontology
Ontology Lookup Service
The Plant Ontology Consortium
Standards and Ontologies for Functional Genomicsand more

Methodologies and tools for ontology engineering
DOGMA
DogmaModeler
KAON
OntoClean
HOZO
Protégé (software)
Gra.fo (http://gra.fo)
SABiO
TopBraid Composer
TopBraid EDG
HCOME: Human-centered collaborative ontology engineering methodology (http://semanticweb.org/wiki/SharedHCONE.html Archived 2015-09-25 at the Wayback Machine and HCOME-3O)

See also
Ontology (information science)
Ontology components
Ontology double articulation
Ontology learning
Ontology modularization
Semantic decision table
Semantic integration
Semantic technology
Semantic Web
Linked data

References
This article incorporates public domain material from the National Institute of Standards and Technology.

Further reading
Kotis, K., A. Papasalouros, G. A. Vouros, N. Pappas, and K. Zoumpatianos, "Enhancing the Collective Knowledge for the Engineering of Ontologies in Open and Socially Constructed Learning Spaces", Journal of Universal Computer Science, vol. 17, issue 12, pp. 1710–1742, 08/2011
Kotis, K., and A. Papasalouros, "Learning useful kick-off ontologies from Query Logs: HCOME revised", 4th International Conference on Complex, Intelligent and Software Intensive Systems (CISIS-2010), Kracow, IEEE Computer Society Press, 2010.
John Davies (Ed.) (2006). Semantic Web Technologies: Trends and Research in Ontology-based Systems. Wiley. ISBN 978-0-470-02596-3
Asunción Gómez-Pérez, Mariano Fernández-López, Oscar Corcho (2004). Ontological Engineering: With Examples from the Areas of Knowledge Management, E-commerce and the Semantic Web. Springer, 2004.
Jarrar, Mustafa (2006). "Position paper". Proceedings of the 15th international conference on World Wide Web - WWW '06. pp. 497–503. doi:10.1145/1135777.1135850. ISBN 978-1-59593-323-2. S2CID 14184354.
Mustafa Jarrar and Robert Meersman (2008). "Ontology Engineering -The DOGMA Approach". Book Chapter (Chapter 3). In Advances in Web Semantics I. Volume LNCS 4891, Springer.
Riichiro Mizoguchi (2004). "Tutorial on ontological engineering: part 3: Advanced course of ontological engineering" Archived 2013-03-09 at the Wayback Machine. In: New Generation Computing. Ohmsha & Springer-Verlag, 22(2):198-220.
Elena Paslaru Bontas Simperl and Christoph Tempich (2006). "Ontology Engineering: A Reality Check"
Devedzić, Vladan (2002). "Understanding ontological engineering". Communications of the ACM. 45 (4): 136–144. CiteSeerX 10.1.1.218.7546. doi:10.1145/505248.506002. S2CID 5352880.
Sure, York, Staab, Steffen and Studer, Rudi (2009). Ontology Engineering Methodology. In Staab, Steffen & Studer, Rudi (eds.) Handbook on Ontologies (2nd edition), Springer-Verlag, Heidelberg. ISBN 978-3-540-70999-2

External links
Ontopia.net: Metadata?  Thesauri? Taxonomies? Topic Maps! Making Sense of it All, by Lars Marius Garshol, 2004.
OntologyEngineering.org: Ontology Engineering With Diagrams