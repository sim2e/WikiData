A Bézier curve ( BEH-zee-ay) is a parametric curve used in computer graphics and related fields. A set of discrete "control points" defines a smooth, continuous curve by means of a formula. Usually the curve is intended to approximate a real-world shape that otherwise has no mathematical representation or whose representation is unknown or too complicated. The Bézier curve is named after French engineer Pierre Bézier (1910–1999), who used it in the 1960s for designing curves for the bodywork of Renault cars. Other uses include the design of computer fonts and animation. Bézier curves can be combined to form a Bézier spline, or generalized to higher dimensions to form Bézier surfaces. The Bézier triangle is a special case of the latter.
In vector graphics, Bézier curves are used to model smooth curves that can be scaled indefinitely. "Paths", as they are commonly referred to in image manipulation programs, are combinations of linked Bézier curves. Paths are not bound by the limits of rasterized images and are intuitive to modify.
Bézier curves are also used in the time domain, particularly in animation, user interface design and smoothing cursor trajectory in eye gaze controlled interfaces. For example, a Bézier curve can be used to specify the velocity over time of an object such as an icon moving from A to B, rather than simply moving at a fixed number of pixels per step. When animators or interface designers talk about the "physics" or "feel" of an operation, they may be referring to the particular Bézier curve used to control the velocity over time of the move in question.
This also applies to robotics where the motion of a welding arm, for example, should be smooth to avoid unnecessary wear.

Invention
The mathematical basis for Bézier curves—the Bernstein polynomials—was established in 1912, but the polynomials were not applied to graphics until some 50 years later when mathematician Paul de Casteljau in 1959 developed de Casteljau's algorithm, a numerically stable method for evaluating the curves, and became the first to apply them to computer-aided design at French automaker Citroën. Yet, de Casteljau's method was patented in France but not published until the 1980s while the Bézier polynomials were widely publicised in the 1960s by the French engineer Pierre Bézier, who discovered them independently and used them to design automobile bodies at Renault.

Specific cases
A Bézier curve is defined by a set of control points P0 through Pn, where n is called the order of the curve (n = 1 for linear, 2 for quadratic, 3 for cubic, etc.). The first and last control points are always the endpoints of the curve; however, the intermediate control points generally do not lie on the curve. The sums in the following sections are to be understood as affine combinations – that is, the coefficients sum to 1.

Linear Bézier curves
Given distinct points P0 and P1, a linear Bézier curve is simply a line between those two points. The curve is given by

  
    
      
        
          B
        
        (
        t
        )
        =
        
          
            P
          
          
            0
          
        
        +
        t
        (
        
          
            P
          
          
            1
          
        
        −
        
          
            P
          
          
            0
          
        
        )
        =
        (
        1
        −
        t
        )
        
          
            P
          
          
            0
          
        
        +
        t
        
          
            P
          
          
            1
          
        
        ,
         
        0
        ≤
        t
        ≤
        1
      
    
    {\displaystyle \mathbf {B} (t)=\mathbf {P} _{0}+t(\mathbf {P} _{1}-\mathbf {P} _{0})=(1-t)\mathbf {P} _{0}+t\mathbf {P} _{1},\ 0\leq t\leq 1}
  and is equivalent to linear interpolation. The quantity 
  
    
      
        
          
            P
          
          
            1
          
        
        −
        
          
            P
          
          
            0
          
        
      
    
    {\displaystyle \mathbf {P} _{1}-\mathbf {P} _{0}}
   represents the displacement vector from the start point to the end point.

Quadratic Bézier curves
A quadratic Bézier curve is the path traced by the function B(t), given points P0, P1, and P2,

  
    
      
        
          B
        
        (
        t
        )
        =
        (
        1
        −
        t
        )
        [
        (
        1
        −
        t
        )
        
          
            P
          
          
            0
          
        
        +
        t
        
          
            P
          
          
            1
          
        
        ]
        +
        t
        [
        (
        1
        −
        t
        )
        
          
            P
          
          
            1
          
        
        +
        t
        
          
            P
          
          
            2
          
        
        ]
        ,
         
        0
        ≤
        t
        ≤
        1
      
    
    {\displaystyle \mathbf {B} (t)=(1-t)[(1-t)\mathbf {P} _{0}+t\mathbf {P} _{1}]+t[(1-t)\mathbf {P} _{1}+t\mathbf {P} _{2}],\ 0\leq t\leq 1}
  ,which can be interpreted as the linear interpolant of corresponding points on the linear Bézier curves from P0 to P1 and from P1 to P2 respectively. Rearranging the preceding equation yields:

  
    
      
        
          B
        
        (
        t
        )
        =
        (
        1
        −
        t
        
          )
          
            2
          
        
        
          
            P
          
          
            0
          
        
        +
        2
        (
        1
        −
        t
        )
        t
        
          
            P
          
          
            1
          
        
        +
        
          t
          
            2
          
        
        
          
            P
          
          
            2
          
        
        ,
         
        0
        ≤
        t
        ≤
        1.
      
    
    {\displaystyle \mathbf {B} (t)=(1-t)^{2}\mathbf {P} _{0}+2(1-t)t\mathbf {P} _{1}+t^{2}\mathbf {P} _{2},\ 0\leq t\leq 1.}
  This can be written in a way that highlights the symmetry with respect to P1:

  
    
      
        
          B
        
        (
        t
        )
        =
        
          
            P
          
          
            1
          
        
        +
        (
        1
        −
        t
        
          )
          
            2
          
        
        (
        
          
            P
          
          
            0
          
        
        −
        
          
            P
          
          
            1
          
        
        )
        +
        
          t
          
            2
          
        
        (
        
          
            P
          
          
            2
          
        
        −
        
          
            P
          
          
            1
          
        
        )
        ,
         
        0
        ≤
        t
        ≤
        1.
      
    
    {\displaystyle \mathbf {B} (t)=\mathbf {P} _{1}+(1-t)^{2}(\mathbf {P} _{0}-\mathbf {P} _{1})+t^{2}(\mathbf {P} _{2}-\mathbf {P} _{1}),\ 0\leq t\leq 1.}
  Which immediately gives the derivative of the Bézier curve with respect to t:

  
    
      
        
          
            B
          
          ′
        
        (
        t
        )
        =
        2
        (
        1
        −
        t
        )
        (
        
          
            P
          
          
            1
          
        
        −
        
          
            P
          
          
            0
          
        
        )
        +
        2
        t
        (
        
          
            P
          
          
            2
          
        
        −
        
          
            P
          
          
            1
          
        
        )
        ,
      
    
    {\displaystyle \mathbf {B} '(t)=2(1-t)(\mathbf {P} _{1}-\mathbf {P} _{0})+2t(\mathbf {P} _{2}-\mathbf {P} _{1}),}
  from which it can be concluded that the tangents to the curve at P0 and P2 intersect at P1. As t increases from 0 to 1, the curve departs from P0 in the direction of P1, then bends to arrive at P2 from the direction of P1.
The second derivative of the Bézier curve with respect to t is

  
    
      
        
          
            B
          
          ″
        
        (
        t
        )
        =
        2
        (
        
          
            P
          
          
            2
          
        
        −
        2
        
          
            P
          
          
            1
          
        
        +
        
          
            P
          
          
            0
          
        
        )
        .
      
    
    {\displaystyle \mathbf {B} ''(t)=2(\mathbf {P} _{2}-2\mathbf {P} _{1}+\mathbf {P} _{0}).}

Cubic Bézier curves
Four points P0, P1, P2 and P3 in the plane or in higher-dimensional space define a cubic Bézier curve.
The curve starts at P0 going toward P1 and arrives at P3 coming from the direction of P2. Usually, it will not pass through P1 or P2; these points are only there to provide directional information. The distance between P1 and P2 determines "how far" and "how fast" the curve moves towards P1 before turning towards P2.
Writing BPi,Pj,Pk(t) for the quadratic Bézier curve defined by points Pi, Pj, and Pk, the cubic Bézier curve can be defined as an affine combination of two quadratic Bézier curves:

  
    
      
        
          B
        
        (
        t
        )
        =
        (
        1
        −
        t
        )
        
          
            B
          
          
            
              
                P
              
              
                0
              
            
            ,
            
              
                P
              
              
                1
              
            
            ,
            
              
                P
              
              
                2
              
            
          
        
        (
        t
        )
        +
        t
        
          
            B
          
          
            
              
                P
              
              
                1
              
            
            ,
            
              
                P
              
              
                2
              
            
            ,
            
              
                P
              
              
                3
              
            
          
        
        (
        t
        )
        ,
         
        0
        ≤
        t
        ≤
        1.
      
    
    {\displaystyle \mathbf {B} (t)=(1-t)\mathbf {B} _{\mathbf {P} _{0},\mathbf {P} _{1},\mathbf {P} _{2}}(t)+t\mathbf {B} _{\mathbf {P} _{1},\mathbf {P} _{2},\mathbf {P} _{3}}(t),\ 0\leq t\leq 1.}
  The explicit form of the curve is:

  
    
      
        
          B
        
        (
        t
        )
        =
        (
        1
        −
        t
        
          )
          
            3
          
        
        
          
            P
          
          
            0
          
        
        +
        3
        (
        1
        −
        t
        
          )
          
            2
          
        
        t
        
          
            P
          
          
            1
          
        
        +
        3
        (
        1
        −
        t
        )
        
          t
          
            2
          
        
        
          
            P
          
          
            2
          
        
        +
        
          t
          
            3
          
        
        
          
            P
          
          
            3
          
        
        ,
         
        0
        ≤
        t
        ≤
        1.
      
    
    {\displaystyle \mathbf {B} (t)=(1-t)^{3}\mathbf {P} _{0}+3(1-t)^{2}t\mathbf {P} _{1}+3(1-t)t^{2}\mathbf {P} _{2}+t^{3}\mathbf {P} _{3},\ 0\leq t\leq 1.}
  For some choices of P1 and P2 the curve may intersect itself, or contain a cusp.
Any series of 4 distinct points can be converted to a cubic Bézier curve that goes through all 4 points in order.
Given the starting and ending point of some cubic Bézier curve, and the points along the curve corresponding to t = 1/3 and t = 2/3, the control points for the original Bézier curve can be recovered.The derivative of the cubic Bézier curve with respect to t is

  
    
      
        
          
            B
          
          ′
        
        (
        t
        )
        =
        3
        (
        1
        −
        t
        
          )
          
            2
          
        
        (
        
          
            P
          
          
            1
          
        
        −
        
          
            P
          
          
            0
          
        
        )
        +
        6
        (
        1
        −
        t
        )
        t
        (
        
          
            P
          
          
            2
          
        
        −
        
          
            P
          
          
            1
          
        
        )
        +
        3
        
          t
          
            2
          
        
        (
        
          
            P
          
          
            3
          
        
        −
        
          
            P
          
          
            2
          
        
        )
        
        .
      
    
    {\displaystyle \mathbf {B} '(t)=3(1-t)^{2}(\mathbf {P} _{1}-\mathbf {P} _{0})+6(1-t)t(\mathbf {P} _{2}-\mathbf {P} _{1})+3t^{2}(\mathbf {P} _{3}-\mathbf {P} _{2})\,.}
  The second derivative of the Bézier curve with respect to t is

  
    
      
        
          
            B
          
          ″
        
        (
        t
        )
        =
        6
        (
        1
        −
        t
        )
        (
        
          
            P
          
          
            2
          
        
        −
        2
        
          
            P
          
          
            1
          
        
        +
        
          
            P
          
          
            0
          
        
        )
        +
        6
        t
        (
        
          
            P
          
          
            3
          
        
        −
        2
        
          
            P
          
          
            2
          
        
        +
        
          
            P
          
          
            1
          
        
        )
        
        .
      
    
    {\displaystyle \mathbf {B} ''(t)=6(1-t)(\mathbf {P} _{2}-2\mathbf {P} _{1}+\mathbf {P} _{0})+6t(\mathbf {P} _{3}-2\mathbf {P} _{2}+\mathbf {P} _{1})\,.}

General definition
Bézier curves can be defined for any degree n.

Recursive definition
A recursive definition for the Bézier curve of degree n expresses it as a point-to-point linear combination (linear interpolation) of a pair of corresponding points in two Bézier curves of degree n − 1.
Let 
  
    
      
        
          
            B
          
          
            
              
                P
              
              
                0
              
            
            
              
                P
              
              
                1
              
            
            …
            
              
                P
              
              
                k
              
            
          
        
      
    
    {\displaystyle \mathbf {B} _{\mathbf {P} _{0}\mathbf {P} _{1}\ldots \mathbf {P} _{k}}}
   denote the Bézier curve determined by any selection of points P0, P1, ..., Pk. Then to start,

  
    
      
        
          
            B
          
          
            
              
                P
              
              
                0
              
            
          
        
        (
        t
        )
        =
        
          
            P
          
          
            0
          
        
        
          , and
        
      
    
    {\displaystyle \mathbf {B} _{\mathbf {P} _{0}}(t)=\mathbf {P} _{0}{\text{, and}}}
  
  
    
      
        
          B
        
        (
        t
        )
        =
        
          
            B
          
          
            
              
                P
              
              
                0
              
            
            
              
                P
              
              
                1
              
            
            …
            
              
                P
              
              
                n
              
            
          
        
        (
        t
        )
        =
        (
        1
        −
        t
        )
        
          
            B
          
          
            
              
                P
              
              
                0
              
            
            
              
                P
              
              
                1
              
            
            …
            
              
                P
              
              
                n
                −
                1
              
            
          
        
        (
        t
        )
        +
        t
        
          
            B
          
          
            
              
                P
              
              
                1
              
            
            
              
                P
              
              
                2
              
            
            …
            
              
                P
              
              
                n
              
            
          
        
        (
        t
        )
      
    
    {\displaystyle \mathbf {B} (t)=\mathbf {B} _{\mathbf {P} _{0}\mathbf {P} _{1}\ldots \mathbf {P} _{n}}(t)=(1-t)\mathbf {B} _{\mathbf {P} _{0}\mathbf {P} _{1}\ldots \mathbf {P} _{n-1}}(t)+t\mathbf {B} _{\mathbf {P} _{1}\mathbf {P} _{2}\ldots \mathbf {P} _{n}}(t)}
  This recursion is elucidated in the animations below.

Explicit definition
The formula can be expressed explicitly as follows (where t0 and (1-t)0 are extended continuously to be 1 throughout [0,1]):

  
    
      
        
          
            
              
                
                  B
                
                (
                t
                )
              
              
                
                =
                
                  ∑
                  
                    i
                    =
                    0
                  
                  
                    n
                  
                
                
                  
                    
                      (
                    
                    
                      n
                      i
                    
                    
                      )
                    
                  
                
                (
                1
                −
                t
                
                  )
                  
                    n
                    −
                    i
                  
                
                
                  t
                  
                    i
                  
                
                
                  
                    P
                  
                  
                    i
                  
                
              
            
            
              
              
                
                =
                (
                1
                −
                t
                
                  )
                  
                    n
                  
                
                
                  
                    P
                  
                  
                    0
                  
                
                +
                
                  
                    
                      (
                    
                    
                      n
                      1
                    
                    
                      )
                    
                  
                
                (
                1
                −
                t
                
                  )
                  
                    n
                    −
                    1
                  
                
                t
                
                  
                    P
                  
                  
                    1
                  
                
                +
                ⋯
                +
                
                  
                    
                      (
                    
                    
                      n
                      
                        n
                        −
                        1
                      
                    
                    
                      )
                    
                  
                
                (
                1
                −
                t
                )
                
                  t
                  
                    n
                    −
                    1
                  
                
                
                  
                    P
                  
                  
                    n
                    −
                    1
                  
                
                +
                
                  t
                  
                    n
                  
                
                
                  
                    P
                  
                  
                    n
                  
                
                ,
              
              
              
                0
                ⩽
                t
                ⩽
                1
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}\mathbf {B} (t)&=\sum _{i=0}^{n}{n \choose i}(1-t)^{n-i}t^{i}\mathbf {P} _{i}\\&=(1-t)^{n}\mathbf {P} _{0}+{n \choose 1}(1-t)^{n-1}t\mathbf {P} _{1}+\cdots +{n \choose n-1}(1-t)t^{n-1}\mathbf {P} _{n-1}+t^{n}\mathbf {P} _{n},&&0\leqslant t\leqslant 1\end{aligned}}}
  where 
  
    
      
        
          
            
              
                (
              
              
                n
                i
              
              
                )
              
            
          
        
      
    
    {\displaystyle \scriptstyle {n \choose i}}
   are the binomial coefficients.
For example, when n = 5:

  
    
      
        
          
            
              
                
                  B
                
                (
                t
                )
              
              
                
                =
                (
                1
                −
                t
                
                  )
                  
                    5
                  
                
                
                  
                    P
                  
                  
                    0
                  
                
                +
                5
                t
                (
                1
                −
                t
                
                  )
                  
                    4
                  
                
                
                  
                    P
                  
                  
                    1
                  
                
                +
                10
                
                  t
                  
                    2
                  
                
                (
                1
                −
                t
                
                  )
                  
                    3
                  
                
                
                  
                    P
                  
                  
                    2
                  
                
                +
                10
                
                  t
                  
                    3
                  
                
                (
                1
                −
                t
                
                  )
                  
                    2
                  
                
                
                  
                    P
                  
                  
                    3
                  
                
                +
                5
                
                  t
                  
                    4
                  
                
                (
                1
                −
                t
                )
                
                  
                    P
                  
                  
                    4
                  
                
                +
                
                  t
                  
                    5
                  
                
                
                  
                    P
                  
                  
                    5
                  
                
                ,
              
              
              
                0
                ⩽
                t
                ⩽
                1.
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}\mathbf {B} (t)&=(1-t)^{5}\mathbf {P} _{0}+5t(1-t)^{4}\mathbf {P} _{1}+10t^{2}(1-t)^{3}\mathbf {P} _{2}+10t^{3}(1-t)^{2}\mathbf {P} _{3}+5t^{4}(1-t)\mathbf {P} _{4}+t^{5}\mathbf {P} _{5},&&0\leqslant t\leqslant 1.\end{aligned}}}

Terminology
Some terminology is associated with these parametric curves. We have

  
    
      
        
          B
        
        (
        t
        )
        =
        
          ∑
          
            i
            =
            0
          
          
            n
          
        
        
          b
          
            i
            ,
            n
          
        
        (
        t
        )
        
          
            P
          
          
            i
          
        
        ,
         
         
         
        0
        ≤
        t
        ≤
        1
      
    
    {\displaystyle \mathbf {B} (t)=\sum _{i=0}^{n}b_{i,n}(t)\mathbf {P} _{i},\ \ \ 0\leq t\leq 1}
  where the polynomials

  
    
      
        
          b
          
            i
            ,
            n
          
        
        (
        t
        )
        =
        
          
            
              (
            
            
              n
              i
            
            
              )
            
          
        
        
          t
          
            i
          
        
        (
        1
        −
        t
        
          )
          
            n
            −
            i
          
        
        ,
         
         
         
        i
        =
        0
        ,
        …
        ,
        n
      
    
    {\displaystyle b_{i,n}(t)={n \choose i}t^{i}(1-t)^{n-i},\ \ \ i=0,\ldots ,n}
  are known as Bernstein basis polynomials of degree n.
t0 = 1, (1 − t)0 = 1, and the binomial coefficient, 
  
    
      
        
          
            
              
                (
              
              
                n
                i
              
              
                )
              
            
          
        
      
    
    {\displaystyle \scriptstyle {n \choose i}}
  , is:

  
    
      
        
          
            
              (
            
            
              n
              i
            
            
              )
            
          
        
        =
        
          
            
              n
              !
            
            
              i
              !
              (
              n
              −
              i
              )
              !
            
          
        
        .
      
    
    {\displaystyle {n \choose i}={\frac {n!}{i!(n-i)!}}.}
  The points Pi are called control points for the Bézier curve. The polygon formed by connecting the Bézier points with lines, starting with P0 and finishing with Pn, is called the Bézier polygon (or control polygon). The convex hull of the Bézier polygon contains the Bézier curve.

Polynomial form
Sometimes it is desirable to express the Bézier curve as a polynomial instead of a sum of less straightforward Bernstein polynomials. Application of the binomial theorem to the definition of the curve followed by some rearrangement will yield

  
    
      
        
          B
        
        (
        t
        )
        =
        
          ∑
          
            j
            =
            0
          
          
            n
          
        
        
          
            t
            
              j
            
          
          
            
              C
            
            
              j
            
          
        
      
    
    {\displaystyle \mathbf {B} (t)=\sum _{j=0}^{n}{t^{j}\mathbf {C} _{j}}}
  where

  
    
      
        
          
            C
          
          
            j
          
        
        =
        
          
            
              n
              !
            
            
              (
              n
              −
              j
              )
              !
            
          
        
        
          ∑
          
            i
            =
            0
          
          
            j
          
        
        
          
            
              (
              −
              1
              
                )
                
                  i
                  +
                  j
                
              
              
                
                  P
                
                
                  i
                
              
            
            
              i
              !
              (
              j
              −
              i
              )
              !
            
          
        
        =
        
          ∏
          
            m
            =
            0
          
          
            j
            −
            1
          
        
        (
        n
        −
        m
        )
        
          ∑
          
            i
            =
            0
          
          
            j
          
        
        
          
            
              (
              −
              1
              
                )
                
                  i
                  +
                  j
                
              
              
                
                  P
                
                
                  i
                
              
            
            
              i
              !
              (
              j
              −
              i
              )
              !
            
          
        
        .
      
    
    {\displaystyle \mathbf {C} _{j}={\frac {n!}{(n-j)!}}\sum _{i=0}^{j}{\frac {(-1)^{i+j}\mathbf {P} _{i}}{i!(j-i)!}}=\prod _{m=0}^{j-1}(n-m)\sum _{i=0}^{j}{\frac {(-1)^{i+j}\mathbf {P} _{i}}{i!(j-i)!}}.}
  This could be practical if 
  
    
      
        
          
            C
          
          
            j
          
        
      
    
    {\displaystyle \mathbf {C} _{j}}
   can be computed prior to many evaluations of 
  
    
      
        
          B
        
        (
        t
        )
      
    
    {\displaystyle \mathbf {B} (t)}
  ; however one should use caution as high order curves may lack numeric stability (de Casteljau's algorithm should be used if this occurs). Note that the empty product is 1.

Properties
The curve begins at 
  
    
      
        
          
            P
          
          
            0
          
        
      
    
    {\displaystyle \mathbf {P} _{0}}
   and ends at 
  
    
      
        
          
            P
          
          
            n
          
        
      
    
    {\displaystyle \mathbf {P} _{n}}
  ; this is the so-called endpoint interpolation property.
The curve is a line if and only if all the control points are collinear.
The start and end of the curve is tangent to the first and last section of the Bézier polygon, respectively.
A curve can be split at any point into two subcurves, or into arbitrarily many subcurves, each of which is also a Bézier curve.
Some curves that seem simple, such as the circle, cannot be described exactly by a Bézier or piecewise Bézier curve; though a four-piece cubic Bézier curve can approximate a circle (see composite Bézier curve), with a maximum radial error of less than one part in a thousand, when each inner control point (or offline point) is the distance 
  
    
      
        
          
            
              
                4
                
                  (
                  
                    
                      
                        2
                      
                    
                    −
                    1
                  
                  )
                
              
              3
            
          
        
      
    
    {\displaystyle \textstyle {\frac {4\left({\sqrt {2}}-1\right)}{3}}}
   horizontally or vertically from an outer control point on a unit circle. More generally, an n-piece cubic Bézier curve can approximate a circle, when each inner control point is the distance 
  
    
      
        
          
            
              4
              3
            
          
          tan
          ⁡
          (
          t
          
            /
          
          4
          )
        
      
    
    {\displaystyle \textstyle {\frac {4}{3}}\tan(t/4)}
   from an outer control point on a unit circle, where  
  
    
      
        t
        =
        2
        π
        
          /
        
        n
      
    
    {\textstyle t=2\pi /n}
   (i.e. 
  
    
      
        t
        =
        
          360
          
            ∘
          
        
        
          /
        
        n
      
    
    {\displaystyle t=360^{\circ }/n}
  ), and 
  
    
      
        n
        >
        2
      
    
    {\displaystyle n>2}
  .
Every quadratic Bézier curve is also a cubic Bézier curve, and more generally, every degree n Bézier curve is also a degree m curve for any m > n. In detail, a degree n curve with control points 
  
    
      
        
          
            P
          
          
            0
          
        
        ,
        
        …
        ,
        
        
          
            P
          
          
            n
          
        
      
    
    {\displaystyle \mathbf {P} _{0},\,\dots ,\,\mathbf {P} _{n}}
   is equivalent (including the parametrization) to the degree n + 1 curve with control points 
  
    
      
        
          
            P
          
          
            0
          
          ′
        
        ,
        
        …
        ,
        
        
          
            P
          
          
            n
            +
            1
          
          ′
        
      
    
    {\displaystyle \mathbf {P} '_{0},\,\dots ,\,\mathbf {P} '_{n+1}}
  , where 
  
    
      
        
          
            P
          
          
            k
          
          ′
        
        =
        
          
            
              k
              
                n
                +
                1
              
            
          
        
        
          
            P
          
          
            k
            −
            1
          
        
        +
        
          (
          
            1
            −
            
              
                
                  k
                  
                    n
                    +
                    1
                  
                
              
            
          
          )
        
        
          
            P
          
          
            k
          
        
      
    
    {\displaystyle \mathbf {P} '_{k}={\tfrac {k}{n+1}}\mathbf {P} _{k-1}+\left(1-{\tfrac {k}{n+1}}\right)\mathbf {P} _{k}}
  , 
  
    
      
        ∀
        k
        =
        0
        ,
        
        1
        ,
        
        …
        ,
        
        n
        ,
        
        n
        +
        1
      
    
    {\displaystyle \forall k=0,\,1,\,\dots ,\,n,\,n+1}
   and define 
  
    
      
        
          
            P
          
          
            n
            +
            1
          
        
        :=
        
          
            P
          
          
            0
          
        
      
    
    {\displaystyle \mathbf {P} _{n+1}:=\mathbf {P} _{0}}
  , 
  
    
      
        
          
            P
          
          
            −
            1
          
        
        :=
        
          
            P
          
          
            n
          
        
      
    
    {\displaystyle \mathbf {P} _{-1}:=\mathbf {P} _{n}}
  .
Bézier curves have the variation diminishing property. What this means in intuitive terms is that a Bézier curve does not "undulate" more than the polygon of its control points, and may actually "undulate" less than that.
There is no local control in degree n Bézier curves—meaning that any change to a control point requires recalculation of and thus affects the aspect of the entire curve, "although the further that one is from the control point that was changed, the smaller is the change in the curve."
A Bézier curve of order higher than two may intersect itself or have a cusp for certain choices of the control points.

Second-order curve is a parabolic segment
A quadratic Bézier curve is also a segment of a parabola. As a parabola is a conic section, some sources refer to quadratic Béziers as "conic arcs". With reference to the figure on the right, the important features of the parabola can be derived as follows:
Tangents to the parabola at the endpoints of the curve (A and B) intersect at its control point (C).
If D is the midpoint of AB, the tangent to the curve which is perpendicular to CD (dashed cyan line) defines its vertex (V). Its axis of symmetry (dash-dot cyan) passes through V and is perpendicular to the tangent.
E is either point on the curve with a tangent at 45° to CD (dashed green). If G is the intersection of this tangent and the axis, the line passing through G and perpendicular to CD is the directrix (solid green).
The focus (F) is at the intersection of the axis and a line passing through E and perpendicular to CD (dotted yellow). The latus rectum is the line segment within the curve (solid yellow).

Derivative
The derivative for a curve of order n is

  
    
      
        
          
            B
          
          ′
        
        (
        t
        )
        =
        n
        
          ∑
          
            i
            =
            0
          
          
            n
            −
            1
          
        
        
          b
          
            i
            ,
            n
            −
            1
          
        
        (
        t
        )
        (
        
          
            P
          
          
            i
            +
            1
          
        
        −
        
          
            P
          
          
            i
          
        
        )
        .
      
    
    {\displaystyle \mathbf {B} '(t)=n\sum _{i=0}^{n-1}b_{i,n-1}(t)(\mathbf {P} _{i+1}-\mathbf {P} _{i}).}

Constructing Bézier curves
Linear curves
Let t denote the fraction of progress (from 0 to 1) the point B(t) has made along its traversal from P0 to P1. For example, when t=0.25, B(t) is one quarter of the way from point P0 to P1. As t varies from 0 to 1, B(t) draws a line from P0 to P1.

Quadratic curves
For quadratic Bézier curves one can construct intermediate points Q0 and Q1 such that as t varies from 0 to 1:

Point Q0(t) varies from P0 to P1 and describes a linear Bézier curve.
Point Q1(t) varies from P1 to P2 and describes a linear Bézier curve.
Point B(t) is interpolated linearly between Q0(t) to Q1(t) and describes a quadratic Bézier curve.

Higher-order curves
For higher-order curves one needs correspondingly more intermediate points. For cubic curves one can construct intermediate points Q0, Q1, and Q2 that describe linear Bézier curves, and points R0 and R1 that describe quadratic Bézier curves:

For fourth-order curves one can construct intermediate points Q0, Q1, Q2 and Q3 that describe linear Bézier curves, points R0, R1 and R2 that describe quadratic Bézier curves, and points S0 and S1 that describe cubic Bézier curves:

For fifth-order curves, one can construct similar intermediate points.

These representations rest on the process used in De Casteljau's algorithm to calculate Bézier curves.

Offsets (or stroking) of Bézier curves
The curve at a fixed offset from a given Bézier curve, called an offset or parallel curve in mathematics (lying "parallel" to the original curve, like the offset between rails in a railroad track), cannot be exactly formed by a Bézier curve (except in some trivial cases). In general, the two-sided offset curve of a cubic Bézier is a 10th-order algebraic curve and more generally for a Bézier of degree n the two-sided offset curve is an algebraic curve of degree 4n − 2. However, there are heuristic methods that usually give an adequate approximation for practical purposes.In the field of vector graphics, painting two symmetrically distanced offset curves is called stroking (the Bézier curve or in general a path of several Bézier segments). The conversion from offset curves to filled Bézier contours is of practical importance in converting fonts defined in Metafont, which require stroking of Bézier curves, to the more widely used PostScript type 1 fonts, which only require (for efficiency purposes) the mathematically simpler operation of filling a contour defined by (non-self-intersecting) Bézier curves.

Degree elevation
A Bézier curve of degree n can be converted into a Bézier curve of degree n + 1 with the same shape. This is useful if software supports Bézier curves only of specific degree. For example, systems that can only work with cubic Bézier curves can implicitly work with quadratic curves by using their equivalent cubic representation.
To do degree elevation, we use the equality 
  
    
      
        
          B
        
        (
        t
        )
        =
        (
        1
        −
        t
        )
        
          B
        
        (
        t
        )
        +
        t
        
          B
        
        (
        t
        )
        .
      
    
    {\displaystyle \mathbf {B} (t)=(1-t)\mathbf {B} (t)+t\mathbf {B} (t).}
   Each component 
  
    
      
        
          
            b
          
          
            i
            ,
            n
          
        
        (
        t
        )
        
          
            P
          
          
            i
          
        
      
    
    {\displaystyle \mathbf {b} _{i,n}(t)\mathbf {P} _{i}}
   is multiplied by (1 − t) and t, thus increasing a degree by one, without changing the value. Here is the example of increasing degree from 2 to 3.

  
    
      
        
          
            
              
                (
                1
                −
                t
                
                  )
                  
                    2
                  
                
                
                  
                    P
                  
                  
                    0
                  
                
                +
                2
                (
                1
                −
                t
                )
                t
                
                  
                    P
                  
                  
                    1
                  
                
                +
                
                  t
                  
                    2
                  
                
                
                  
                    P
                  
                  
                    2
                  
                
              
              
                
                =
                (
                1
                −
                t
                
                  )
                  
                    3
                  
                
                
                  
                    P
                  
                  
                    0
                  
                
                +
                2
                (
                1
                −
                t
                
                  )
                  
                    2
                  
                
                t
                
                  
                    P
                  
                  
                    1
                  
                
                +
                (
                1
                −
                t
                )
                
                  t
                  
                    2
                  
                
                
                  
                    P
                  
                  
                    2
                  
                
                +
                (
                1
                −
                t
                
                  )
                  
                    2
                  
                
                t
                
                  
                    P
                  
                  
                    0
                  
                
                +
                2
                (
                1
                −
                t
                )
                
                  t
                  
                    2
                  
                
                
                  
                    P
                  
                  
                    1
                  
                
                +
                
                  t
                  
                    3
                  
                
                
                  
                    P
                  
                  
                    2
                  
                
              
            
            
              
              
                
                =
                (
                1
                −
                t
                
                  )
                  
                    3
                  
                
                
                  
                    P
                  
                  
                    0
                  
                
                +
                (
                1
                −
                t
                
                  )
                  
                    2
                  
                
                t
                
                  (
                  
                    
                      
                        P
                      
                      
                        0
                      
                    
                    +
                    2
                    
                      
                        P
                      
                      
                        1
                      
                    
                  
                  )
                
                +
                (
                1
                −
                t
                )
                
                  t
                  
                    2
                  
                
                
                  (
                  
                    2
                    
                      
                        P
                      
                      
                        1
                      
                    
                    +
                    
                      
                        P
                      
                      
                        2
                      
                    
                  
                  )
                
                +
                
                  t
                  
                    3
                  
                
                
                  
                    P
                  
                  
                    2
                  
                
              
            
            
              
              
                
                =
                (
                1
                −
                t
                
                  )
                  
                    3
                  
                
                
                  
                    P
                  
                  
                    0
                  
                
                +
                3
                (
                1
                −
                t
                
                  )
                  
                    2
                  
                
                t
                
                  
                    
                      1
                      3
                    
                  
                
                
                  (
                  
                    
                      
                        P
                      
                      
                        0
                      
                    
                    +
                    2
                    
                      
                        P
                      
                      
                        1
                      
                    
                  
                  )
                
                +
                3
                (
                1
                −
                t
                )
                
                  t
                  
                    2
                  
                
                
                  
                    
                      1
                      3
                    
                  
                
                
                  (
                  
                    2
                    
                      
                        P
                      
                      
                        1
                      
                    
                    +
                    
                      
                        P
                      
                      
                        2
                      
                    
                  
                  )
                
                +
                
                  t
                  
                    3
                  
                
                
                  
                    P
                  
                  
                    2
                  
                
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}(1-t)^{2}\mathbf {P} _{0}+2(1-t)t\mathbf {P} _{1}+t^{2}\mathbf {P} _{2}&=(1-t)^{3}\mathbf {P} _{0}+2(1-t)^{2}t\mathbf {P} _{1}+(1-t)t^{2}\mathbf {P} _{2}+(1-t)^{2}t\mathbf {P} _{0}+2(1-t)t^{2}\mathbf {P} _{1}+t^{3}\mathbf {P} _{2}\\&=(1-t)^{3}\mathbf {P} _{0}+(1-t)^{2}t\left(\mathbf {P} _{0}+2\mathbf {P} _{1}\right)+(1-t)t^{2}\left(2\mathbf {P} _{1}+\mathbf {P} _{2}\right)+t^{3}\mathbf {P} _{2}\\&=(1-t)^{3}\mathbf {P} _{0}+3(1-t)^{2}t{\tfrac {1}{3}}\left(\mathbf {P} _{0}+2\mathbf {P} _{1}\right)+3(1-t)t^{2}{\tfrac {1}{3}}\left(2\mathbf {P} _{1}+\mathbf {P} _{2}\right)+t^{3}\mathbf {P} _{2}\end{aligned}}}
  For arbitrary n we use equalities

  
    
      
        
          
            {
            
              
                
                  
                    
                      
                        (
                      
                      
                        
                          n
                          +
                          1
                        
                        i
                      
                      
                        )
                      
                    
                  
                  (
                  1
                  −
                  t
                  )
                  
                    
                      b
                    
                    
                      i
                      ,
                      n
                    
                  
                  =
                  
                    
                      
                        (
                      
                      
                        n
                        i
                      
                      
                        )
                      
                    
                  
                  
                    
                      b
                    
                    
                      i
                      ,
                      n
                      +
                      1
                    
                  
                
              
              
                
                  
                    
                      
                        (
                      
                      
                        
                          n
                          +
                          1
                        
                        
                          i
                          +
                          1
                        
                      
                      
                        )
                      
                    
                  
                  t
                  
                    
                      b
                    
                    
                      i
                      ,
                      n
                    
                  
                  =
                  
                    
                      
                        (
                      
                      
                        n
                        i
                      
                      
                        )
                      
                    
                  
                  
                    
                      b
                    
                    
                      i
                      +
                      1
                      ,
                      n
                      +
                      1
                    
                  
                
              
            
            
          
        
        
        
        ⟹
        
        
        
          
            {
            
              
                
                  (
                  1
                  −
                  t
                  )
                  
                    
                      b
                    
                    
                      i
                      ,
                      n
                    
                  
                  =
                  
                    
                      
                        n
                        +
                        1
                        −
                        i
                      
                      
                        n
                        +
                        1
                      
                    
                  
                  
                    
                      b
                    
                    
                      i
                      ,
                      n
                      +
                      1
                    
                  
                
              
              
                
                  t
                  
                    
                      b
                    
                    
                      i
                      ,
                      n
                    
                  
                  =
                  
                    
                      
                        i
                        +
                        1
                      
                      
                        n
                        +
                        1
                      
                    
                  
                  
                    
                      b
                    
                    
                      i
                      +
                      1
                      ,
                      n
                      +
                      1
                    
                  
                
              
            
            
          
        
      
    
    {\displaystyle {\begin{cases}{n+1 \choose i}(1-t)\mathbf {b} _{i,n}={n \choose i}\mathbf {b} _{i,n+1}\\{n+1 \choose i+1}t\mathbf {b} _{i,n}={n \choose i}\mathbf {b} _{i+1,n+1}\end{cases}}\quad \implies \quad {\begin{cases}(1-t)\mathbf {b} _{i,n}={\frac {n+1-i}{n+1}}\mathbf {b} _{i,n+1}\\t\mathbf {b} _{i,n}={\frac {i+1}{n+1}}\mathbf {b} _{i+1,n+1}\end{cases}}}
  Therefore:

  
    
      
        
          
            
              
                
                  B
                
                (
                t
                )
              
              
                
                =
                (
                1
                −
                t
                )
                
                  ∑
                  
                    i
                    =
                    0
                  
                  
                    n
                  
                
                
                  
                    b
                  
                  
                    i
                    ,
                    n
                  
                
                (
                t
                )
                
                  
                    P
                  
                  
                    i
                  
                
                +
                t
                
                  ∑
                  
                    i
                    =
                    0
                  
                  
                    n
                  
                
                
                  
                    b
                  
                  
                    i
                    ,
                    n
                  
                
                (
                t
                )
                
                  
                    P
                  
                  
                    i
                  
                
              
            
            
              
              
                
                =
                
                  ∑
                  
                    i
                    =
                    0
                  
                  
                    n
                  
                
                
                  
                    
                      n
                      +
                      1
                      −
                      i
                    
                    
                      n
                      +
                      1
                    
                  
                
                
                  
                    b
                  
                  
                    i
                    ,
                    n
                    +
                    1
                  
                
                (
                t
                )
                
                  
                    P
                  
                  
                    i
                  
                
                +
                
                  ∑
                  
                    i
                    =
                    0
                  
                  
                    n
                  
                
                
                  
                    
                      i
                      +
                      1
                    
                    
                      n
                      +
                      1
                    
                  
                
                
                  
                    b
                  
                  
                    i
                    +
                    1
                    ,
                    n
                    +
                    1
                  
                
                (
                t
                )
                
                  
                    P
                  
                  
                    i
                  
                
              
            
            
              
              
                
                =
                
                  ∑
                  
                    i
                    =
                    0
                  
                  
                    n
                    +
                    1
                  
                
                
                  (
                  
                    
                      
                        i
                        
                          n
                          +
                          1
                        
                      
                    
                    
                      
                        P
                      
                      
                        i
                        −
                        1
                      
                    
                    +
                    
                      
                        
                          n
                          +
                          1
                          −
                          i
                        
                        
                          n
                          +
                          1
                        
                      
                    
                    
                      
                        P
                      
                      
                        i
                      
                    
                  
                  )
                
                
                  
                    b
                  
                  
                    i
                    ,
                    n
                    +
                    1
                  
                
                (
                t
                )
              
            
            
              
              
                
                =
                
                  ∑
                  
                    i
                    =
                    0
                  
                  
                    n
                    +
                    1
                  
                
                
                  
                    b
                  
                  
                    i
                    ,
                    n
                    +
                    1
                  
                
                (
                t
                )
                
                  
                    
                      P
                      ′
                    
                  
                  
                    i
                  
                
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}\mathbf {B} (t)&=(1-t)\sum _{i=0}^{n}\mathbf {b} _{i,n}(t)\mathbf {P} _{i}+t\sum _{i=0}^{n}\mathbf {b} _{i,n}(t)\mathbf {P} _{i}\\&=\sum _{i=0}^{n}{\frac {n+1-i}{n+1}}\mathbf {b} _{i,n+1}(t)\mathbf {P} _{i}+\sum _{i=0}^{n}{\frac {i+1}{n+1}}\mathbf {b} _{i+1,n+1}(t)\mathbf {P} _{i}\\&=\sum _{i=0}^{n+1}\left({\frac {i}{n+1}}\mathbf {P} _{i-1}+{\frac {n+1-i}{n+1}}\mathbf {P} _{i}\right)\mathbf {b} _{i,n+1}(t)\\&=\sum _{i=0}^{n+1}\mathbf {b} _{i,n+1}(t)\mathbf {P'} _{i}\end{aligned}}}
  introducing arbitrary 
  
    
      
        
          
            P
          
          
            −
            1
          
        
      
    
    {\displaystyle \mathbf {P} _{-1}}
   and 
  
    
      
        
          
            P
          
          
            n
            +
            1
          
        
      
    
    {\displaystyle \mathbf {P} _{n+1}}
  .
Therefore, new control points are

  
    
      
        
          
            
              P
              ′
            
          
          
            i
          
        
        =
        
          
            i
            
              n
              +
              1
            
          
        
        
          
            P
          
          
            i
            −
            1
          
        
        +
        
          
            
              n
              +
              1
              −
              i
            
            
              n
              +
              1
            
          
        
        
          
            P
          
          
            i
          
        
        ,
        
        i
        =
        0
        ,
        …
        ,
        n
        +
        1.
      
    
    {\displaystyle \mathbf {P'} _{i}={\frac {i}{n+1}}\mathbf {P} _{i-1}+{\frac {n+1-i}{n+1}}\mathbf {P} _{i},\quad i=0,\ldots ,n+1.}

Repeated degree elevation
The concept of degree elevation can be repeated on a control polygon R to get a sequence of control polygons R, R1, R2, and so on. After r degree elevations, the polygon Rr has the vertices P0,r, P1,r, P2,r, ..., Pn+r,r given by 

  
    
      
        
          
            P
          
          
            i
            ,
            r
          
        
        =
        
          ∑
          
            j
            =
            0
          
          
            n
          
        
        
          
            P
          
          
            j
          
        
        
          
            
              
                (
              
              
                n
                j
              
              
                )
              
            
          
        
        
          
            
              
                
                  (
                
                
                  r
                  
                    i
                    −
                    j
                  
                
                
                  )
                
              
            
            
              
                
                  (
                
                
                  
                    n
                    +
                    r
                  
                  i
                
                
                  )
                
              
            
          
        
        .
      
    
    {\displaystyle \mathbf {P} _{i,r}=\sum _{j=0}^{n}\mathbf {P} _{j}{\tbinom {n}{j}}{\frac {\tbinom {r}{i-j}}{\tbinom {n+r}{i}}}.}
  It can also be shown that for the underlying Bézier curve B,

  
    
      
        
          
            lim
            
              r
              →
              ∞
            
          
          
            R
            
              r
            
          
        
        =
        
          B
        
        .
      
    
    {\displaystyle \mathbf {\lim _{r\to \infty }R_{r}} =\mathbf {B} .}

Rational Bézier curves
The rational Bézier curve adds adjustable weights to provide closer approximations to arbitrary shapes. The numerator is a weighted Bernstein-form Bézier curve and the denominator is a weighted sum of Bernstein polynomials. Rational Bézier curves can, among other uses, be used to represent segments of conic sections exactly, including circular arcs.Given n + 1 control points P0, ..., Pn, the rational Bézier curve can be described by

  
    
      
        
          B
        
        (
        t
        )
        =
        
          
            
              
                ∑
                
                  i
                  =
                  0
                
                
                  n
                
              
              
                b
                
                  i
                  ,
                  n
                
              
              (
              t
              )
              
                
                  P
                
                
                  i
                
              
              
                w
                
                  i
                
              
            
            
              
                ∑
                
                  i
                  =
                  0
                
                
                  n
                
              
              
                b
                
                  i
                  ,
                  n
                
              
              (
              t
              )
              
                w
                
                  i
                
              
            
          
        
        ,
      
    
    {\displaystyle \mathbf {B} (t)={\frac {\sum _{i=0}^{n}b_{i,n}(t)\mathbf {P} _{i}w_{i}}{\sum _{i=0}^{n}b_{i,n}(t)w_{i}}},}
  or simply

  
    
      
        
          B
        
        (
        t
        )
        =
        
          
            
              
                ∑
                
                  i
                  =
                  0
                
                
                  n
                
              
              
                
                  
                    (
                  
                  
                    n
                    i
                  
                  
                    )
                  
                
              
              
                t
                
                  i
                
              
              (
              1
              −
              t
              
                )
                
                  n
                  −
                  i
                
              
              
                
                  P
                
                
                  i
                
              
              
                w
                
                  i
                
              
            
            
              
                ∑
                
                  i
                  =
                  0
                
                
                  n
                
              
              
                
                  
                    (
                  
                  
                    n
                    i
                  
                  
                    )
                  
                
              
              
                t
                
                  i
                
              
              (
              1
              −
              t
              
                )
                
                  n
                  −
                  i
                
              
              
                w
                
                  i
                
              
            
          
        
        .
      
    
    {\displaystyle \mathbf {B} (t)={\frac {\sum _{i=0}^{n}{n \choose i}t^{i}(1-t)^{n-i}\mathbf {P} _{i}w_{i}}{\sum _{i=0}^{n}{n \choose i}t^{i}(1-t)^{n-i}w_{i}}}.}
  The expression can be extended by using number systems besides reals for the weights. In the complex plane the points {1}, {-1}, and {1} with weights {
  
    
      
        i
      
    
    {\displaystyle i}
  }, {1}, and {
  
    
      
        −
        i
      
    
    {\displaystyle -i}
  } generate a full circle with radius one. For curves with points and weights on a circle, the weights can be scaled without changing the curve's shape.  Scaling the central weight of the above curve by 1.35508 gives a more uniform parameterization.

Applications
Computer graphics
Bézier curves are widely used in computer graphics to model smooth curves. As the curve is completely contained in the convex hull of its control points, the points can be graphically displayed and used to manipulate the curve intuitively. Affine transformations such as translation and rotation can be applied on the curve by applying the respective transform on the control points of the curve.
Quadratic and cubic Bézier curves are most common. Higher degree curves are more computationally expensive to evaluate. When more complex shapes are needed, low order Bézier curves are patched together, producing a composite Bézier curve. A composite Bézier curve is commonly referred to as a "path" in vector graphics languages (like PostScript), vector graphics standards (like SVG) and vector graphics programs (like Artline, Timeworks Publisher, Adobe Illustrator, CorelDraw, Inkscape, and Allegro). In order to join Bézier curves into a composite Bézier curve without kinks, a property called G1 continuous, it suffices to force the control point at which two constituent Bézier curves meet to lie on the line defined by the two control points on either side.

The simplest method for scan converting (rasterizing) a Bézier curve is to evaluate it at many closely spaced points and scan convert the approximating sequence of line segments. However, this does not guarantee that the rasterized output looks sufficiently smooth, because the points may be spaced too far apart. Conversely it may generate too many points in areas where the curve is close to linear. A common adaptive method is recursive subdivision, in which a curve's control points are checked to see if the curve approximates a line to within a small tolerance. If not, the curve is subdivided parametrically into two segments, 0 ≤ t ≤ 0.5 and 0.5 ≤ t ≤ 1, and the same procedure is applied recursively to each half. There are also forward differencing methods, but great care must be taken to analyse error propagation.Analytical methods where a Bézier is intersected with each scan line involve finding roots of cubic polynomials (for cubic Béziers) and dealing with multiple roots, so they are not often used in practice.The rasterisation algorithm used in Metafont is based on discretising the curve, so that it is approximated by a sequence of "rook moves" that are purely vertical or purely horizontal, along the pixel boundaries. To that end, the plane is first split into eight 45° sectors (by the coordinate axes and the two lines 
  
    
      
        y
        =
        ±
        x
      
    
    {\displaystyle y=\pm x}
  ), then the curve is decomposed into smaller segments such that the direction of a curve segment stays within one sector; since the curve velocity is a second degree polynomial, finding the 
  
    
      
        t
      
    
    {\displaystyle t}
   values where it is parallel to one of these lines can be done by solving quadratic equations. Within each segment, either horizontal or vertical movement dominates, and the total number of steps in either direction can be read off from the endpoint coordinates; in for example the 0–45° sector horizontal movement to the right dominates, so it only remains to decide between which steps to the right the curve should make a step up.There is also a modified curve form of Bresenham's line drawing algorithm by Zingl that performs this rasterization by subdividing the curve into rational pieces and calculating the error at each pixel location such that it either travels at a 45° angle or straight depending on compounding error as it iterates through the curve. This reduces the next step calculation to a series of integer additions and subtractions.

Animation
In animation applications, such as Adobe Flash and Synfig, Bézier curves are used to outline, for example, movement. Users outline the wanted path in Bézier curves, and the application creates the needed frames for the object to move along the path.In 3D animation, Bézier curves are often used to define 3D paths as well as 2D curves for keyframe interpolation. Bézier curves are now very frequently used to control the animation easing in CSS, JavaScript, JavaFx and Flutter SDK.

Fonts
TrueType fonts use composite Bézier curves composed of quadratic Bézier curves. Other languages and imaging tools (such as PostScript, Asymptote, Metafont, and SVG) use composite Béziers composed of cubic Bézier curves for drawing curved shapes. OpenType fonts can use either kind of curve, depending on which font technology underlies the OpenType wrapper.Font engines, like FreeType, draw the font's curves (and lines) on a pixellated surface using a process known as font rasterization. Typically font engines and vector graphics engines render Bézier curves by splitting them recursively up to the point where the curve is flat enough to be drawn as a series of linear or circular segments. The exact splitting algorithm is implementation dependent, only the flatness criteria must be respected to reach the necessary precision and to avoid non-monotonic local changes of curvature. The "smooth curve" feature of charts in Microsoft Excel also uses this algorithm.Because arcs of circles and ellipses cannot be exactly represented by Bézier curves, they are first approximated by Bézier curves, which are in turn approximated by arcs of circles. This is inefficient as there exists also approximations of all Bézier curves using arcs of circles or ellipses, which can be rendered incrementally with arbitrary precision. Another approach, used by modern hardware graphics adapters with accelerated geometry, can convert exactly all Bézier and conic curves (or surfaces) into NURBS, that can be rendered incrementally without first splitting the curve recursively to reach the necessary flatness condition. This approach also preserves the curve definition under all linear or perspective 2D and 3D transforms and projections.

Robotics
Bézier curves can be used in robotics to produce trajectories of an end-effector due to the virtue of the control polygon’s ability to give a clear indication of whether the path is colliding with any nearby obstacle or object. Furthermore, joint space trajectories can be accurately differentiated using Bézier curves. Consequently, the derivatives of joint space trajectories are used in the calculation of the dynamics and control effort (torque profiles) of the robotic manipulator.

See also
Bézier surface
B-spline
GEM/4 and GEM/5
Hermite curve
NURBS
String art – Bézier curves are also formed by many common forms of string art, where strings are looped across a frame of nails.
Variation diminishing property of Bézier curves

Notes
References
Citations
Sources
Further reading
A Primer on Bézier Curves –  an open source online book explaining Bézier curves and associated graphics algorithms, with interactive graphics
Cubic Bezier Curves – Under the Hood (video) –  video showing how computers render a cubic Bézier curve, by Peter Nowell
From Bézier to Bernstein Feature Column from American Mathematical Society
"Bézier curve", Encyclopedia of Mathematics, EMS Press, 2001 [1994]
Prautzsch, Hartmut; Boehm, Wolfgang; Paluszny, Marco (2002). Bézier and B-Spline Techniques. Springer Science & Business Media. ISBN 978-3-540-43761-1.
Gallier, Jean (1999). "Chapter 5. Polynomial Curves as Bézier Curves". Curves and Surfaces in Geometric Modeling: Theory and Algorithms. Morgan Kaufmann. This book is out of print and freely available from the author.
Farin, Gerald E. (2002). Curves and Surfaces for CAGD: A Practical Guide (5th ed.). Morgan Kaufmann. ISBN 978-1-55860-737-8.
Weisstein, Eric W. "Bézier Curve". MathWorld.
Hoffmann, Gernot. "Bézier Curves" (PDF). Archived from the original (PDF) on 2006-12-02. (60 pages)
Ahn, Young Joon (2004). "Approximation of circular arcs and offset curves by Bézier curves of high degree". Journal of Computational and Applied Mathematics. 167 (2): 405–416. Bibcode:2004JCoAM.167..405A. doi:10.1016/j.cam.2003.10.008.
Davies, Jason. "Animated Bézier curves".
Hovey, Chad (20 May 2022). "Bézier Geometry". GitHub.
Hovey, Chad (2022).  Formulation and Python Implementation of Bézier and B-Spline Geometry. SAND2022-7702C. (153 pages)

External links
Computer codeTinySpline: Open source C-library for NURBS, B-splines and Bézier curves with bindings for various languages
C++ library to generate Bézier functions at compile time
Simple Bézier curve implementation via recursive method in Python