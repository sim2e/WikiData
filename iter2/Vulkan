Vulkan is a low-level low-overhead, cross-platform API and open standard for 3D graphics and computing. It was originally developed as Mantle by AMD, but was later given to Khronos Group. It was intended to address the shortcomings of OpenGL, and allow developers more control over the GPU. It designed to support a wide variety of GPUs, CPUs and operating systems, it is also designed to work with modern multi-core CPUs.

Overview
Vulkan targets high-performance real-time 3D-graphics applications, such as video games and interactive media, and highly parallelized computing. Vulkan is intended to offer higher performance and more efficient CPU and GPU usage compared to the older OpenGL and Direct3D 11 APIs. It does so by providing a considerably lower-level API for the application than the older APIs that more closely resembles how modern GPUs work. 
Vulkan is comparable to Apple's Metal API and Microsoft's Direct3D 12, and is harder to use than the higher-level OpenGL and Direct3D 11 APIs. In addition to its lower CPU usage, Vulkan is designed to allow developers to better distribute work among multiple CPU cores.Vulkan was first announced by the non-profit Khronos Group at GDC 2015. The Vulkan API was initially referred to as the "next generation OpenGL initiative", or "OpenGL next" by Khronos, but use of those names was discontinued when "Vulkan" was announced.Vulkan is derived from and built upon components of AMD's Mantle API, which was donated by AMD to Khronos with the intent of giving Khronos a foundation on which to begin developing a low-level API that they could standardize across the industry.

Features
Vulkan is intended to provide a variety of advantages over other APIs as well as its predecessor, OpenGL. Vulkan offers lower overhead, more direct control over the GPU, and lower CPU usage. The overall concept and feature set of Vulkan is similar to concepts seen in Mantle and later adopted by Microsoft with Direct3D 12 and Apple with Metal.
Intended advantages of Vulkan over previous-generation APIs include the following:

Unified API
Vulkan provides a single API for both desktop and mobile graphics devices, whereas previously these were split between OpenGL and OpenGL ES respectively.

Cross platform
Vulkan is available on multiple modern operating systems. Like OpenGL, and in contrast to Direct3D 12, the Vulkan API is not locked to a single OS or device form factor. Vulkan runs natively on Android, Linux, BSD Unix, QNX, Haiku, Nintendo Switch,
Raspberry Pi, Stadia, Fuchsia, Tizen, and Windows 7, 8, 10, and 11.
MoltenVK provides freely-licensed third-party support for macOS, iOS and tvOS by wrapping over Apple's Metal API.

Lower CPU usage
Vulkan reduces load on CPUs through the use of batching and other low-level optimizations, therefore reducing CPU workloads and leaving the CPU free to do more computation or rendering than would otherwise be possible.

Multi-threading friendly design
Direct3D 11 and OpenGL 4 were initially designed for use with single-core CPUs and only received augmentation to be executed on multi-cores. Even when application developers use the augmentations, these APIs regularly do not scale well on multi-cores. Vulkan offers improved scalability on multi-core CPUs due to the modernized threading architecture.

Pre-compiled shaders
OpenGL uses the high-level language GLSL for writing shaders, which forces each OpenGL driver to implement its own compiler for GLSL. This then executes at application runtime to translate the program's shaders into the GPU's machine code. In contrast, Vulkan drivers are supposed to ingest shaders already translated into an intermediate binary format called SPIR-V (Standard Portable Intermediate Representation), analogous to the binary format that HLSL shaders are compiled into in Direct3D. By allowing shader pre-compilation, application initialization speed is improved and a larger variety of shaders can be used per scene. A Vulkan driver only needs to perform GPU specific optimization and code generation, resulting in easier driver maintenance, and potentially smaller driver packages. The developers of applications now can also more easily obfuscate proprietary shader code, due to shaders not being stored directly as source code, however tools are provided that can decompile SPIR-V to human-readable high-level code.

Others
Vulkan provides unified management of compute kernels and graphical shaders, eliminating the need to use a separate compute API in conjunction with a graphics API.
Ray tracing is provided in a set of cross-vendor extensions, which together are analogous to the OptiX and DirectX Raytracing APIs. No such functionality is exposed in OpenGL.

OpenGL vs. Vulkan
NVIDIA states that "OpenGL is still a great option for a lot of use cases, as it comes at a much lower complexity and maintenance burden than Vulkan, while in many cases still providing great overall performance."AMD states that "Vulkan supports Close To Metal control, enabling faster performance and better image quality across Windows 7, Windows 8.1, Windows 10, and Linux. No other graphics API offers the same powerful combination of OS compatibility, rendering features, and hardware efficiency."

Versions
Vulkan 1.1
At SIGGRAPH 2016, Khronos announced that Vulkan would be getting support for automatic multi-GPU features, similar to what is offered by Direct3D 12. Multi-GPU support included in-API removes the need for SLI or Crossfire which requires graphics cards to be of the same model. API multi-GPU instead allows the API to intelligently split the workload among two or more completely different GPUs. For example, integrated GPUs included on the CPU can be used in conjunction with a high-end dedicated GPU for a slight performance boost.
On March 7, 2018, Vulkan 1.1 was released by the Khronos Group. This first major update to the API standardized several extensions, such as multi-view, device groups, cross-process and cross-API sharing, advanced compute functionality, HLSL support, and YCbCr support. At the same time, it also brought better compatibility with DirectX 12, explicit multi-GPU support, ray tracing support, and laid the groundwork for the next generation of GPUs. Alongside Vulkan 1.1, SPIR-V was updated to version 1.3.

Vulkan 1.2
On January 15, 2020, Vulkan 1.2 was released by the Khronos Group. This second major update to the API integrates 23 additional commonly-used proven Vulkan extensions into the base Vulkan standard. Some of the most important features are "timeline semaphores for easily managed synchronization", "a formal memory model to precisely define the semantics of synchronization and memory operations in different threads", and "descriptor indexing to enable reuse of descriptor layouts by multiple shaders". The additional features of Vulkan 1.2 improve its flexibility when it comes to implementing other graphics APIs on top of Vulkan, including "uniform buffer standard layout", "scalar block layout", and "separate stencil usage".

Vulkan 1.3
On January 25, 2022, Vulkan 1.3 was released by the Khronos Group. This third major update to the API integrates 23 additional commonly-used proven Vulkan extensions into the base Vulkan standard. Vulkan 1.3 focuses on reducing fragmentation by making the new features not optional in order for a device to be considered Vulkan 1.3 capable. The new features in Vulkan 1.3 include dynamic rendering, additional dynamic state, improved synchronization API, and device profiles.

Planned features
When releasing OpenCL 2.2, the Khronos Group announced that OpenCL would converge where possible with Vulkan to enable OpenCL software deployment flexibility over both APIs. This has been now demonstrated by Adobe's Premiere Rush using the clspv open source compiler to compile significant amounts of OpenCL C kernel code to run on a Vulkan runtime for deployment on Android.

History
The Khronos Group began a project to create a next generation graphics API in July 2014 with a kickoff meeting at Valve. At SIGGRAPH 2014, the project was publicly announced with a call for participants.According to the US Patent and Trademark Office, the trademark for Vulkan was filed on February 19, 2015.Vulkan was formally named and announced at Game Developers Conference 2015, although speculation and rumors centered around a new API existed beforehand and referred to it as "glNext".

2015
In early 2015, LunarG (funded by Valve) developed and showcased a Linux driver for Intel which enabled Vulkan compatibility on the HD 4000 series integrated graphics, despite the open-source Mesa drivers not being fully compatible with OpenGL 4.0 until later that year. There is still the possibility of Sandy Bridge support, since it supports compute through Direct3D11.
On August 10, 2015, Google announced that future versions of Android would support Vulkan. Android 7.x "Nougat" launched support for Vulkan on August 22, 2016. Android 8.0 "Oreo" has full support.
On December 18, 2015, the Khronos Group announced that the 1.0 version of the Vulkan specification was nearly complete and would be released when conforming drivers were available.

2016
The full Vulkan specification and the open-source Vulkan SDK were released on February 16, 2016.

2018
On February 26, 2018, Khronos Group announced that the Vulkan API became available to all on macOS and iOS through the MoltenVK library, which enables Vulkan to run on top of Metal. Other new developments were shown at SIGGRAPH 2018. Previously MoltenVK was a proprietary and commercially licensed solution, but Valve made an arrangement with developer Brenwill Workshop Ltd to open-source MoltenVK under the Apache 2.0 license and as a result the library is now available on GitHub. Valve also announced that Dota 2 can as of February 26, 2018 run on macOS using the Vulkan API, which is based on MoltenVK.

2019
On February 25, 2019, the Vulkan Safety Critical (SC) Working Group was announced to bring Vulkan GPU acceleration to safety critical industries.Google's Stadia streaming cloud gaming service uses Vulkan on Linux based servers with AMD GPUs.

2020
On January 15, 2020, Vulkan 1.2 was released.
Alongside the Vulkan 1.2 release, the Khronos Group posted a blog post which considered that HLSL support in Vulkan had reached "production ready" status, given the improvements in Microsoft's DXC compiler and Khronos's glslang compiler, and new features in Vulkan 1.2 which enhance HLSL support.On February 3, 2020, the Raspberry Pi Foundation announced that it was working on an open source Vulkan driver for their Raspberry Pi, a popular single board computer. On June 20, 2020, a graphics engineer revealed that he had created one after two years of work that was capable of running VkQuake3 at over 100FPS on the small computer.On March 17, 2020, Khronos Group released the Ray Tracing extensions, based on Nvidia's proprietary extension, with some major extensions and many minor changes, which in turn was based on Nvidia's OptiX API. On November 23, 2020, these Ray Tracing extensions were finalized.On November 24, 2020, Raspberry Pi Foundation announced that their driver for the Raspberry Pi 4 is Vulkan 1.0 conformant.

2022
On January 25, 2022, Vulkan 1.3 was released.
On March 1, 2022, Vulkan SC 1.0 was released, bringing Vulkan graphics and compute for the safety-critical industry while being based on the Vulkan 1.2 standard.On August 1, 2022, Raspberry Pi Foundation announced that their driver for the Raspberry Pi 4 is Vulkan 1.2 conformant.On September 1, 2022, Mesh Shading for Vulkan was released.

Support across vendors
Initial specifications stated that Vulkan drivers can be implemented on any hardware that supports OpenGL ES 3.1 or OpenGL 4.x and up. As Vulkan support requires new graphics drivers, this does not necessarily imply that every existing device that supports OpenGL ES 3.1 or OpenGL 4.x will have Vulkan drivers available.

Intel
As of March 2023, Intel has split Vulkan driver support on Windows and on Linux. All drivers are developed by Intel.
On Windows, Skylake through Ice Lake supports up to Vulkan 1.3, with limited support after July 2022 as future updates will only cover security fixes. Iris and newer are fully supported as of March 2023.On Linux, as of March 2023 there is incomplete Vulkan support for Haswell with it not being Vulkan 1.0 compliant. Apart from Haswell, Ivy Bridge and Broadwell are also supported by a legacy Vulkan driver in Mesa called HASVK. Skylake and newer being supported by a driver in Mesa called ANV.

AMD
On Windows, Vulkan 1.2 is supported from GCN 1.0 to GCN 3.0, with no further updates planned after June 2021. GCN 4.0 and newer support Vulkan 1.3.On Linux there are various different Vulkan drivers with varying and overlapping hardware support. There is the open-source Vulkan driver called AMDVLK, developed by AMD which mirrors Windows support. There is also the proprietary driver called AMDGPU-PRO which is not recommended to be used for most users as of March 2023.There is also the recommended driver called RADV in Mesa developed by Valve, Red Hat, Google and others. This driver as of March 2023 supports all GCN and RDNA cards. This RADV driver's support for GCN 1.0 through GCN 2.0 requires its experimental support in the amdgpu kernel module to be enabled.

NVIDIA
On Windows and Linux there is the NVIDIA developed Vulkan driver which supports Vulkan 1.2 on Kepler cards with no further updates planned after September 2021. Maxwell and newer support Vulkan 1.3.As of March 2023, on Linux there is an experimental, incomplete open-source Vulkan driver planned for Mesa called NVK which intends to support Turing and newer.

Android and mobile GPUs
Most modern Android devices support Vulkan. Android 7.0 Nougat includes optional Vulkan 1.0 support, Android 9.0 Pie includes optional Vulkan 1.1 support, and Android 10 requires all 64-bit devices support Vulkan 1.1. On Linux and some ChromeOS devices, the open-source Mesa driver provides support for Arm Mali (Midgard and Bifrost), Qualcomm Adreno, and Broadcom VideoCore VI hardware.

Apple
As of June 2022, Apple devices do not provide native support for the Vulkan API. Vulkan support is available via the open-source library MoltenVK, which provides a Vulkan implementation on top of the Metal graphics API provided on iOS and macOS devices, though it has some limitations in regards to certain advanced API features.In June 2022, version 1.3.217 of Vulkan added support for Metal objects, facilitating import and export between the two APIs. In December 2022, Vulkan version 1.3.236 added small fixes for the interaction with Apple Metal.

Backwards compatibility
Vulkan is not backwards compatible with OpenGL, although there are certain projects that implement OpenGL on top of Vulkan, such as Google's ANGLE and Mesa's Zink.Vulkan is also not compatible with other graphics APIs such as Direct3D, Metal, and Mantle, however implementations of those APIs exist atop of Vulkan:

Direct3D has a number of implementations, namely DXVK for Direct3D 9, 10, and 11, and VKD3D-Proton for Direct3D 12 support. Other, older versions, of Direct3D may be available as third-party libraries, such as D8VK for Direct3D 8.
Metal has an in-development third-party implementation named Indium, intended to be used with the Darling compatibility layer.
Mantle has an in-development third-party implementation named GRVK, to support older Mantle games.Platform-specific graphics APIs implemented atop of Vulkan may also be able to run on alternative platforms. For example, DXVK provides an alternative shared library intended to be used on Linux natively (without the Wine compatibility layer) to help with game porting.

See also
List of 3D graphics libraries

Notes
References
Further reading
Vulkan Programming Guide: The Official Guide to Learning Vulkan (OpenGL), Nov 10, 2016, by Graham Sellers and John Kessenich ISBN 978-0-1344-64541
Learning Vulkan, Dec 2016, by Parminder Singh ISBN 978-1-78646-980-9
Introduction to Computer Graphics and the Vulkan API, Jul 1, 2017, by Kenwright ISBN 978-1-5486-16175
Vulkan Cookbook, Apr 28, 2017, by Pawel Lapinski ISBN 978-1-7864-68154

External links
Official website