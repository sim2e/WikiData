Graphplan is an algorithm for automated planning developed by Avrim Blum and Merrick Furst in 1995. Graphplan takes as input a planning problem expressed in STRIPS and produces, if one is possible, a sequence of operations for reaching a goal state. 
The name graphplan is due to the use of a novel planning graph, to reduce the amount of search needed to find the solution from straightforward exploration of the state space graph.
In the state space graph:

the nodes are possible states,
and the edges indicate reachability through a certain action.On the contrary, in Graphplan's planning graph:

the nodes are actions and atomic facts, arranged into alternate levels,
and the edges are of two kinds:
from an atomic fact to the actions for which it is a condition,
from an action to the atomic facts it makes true or false.the first level contains true atomic facts identifying the initial state. 
Lists of incompatible facts that cannot be true at the same time and incompatible actions that cannot be executed together are also maintained.
The algorithm then iteratively extends the planning graph, proving that there are no solutions of length l-1 before looking for plans of length l by backward chaining: supposing the goals are true, Graphplan looks for the actions and previous states from which the goals can be reached, pruning as many of them as possible thanks to incompatibility information.
A closely related approach to planning is the Planning as Satisfiability (Satplan). Both reduce the automated planning problem to search for plans of different fixed horizon lengths.

References
A. Blum and M. Furst (1997). Fast planning through planning graph analysis. Artificial intelligence. 90:281-300.

External links
Avrim Blum's Graphplan home page
PLPLAN: A Java GraphPlan Implementation
NPlanner: A .NET GraphPlan Implementation
Emplan and JavaGP: C++ and Java implementations of Graphplan
MIT OpenCourseWare lecture on GraphPlan and making planning graphs