In the study of complex networks, a network is said to have community structure if the nodes of the network can be easily grouped into (potentially overlapping) sets of nodes such that each set of nodes is densely connected internally. In the particular case of non-overlapping community finding, this implies that the network divides naturally into groups of nodes with dense connections internally and sparser connections between groups.  But overlapping communities are also allowed. The more general definition is based on the principle that pairs of nodes are more likely to be connected if they are both members of the same community(ies), and less likely to be connected if they do not share communities. A related but different problem is community search, where the goal is to find a community that a certain vertex belongs to.

Properties
In the study of networks, such as computer and information networks, social networks and biological networks, a number of different characteristics have been found to occur commonly, including the small-world property, heavy-tailed degree distributions, and clustering, among others. Another common characteristic is community structure.
In the context of networks, community structure refers to the occurrence of groups of nodes in a network that are more densely connected internally than with the rest of the network, as shown in the example image to the right.  This inhomogeneity of connections suggests that the network has certain natural divisions within it.
Communities are often defined in terms of the partition of the set of vertices, that is each node is put into one and only one community, just as in the figure. This is a useful simplification and most community detection methods find this type of community structure. However, in some cases a better representation could be one where vertices are in more than one community.  This might happen in a social network where each vertex represents a person, and the communities represent the different groups of friends: one community for family, another community for co-workers, one for friends in the same sports club, and so on. The use of cliques for community detection discussed below is just one example of how such overlapping community structure can be found.
Some networks may not have any meaningful community structure.  Many basic network models, for example, such as the random graph and the Barabási–Albert model, do not display community structure.

Importance
Community structures are quite common in real networks. Social networks include community groups (the origin of the term, in fact) based on common location, interests, occupation, etc.Finding an underlying community structure in a network, if it exists, is important for a number of reasons. Communities allow us to create a large scale map of a network since individual communities act like meta-nodes in the network which makes its study easier.Individual communities also shed light on the function of the system represented by the network since communities often correspond to functional units of the system. In metabolic networks, such functional groups correspond to cycles or pathways whereas in the protein interaction network, communities correspond to proteins with similar functionality inside a biological cell. Similarly, citation networks form communities by research topic. Being able to identify these sub-structures within a network can provide insight into how network function and topology affect each other. Such insight can be useful in improving some algorithms on graphs such as spectral clustering.Importantly, communities often have very different properties than the average properties of the networks. Thus, only concentrating on the average properties usually misses many important and interesting features inside the networks. For example, in a given social network, both gregarious and reticent groups might exists simultaneously.Existence of communities also generally affects various processes like rumour spreading or epidemic spreading happening on a network. Hence to properly understand such processes, it is important to detect communities and also to study how they affect the spreading processes in various settings.
Finally, an important application that community detection has found in network science is the prediction of missing links and the identification of false links in the network. During the measurement process, some links may not get observed for a number of reasons. Similarly, some links could falsely enter into the data because of the errors in the measurement. Both these cases are well handled by community detection algorithm since it allows one to assign the probability of existence of an edge between a given pair of nodes.

Algorithms for finding communities
Finding communities within an arbitrary network can be a computationally difficult task.  The number of communities, if any, within the network is typically unknown and the communities are often of unequal size and/or density.  Despite these difficulties, however, several methods for community finding have been developed and employed with varying levels of success.

Minimum-cut method
One of the oldest algorithms for dividing networks into parts is the minimum cut method (and variants such as ratio cut and normalized cut).  This method sees use, for example, in load balancing for parallel computing in order to minimize communication between processor nodes.
In the minimum-cut method, the network is divided into a predetermined number of parts, usually of approximately the same size, chosen such that the number of edges between groups is minimized.  The method works well in many of the applications for which it was originally intended but is less than ideal for finding community structure in general networks since it will find communities regardless of whether they are implicit in the structure, and it will find only a fixed number of them.

Hierarchical clustering
Another method for finding community structures in networks is hierarchical clustering.  In this method one defines a similarity measure quantifying some (usually topological) type of similarity between node pairs.  Commonly used measures include the cosine similarity, the Jaccard index, and the Hamming distance between rows of the adjacency matrix.  Then one groups similar nodes into communities according to this measure.  There are several common schemes for performing the grouping, the two simplest being single-linkage clustering, in which two groups are considered separate communities if and only if all pairs of nodes in different groups have similarity lower than a given threshold, and complete linkage clustering, in which all nodes within every group have similarity greater than a threshold. An important step is how to determine the threshold to stop the agglomerative clustering, indicating a near-to-optimal community structure. A common strategy consist to build one or several metrics monitoring global properties of the network, which peak at given step of the clustering. An interesting approach in this direction is the use of various similarity or dissimilarity measures, combined through convex sums,. Another approximation is the computation of a quantity monitoring the density of edges within clusters with respect to the density between clusters, such as the partition density, which has been proposed when the similarity metric is defined between edges (which permits the definition of overlapping communities), and extended when the similarity is defined between nodes, which allows to consider alternative definitions of communities such as guilds (i.e. groups of nodes sharing a similar number of links with respect to the same neighbours but not necessarily connected themselves). These methods can be extended to consider multidimensional networks, for instance when we are dealing with networks having nodes with different types of links.

Girvan–Newman algorithm
Another commonly used algorithm for finding communities is the Girvan–Newman algorithm.  This algorithm identifies edges in a network that lie between communities and then removes them, leaving behind just the communities themselves.  The identification is performed by employing the graph-theoretic measure betweenness centrality, which assigns a number to each edge which is large if the edge lies "between" many pairs of nodes.
The Girvan–Newman algorithm returns results of reasonable quality and is popular because it has been implemented in a number of standard software packages.  But it also runs slowly, taking time O(m2n) on a network of n vertices and m edges, making it impractical for networks of more than a few thousand nodes.

Modularity maximization
In spite of its known drawbacks, one of the most widely used methods for community detection is modularity maximization.  Modularity is a benefit function that measures the quality of a particular division of a network into communities.  The modularity maximization method detects communities by searching over possible divisions of a network for one or more that have particularly high modularity.  Since exhaustive search over all possible divisions is usually intractable, practical algorithms are based on approximate optimization methods such as greedy algorithms, simulated annealing, or spectral optimization, with different approaches offering different balances between speed and accuracy.
A popular modularity maximization approach is the Louvain method, which iteratively optimizes local communities until global modularity can no longer be improved given perturbations to the current community state.
An algorithm that utilizes the RenEEL scheme, which is an example of the Extremal Ensemble Learning (EEL) paradigm, is currently the best modularity maximizing algorithm.The usefulness of modularity optimization is questionable, as it has been shown that modularity optimization often fails to detect clusters smaller than some scale, depending on the size of the network (resolution limit); on the other hand the landscape of modularity values is characterized by a huge degeneracy of partitions with high modularity, close to the absolute maximum, which may be very different from each other.

Statistical inference
Methods based on statistical inference attempt to fit a generative model to the network data, which encodes the community structure. The overall advantage of this approach compared to the alternatives is its more principled nature, and the capacity to inherently address issues of statistical significance. Most methods in the literature are based on the stochastic block model as well as variants including mixed membership,
degree-correction, and hierarchical structures.Model selection can be performed using principled approaches such as minimum description length (or equivalently, Bayesian model selection) and likelihood-ratio test. Currently many algorithms exist to perform efficient inference of stochastic block models, including belief propagation
and agglomerative Monte Carlo.In contrast to approaches that attempt to cluster a network given an objective function, this class of methods is based on generative models, which not only serve as a description of the large-scale structure of the network, but also can be used to generalize the data and predict the occurrence of missing or spurious links in the network.

Clique-based methods
Cliques are subgraphs in which every node is connected to every other node in the clique.  As nodes can not be more tightly connected than this, it is not surprising that there are many approaches to community detection in networks based on the detection of cliques in a graph and the analysis of how these overlap.  Note that as a node can be a member of more than one clique, a node can be a member of more than one community in these methods giving an "overlapping community structure".
One approach is to find the "maximal cliques". That is to find the cliques which are not the subgraph of any other clique.  The classic algorithm to find these is the Bron–Kerbosch algorithm. The overlap of these can be used to define communities in several ways.  The simplest is to consider only  maximal cliques bigger than a minimum size (number of nodes).  The union of these cliques then defines a subgraph whose components (disconnected parts) then define communities. Such approaches are often implemented in social network analysis software such as UCInet.
The alternative approach is to use cliques of fixed size 
  
    
      
        k
      
    
    {\displaystyle k}
  . The overlap of these can be used to define a type of 
  
    
      
        k
      
    
    {\displaystyle k}
  -regular hypergraph or a structure which is a generalisation of the line graph (the case when 
  
    
      
        k
        =
        2
      
    
    {\displaystyle k=2}
  ) known as a "Clique graph".  The clique graphs have vertices which represent the cliques in the original graph while the edges of the clique graph record the overlap of the clique in the original graph.  Applying any of the previous community detection methods (which assign each node to a community) to the clique graph then assigns each clique to a community.  This can then be used to determine community membership of nodes in the cliques.  Again as a node may be in several cliques, it can be a member of several communities.
For instance the  clique percolation method defines communities as percolation clusters of 
  
    
      
        k
      
    
    {\displaystyle k}
  -cliques. To do this it
finds all 
  
    
      
        k
      
    
    {\displaystyle k}
  -cliques in a network, that is all the complete sub-graphs of 
  
    
      
        k
      
    
    {\displaystyle k}
  -nodes.
It then defines two 
  
    
      
        k
      
    
    {\displaystyle k}
  -cliques to be adjacent if they share 
  
    
      
        k
        −
        1
      
    
    {\displaystyle k-1}
   nodes, that is this is used to define edges in a clique graph. A community is then defined to be the maximal union of 
  
    
      
        k
      
    
    {\displaystyle k}
  -cliques in which we can reach any 
  
    
      
        k
      
    
    {\displaystyle k}
  -clique from any other 
  
    
      
        k
      
    
    {\displaystyle k}
  -clique through series of 
  
    
      
        k
      
    
    {\displaystyle k}
  -clique adjacencies. That is communities are just the connected components in the clique graph. Since a node can belong to several different 
  
    
      
        k
      
    
    {\displaystyle k}
  -clique percolation clusters at the same time, the communities can overlap with each other.

Community detection in latent feature spaces
A network can be represented or projected onto a latent space via representation learning methods to efficiently represent a system. Then, various clustering methods can be employed to detect community structures. For Euclidean spaces, methods like embedding-based Silhouette community detection can be utilized. For Hypergeometric latent spaces, critical gap method or modified density-based, hierarchical, or partitioning-based clustering methods can be utilized.

Testing methods of finding communities algorithms
The evaluation of algorithms, to detect which are better at detecting community structure, is still an open question. It must be based on analyses of networks of known structure. A typical example is the "four groups" test, in which a network is divided into four equally-sized groups (usually of 32 nodes each) and the probabilities of connection within and between groups varied to create more or less challenging structures for the detection algorithm. Such benchmark graphs are a special case of the planted l-partition model
of Condon and Karp, or more generally of "stochastic block models", a general class of random network models containing community structure. Other more flexible benchmarks have been proposed that allow for varying group sizes and nontrivial degree distributions, such as LFR benchmark
which is an extension of the four groups benchmark that includes heterogeneous distributions of node degree and community size, making it a more severe test of community detection methods.Commonly used computer-generated benchmarks start with a network of well-defined communities. Then, this structure is degraded by rewiring or removing links and it gets harder and harder for the algorithms to detect the original partition. At the end, the network reaches a point where it is essentially random. This kind of benchmark may be called "open". The performance on these benchmarks is evaluated by measures such as normalized mutual information or variation of information. They compare the solution obtained by an algorithm  with the original community structure, evaluating the similarity of both partitions.

Detectability
During recent years, a rather surprising result has been obtained by various groups which shows that a phase transition exists in the community detection problem, showing that as the density of connections inside communities and between communities become more and more equal or both become smaller (equivalently, as the community structure becomes too weak or the network becomes too sparse), suddenly the communities become undetectable. In a sense, the communities themselves still exist, since the presence and absence of edges is still correlated with the community memberships of their endpoints; but it becomes information-theoretically impossible to label the nodes better than chance, or even distinguish the graph from one generated by a null model such as the Erdos–Renyi model without community structure. This transition is independent of the type of algorithm being used to detect communities, implying that there exists a fundamental limit on our ability to detect communities in networks, even with optimal Bayesian inference (i.e., regardless of our computational resources).Consider a stochastic block model with total 
  
    
      
        n
      
    
    {\displaystyle n}
   nodes, 
  
    
      
        q
        =
        2
      
    
    {\displaystyle q=2}
   groups of equal size, and let 
  
    
      
        
          p
          
            in
          
        
      
    
    {\displaystyle p_{\text{in}}}
   and 
  
    
      
        
          p
          
            out
          
        
      
    
    {\displaystyle p_{\text{out}}}
   be the connection probabilities inside and between the groups respectively. If 
  
    
      
        
          p
          
            in
          
        
        >
        
          p
          
            out
          
        
      
    
    {\displaystyle p_{\text{in}}>p_{\text{out}}}
  , the network would possess community structure since the link density inside the groups would be more than the density of links between the groups.  In the sparse case, 
  
    
      
        
          p
          
            in
          
        
      
    
    {\displaystyle p_{\text{in}}}
   and 
  
    
      
        
          p
          
            out
          
        
      
    
    {\displaystyle p_{\text{out}}}
   scale as 
  
    
      
        O
        (
        1
        
          /
        
        n
        )
      
    
    {\displaystyle O(1/n)}
   so that the average degree is constant:

  
    
      
        
          p
          
            in
          
        
        =
        
          c
          
            in
          
        
        
          /
        
        n
      
    
    {\displaystyle p_{\text{in}}=c_{\text{in}}/n}
   and 
  
    
      
        
          p
          
            out
          
        
        =
        
          c
          
            out
          
        
        
          /
        
        n
      
    
    {\displaystyle p_{\text{out}}=c_{\text{out}}/n}
  Then it becomes impossible to detect the communities when:

  
    
      
        
          c
          
            in
          
        
        −
        
          c
          
            out
          
        
        =
        
          
            2
            (
            
              c
              
                in
              
            
            +
            
              c
              
                out
              
            
            )
          
        
      
    
    {\displaystyle c_{\text{in}}-c_{\text{out}}={\sqrt {2(c_{\text{in}}+c_{\text{out}})}}}

See also
Complex network
Hierarchy
Network theory
Percolation theory

References
External links
Community detection in graphs – an introduction
Are there implementations of algorithms for community detection in graphs? – Stack Overflow
What are the differences between community detection algorithms in igraph? – Stack Overflow