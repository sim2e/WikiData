In computer science, automatic programming is a type of computer programming in which some mechanism generates a computer program to allow human programmers to write the code at a higher abstraction level.
There has been little agreement on the precise definition of automatic programming, mostly because its meaning has changed over time. David Parnas, tracing the history of "automatic programming" in published research, noted that in the 1940s it described automation of the manual process of punching paper tape. Later it referred to translation of high-level programming languages like Fortran and ALGOL. In fact, one of the earliest programs identifiable as a compiler was called Autocode. Parnas concluded that "automatic programming has always been a euphemism for programming in a higher-level language than was then available to the programmer."Program synthesis is one type of automatic programming where a procedure is created from scratch, based on mathematical requirements.

Origin
Mildred Koss, an early UNIVAC programmer, explains: "Writing machine code involved several tedious steps—breaking down a process into discrete instructions, assigning specific memory locations to all the commands, and managing the I/O buffers. After following these steps to implement mathematical routines, a sub-routine library, and sorting programs, our task was to look at the larger programming process. We needed to understand how we might reuse tested code and have the machine help in programming. As we programmed, we examined the process and tried to think of ways to abstract these steps to incorporate them into higher-level language. This led to the development of interpreters, assemblers, compilers, and generators—programs designed to operate on or produce other programs, that is, automatic programming."

Generative programming
Generative programming and the related term meta-programming are concepts whereby programs can be written "to manufacture software components in an automated way" just as automation has improved "production of traditional commodities such as garments, automobiles, chemicals, and electronics."The goal is to improve programmer productivity. It is often related to code-reuse topics such as component-based software engineering.

Source-code generation
Source-code generation is the process of generating source code based on a description of the problem or an ontological model such as a template and is accomplished with a programming tool such as a template processor or an integrated development environment (IDE). These tools allow the generation of source code through any of various means.
Modern programming languages are well supported by tools like Json4Swift (Swift) and Json2Kotlin (Kotlin).
Programs that could generate COBOL code include: 

the DYL250/DYL260/DYL270/DYL280 series
Business Controls Corporation's SB-5
Peat Marwick Mitchell's PMM2170 application-program-generator packageThese application generators supported COBOL inserts and overrides.
A macro processor, such as the C preprocessor, which replaces patterns in source code according to relatively simple rules, is a simple form of source-code generator. Source-to-source code generation tools also exist.Large language models such as ChatGPT are capable of generating a program's source code from a description of the program given in a natural language.

Low-code applications
A low-code development platform (LCDP) is software that provides an environment programmers use to create application software through graphical user interfaces and configuration instead of traditional computer programming.

See also
Automatic bug fixing
Automated machine learning
Comparison of code generation tools
Feature-oriented programming
Language-oriented programming
Modeling language
Program transformation
Semantic translation
Vocabulary-based transformation
Fourth-generation programming language
Low-code development platforms

Notes
References
Generative Programming: Methods, Tools, and Applications by Krzysztof Czarnecki and Ulrich W. Eisenecker, Addison Wesley, 2000.

External links
Code Generation for Dummies