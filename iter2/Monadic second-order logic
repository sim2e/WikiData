In mathematical logic, monadic second-order logic (MSO) is the fragment of second-order logic where the second-order quantification is limited to quantification over sets. It is particularly important in the logic of graphs, because of Courcelle's theorem, which provides algorithms for evaluating monadic second-order formulas over graphs of bounded treewidth. It is also of fundamental importance in automata theory, where the Büchi–Elgot–Trakhtenbrot theorem gives a logical characterization of the regular languages.
Second-order logic allows quantification over predicates.  However, MSO is the fragment in which second-order quantification is limited to monadic predicates (predicates having a single argument).  This is often described as quantification over "sets" because monadic predicates are equivalent in expressive power to sets (the set of elements for which the predicate is true).

Variants
Monadic second-order logic comes in two variants. In the variant considered over structures such as graphs and in Courcelle's theorem, the formula may involve non-monadic predicates (in this case the binary edge predicate 
  
    
      
        E
        (
        x
        ,
        y
        )
      
    
    {\displaystyle E(x,y)}
  ), but quantification is restricted to be over monadic predicates only. In the variant considered in automata theory and the Büchi–Elgot–Trakhtenbrot theorem, all predicates, including those in the formula itself, must be monadic, with the exceptions of equality (
  
    
      
        =
      
    
    {\displaystyle =}
  ) and ordering (
  
    
      
        <
      
    
    {\displaystyle <}
  ) relations.

Computational complexity of evaluation
Existential monadic second-order logic (EMSO) is the fragment of MSO in which all quantifiers over sets must be existential quantifiers, outside of any other part of the formula. The first-order quantifiers are not restricted. By analogy to Fagin's theorem, according to which existential (non-monadic) second-order logic captures precisely the descriptive complexity of the complexity class NP, the class of problems that may be expressed in existential monadic second-order logic has been called monadic NP. The restriction to monadic logic makes it possible to prove separations in this logic that remain unproven for non-monadic second-order logic. For instance, in the logic of graphs, testing whether a graph is disconnected belongs to monadic NP, as the test can be represented by a formula that describes the existence of a proper subset of vertices with no edges connecting them to the rest of the graph; however, the complementary problem, testing whether a graph is connected, does not belong to monadic NP. The existence of an analogous pair of complementary problems, only one of which has an existential second-order formula (without the restriction to monadic formulas) is equivalent to the inequality of NP and coNP, an open question in computational complexity.
By contrast, when we wish to check whether a Boolean MSO formula is satisfied by an input finite tree, this problem can be solved in linear time in the tree, by translating the Boolean MSO formula to a tree automaton and evaluating the automaton on the tree. In terms of the query, however, the complexity of this process is generally nonelementary. Thanks to Courcelle's theorem, we can also evaluate a Boolean MSO formula in linear time on an input graph if the treewidth of the graph is bounded by a constant.
For MSO formulas that have free variables, when the input data is a tree or has bounded treewidth, there are efficient enumeration algorithms to produce the set of all solutions, ensuring that the input data is preprocessed in linear time and that each solution is then produced in a delay linear in the size of each solution, i.e., constant-delay in the common case where all free variables of the query are first-order variables (i.e., they do not represent sets). There are also efficient algorithms for counting the number of solutions of the MSO formula in that case.

Decidability and complexity of satisfiability
The satisfiability problem for monadic second-order logic is undecidable in general because this logic subsumes first-order logic.
The monadic second-order theory of the infinite complete binary tree, called S2S, is decidable.  As a consequence of this result, the following theories are decidable:

The monadic second-order theory of trees.
The monadic second-order theory of 
  
    
      
        
          N
        
      
    
    {\displaystyle \mathbb {N} }
   under successor (S1S).
WS2S and WS1S, which restrict quantification to finite subsets (weak monadic second-order logic).  Note that for binary numbers (represented by subsets), addition is definable even in WS1S.For each of these theories (S2S, S1S, WS2S, WS1S), the complexity of the decision problem is nonelementary.

Use of satisfiability of MSO on trees in verification
Monadic second-order logic of trees has applications in formal verification. Decision procedures for MSO satisfiability have been used to prove properties of programs manipulating linked data structures, as a form of shape analysis, and for symbolic reasoning in hardware verification.

See also
Descriptive complexity theory
Monadic predicate calculus
Second-order logic


== References ==