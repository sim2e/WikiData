In computer science, a symbolic language is a language that uses characters or symbols to represent concepts, such as mathematical operations and the entities (or operands) on which these operations are performed.Modern programming languages use symbols to represent concepts and/or data and are, therefore, examples of symbolic languages.Some programming languages (such as Lisp and Mathematica) make it easy to represent higher-level abstractions as expressions in the language, enabling symbolic programming.

See also
Mathematical notation
Notation (general)
Programming language specification
Symbol table
Symbolic language (other)

References
External links

Common LISP: A Gentle Introduction to Symbolic Computation - Carnegie Mellon University