In mathematics (in particular, functional analysis), convolution is a mathematical operation on two functions (f and g) that produces a third function (
  
    
      
        f
        ∗
        g
      
    
    {\displaystyle f*g}
  ) that expresses how the shape of one is modified by the other. The term convolution refers to both the result function and to the process of computing it. It is defined as the integral of the product of the two functions after one is reflected about the y-axis and shifted. The choice of which function is reflected and shifted before the integral does not change the integral result (see commutativity). The integral is evaluated for all values of shift, producing the convolution function.
Some features of convolution are similar to cross-correlation: for real-valued functions, of a continuous or discrete variable, convolution (
  
    
      
        f
        ∗
        g
      
    
    {\displaystyle f*g}
  ) differs from cross-correlation (
  
    
      
        f
        ⋆
        g
      
    
    {\displaystyle f\star g}
  ) only in that either f(x) or g(x) is reflected about the y-axis in convolution; thus it is a cross-correlation of g(−x) and f(x), or f(−x) and g(x). For complex-valued functions, the cross-correlation operator is the adjoint of the convolution operator.
Convolution has applications that include probability, statistics, acoustics, spectroscopy, signal processing and image processing, geophysics, engineering, physics, computer vision and differential equations.The convolution can be defined for functions on Euclidean space and other groups (as algebraic structures). For example, periodic functions, such as the discrete-time Fourier transform, can be defined on a circle and convolved by periodic convolution. (See row 18 at DTFT § Properties.) A discrete convolution can be defined for functions on the set of integers.
Generalizations of convolution have applications in the field of numerical analysis and numerical linear algebra, and in the design and implementation of finite impulse response filters in signal processing.Computing the inverse of the convolution operation is known as deconvolution.

Definition
The convolution of f and g is written f∗g, denoting the operator with the symbol ∗. It is defined as the integral of the product of the two functions after one is reflected about the y-axis and shifted. As such, it is a particular kind of integral transform:

  
    
      
        (
        f
        ∗
        g
        )
        (
        t
        )
        :=
        
          ∫
          
            −
            ∞
          
          
            ∞
          
        
        f
        (
        τ
        )
        g
        (
        t
        −
        τ
        )
        
        d
        τ
        .
      
    
    {\displaystyle (f*g)(t):=\int _{-\infty }^{\infty }f(\tau )g(t-\tau )\,d\tau .}
  An equivalent definition is (see commutativity):

  
    
      
        (
        f
        ∗
        g
        )
        (
        t
        )
        :=
        
          ∫
          
            −
            ∞
          
          
            ∞
          
        
        f
        (
        t
        −
        τ
        )
        g
        (
        τ
        )
        
        d
        τ
        .
      
    
    {\displaystyle (f*g)(t):=\int _{-\infty }^{\infty }f(t-\tau )g(\tau )\,d\tau .}
  While the symbol t is used above, it need not represent the time domain. At each t, the convolution formula can be described as the area under the function f(τ) weighted by the function g(−τ) shifted by the amount t. As t changes, the weighting function g(t − τ) emphasizes different parts of the input function f(τ); If t is a positive value, then g(t − τ) is equal to g(−τ) that slides or is shifted along the 
  
    
      
        τ
      
    
    {\displaystyle \tau }
  -axis toward the right (toward +∞) by the amount of t, while if t is a negative value, then g(t − τ) is equal to g(−τ) that slides or is shifted toward the left (toward -∞) by the amount of |t|.
For functions f, g supported on only [0, ∞] (i.e., zero for negative arguments), the integration limits can be truncated, resulting in:

  
    
      
        (
        f
        ∗
        g
        )
        (
        t
        )
        =
        
          ∫
          
            0
          
          
            t
          
        
        f
        (
        τ
        )
        g
        (
        t
        −
        τ
        )
        
        d
        τ
        
         
        
          for 
        
        f
        ,
        g
        :
        [
        0
        ,
        ∞
        )
        →
        
          R
        
        .
      
    
    {\displaystyle (f*g)(t)=\int _{0}^{t}f(\tau )g(t-\tau )\,d\tau \quad \ {\text{for }}f,g:[0,\infty )\to \mathbb {R} .}
  For the multi-dimensional formulation of convolution, see domain of definition (below).

Notation
A common engineering notational convention is:

  
    
      
        f
        (
        t
        )
        ∗
        g
        (
        t
        )
        
          :=
        
        
          
            
              
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                f
                (
                τ
                )
                g
                (
                t
                −
                τ
                )
                
                d
                τ
              
              ⏟
            
          
          
            (
            f
            ∗
            g
            )
            (
            t
            )
          
        
        ,
      
    
    {\displaystyle f(t)*g(t)\mathrel {:=} \underbrace {\int _{-\infty }^{\infty }f(\tau )g(t-\tau )\,d\tau } _{(f*g)(t)},}
  which has to be interpreted carefully to avoid confusion. For instance, f(t)∗g(t − t0) is equivalent to (f∗g)(t − t0), but f(t − t0)∗g(t − t0) is in fact equivalent to (f∗g)(t − 2t0).

Relations with other transforms
Given two functions 
  
    
      
        f
        (
        t
        )
      
    
    {\displaystyle f(t)}
   and 
  
    
      
        g
        (
        t
        )
      
    
    {\displaystyle g(t)}
   with bilateral Laplace transforms (two-sided Laplace transform)

  
    
      
        F
        (
        s
        )
        =
        
          ∫
          
            −
            ∞
          
          
            ∞
          
        
        
          e
          
            −
            s
            u
          
        
         
        f
        (
        u
        )
         
        
          d
        
        u
      
    
    {\displaystyle F(s)=\int _{-\infty }^{\infty }e^{-su}\ f(u)\ {\text{d}}u}
  and

  
    
      
        G
        (
        s
        )
        =
        
          ∫
          
            −
            ∞
          
          
            ∞
          
        
        
          e
          
            −
            s
            v
          
        
         
        g
        (
        v
        )
         
        
          d
        
        v
      
    
    {\displaystyle G(s)=\int _{-\infty }^{\infty }e^{-sv}\ g(v)\ {\text{d}}v}
  respectively, the convolution operation 
  
    
      
        (
        f
        ∗
        g
        )
        (
        t
        )
      
    
    {\displaystyle (f*g)(t)}
   can be defined as the inverse Laplace transform of the product of 
  
    
      
        F
        (
        s
        )
      
    
    {\displaystyle F(s)}
   and 
  
    
      
        G
        (
        s
        )
      
    
    {\displaystyle G(s)}
  . More precisely,

  
    
      
        
          
            
              
                F
                (
                s
                )
                ⋅
                G
                (
                s
                )
              
              
                
                =
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                
                  e
                  
                    −
                    s
                    u
                  
                
                 
                f
                (
                u
                )
                 
                
                  d
                
                u
                ⋅
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                
                  e
                  
                    −
                    s
                    v
                  
                
                 
                g
                (
                v
                )
                 
                
                  d
                
                v
              
            
            
              
              
                
                =
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                
                  e
                  
                    −
                    s
                    (
                    u
                    +
                    v
                    )
                  
                
                 
                f
                (
                u
                )
                 
                g
                (
                v
                )
                 
                
                  d
                
                u
                 
                
                  d
                
                v
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}F(s)\cdot G(s)&=\int _{-\infty }^{\infty }e^{-su}\ f(u)\ {\text{d}}u\cdot \int _{-\infty }^{\infty }e^{-sv}\ g(v)\ {\text{d}}v\\&=\int _{-\infty }^{\infty }\int _{-\infty }^{\infty }e^{-s(u+v)}\ f(u)\ g(v)\ {\text{d}}u\ {\text{d}}v\end{aligned}}}
  Let 
  
    
      
        t
        =
        u
        +
        v
      
    
    {\displaystyle t=u+v}
   such that

  
    
      
        
          
            
              
                F
                (
                s
                )
                ⋅
                G
                (
                s
                )
              
              
                
                =
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                
                  e
                  
                    −
                    s
                    t
                  
                
                 
                f
                (
                u
                )
                 
                g
                (
                t
                −
                u
                )
                 
                
                  d
                
                u
                 
                
                  d
                
                t
              
            
            
              
              
                
                =
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                
                  e
                  
                    −
                    s
                    t
                  
                
                
                  
                    
                      
                        
                          ∫
                          
                            −
                            ∞
                          
                          
                            ∞
                          
                        
                        f
                        (
                        u
                        )
                         
                        g
                        (
                        t
                        −
                        u
                        )
                         
                        
                          d
                        
                        u
                      
                      ⏟
                    
                  
                  
                    (
                    f
                    ∗
                    g
                    )
                    (
                    t
                    )
                  
                
                 
                
                  d
                
                t
              
            
            
              
              
                
                =
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                
                  e
                  
                    −
                    s
                    t
                  
                
                (
                f
                ∗
                g
                )
                (
                t
                )
                 
                
                  d
                
                t
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}F(s)\cdot G(s)&=\int _{-\infty }^{\infty }\int _{-\infty }^{\infty }e^{-st}\ f(u)\ g(t-u)\ {\text{d}}u\ {\text{d}}t\\&=\int _{-\infty }^{\infty }e^{-st}\underbrace {\int _{-\infty }^{\infty }f(u)\ g(t-u)\ {\text{d}}u} _{(f*g)(t)}\ {\text{d}}t\\&=\int _{-\infty }^{\infty }e^{-st}(f*g)(t)\ {\text{d}}t\end{aligned}}}
  Note that 
  
    
      
        F
        (
        s
        )
        ⋅
        G
        (
        s
        )
      
    
    {\displaystyle F(s)\cdot G(s)}
   is the bilateral Laplace transform of 
  
    
      
        (
        f
        ∗
        g
        )
        (
        t
        )
      
    
    {\displaystyle (f*g)(t)}
  . A similar derivation can be done using the unilateral Laplace transform (one-sided Laplace transform).
The convolution operation also describes the output (in terms of the input) of an important class of operations known as linear time-invariant (LTI). See LTI system theory for a derivation of convolution as the result of LTI constraints. In terms of the Fourier transforms of the input and output of an LTI operation, no new frequency components are created. The existing ones are only modified (amplitude and/or phase). In other words, the output transform is the pointwise product of the input transform with a third transform (known as a transfer function). See Convolution theorem for a derivation of that property of convolution. Conversely, convolution can be derived as the inverse Fourier transform of the pointwise product of two Fourier transforms.

Visual explanation
Historical developments
One of the earliest uses of the convolution integral appeared in D'Alembert's derivation of Taylor's theorem in Recherches sur différents points importants du système du monde, published in 1754.Also, an expression of the type:

  
    
      
        ∫
        f
        (
        u
        )
        ⋅
        g
        (
        x
        −
        u
        )
        
        d
        u
      
    
    {\displaystyle \int f(u)\cdot g(x-u)\,du}
  is used by Sylvestre François Lacroix on page 505 of his book entitled Treatise on differences and series, which is the last of 3 volumes of the encyclopedic series: Traité du calcul différentiel et du calcul intégral, Chez Courcier, Paris, 1797–1800. Soon thereafter, convolution operations appear in the works of Pierre Simon Laplace, Jean-Baptiste Joseph Fourier, Siméon Denis Poisson, and others. The term itself did not come into wide use until the 1950s or 60s. Prior to that it was sometimes known as Faltung (which means folding in German), composition product, superposition integral, and Carson's integral. Yet it appears as early as 1903, though the definition is rather unfamiliar in older uses.The operation:

  
    
      
        
          ∫
          
            0
          
          
            t
          
        
        φ
        (
        s
        )
        ψ
        (
        t
        −
        s
        )
        
        d
        s
        ,
        
        0
        ≤
        t
        <
        ∞
        ,
      
    
    {\displaystyle \int _{0}^{t}\varphi (s)\psi (t-s)\,ds,\quad 0\leq t<\infty ,}
  is a particular case of composition products considered by the Italian mathematician Vito Volterra in 1913.

Circular convolution
When a function gT is periodic, with period T, then for functions, f, such that f ∗ gT exists, the convolution is also periodic and identical to:

  
    
      
        (
        f
        ∗
        
          g
          
            T
          
        
        )
        (
        t
        )
        ≡
        
          ∫
          
            
              t
              
                0
              
            
          
          
            
              t
              
                0
              
            
            +
            T
          
        
        
          [
          
            
              ∑
              
                k
                =
                −
                ∞
              
              
                ∞
              
            
            f
            (
            τ
            +
            k
            T
            )
          
          ]
        
        
          g
          
            T
          
        
        (
        t
        −
        τ
        )
        
        d
        τ
        ,
      
    
    {\displaystyle (f*g_{T})(t)\equiv \int _{t_{0}}^{t_{0}+T}\left[\sum _{k=-\infty }^{\infty }f(\tau +kT)\right]g_{T}(t-\tau )\,d\tau ,}
  where t0 is an arbitrary choice. The summation is called a periodic summation of the function f.
When gT is a periodic summation of another function, g, then f ∗ gT is known as a circular or cyclic convolution of f and g.
And if the periodic summation above is replaced by fT, the operation is called a periodic convolution of fT and gT.

Discrete convolution
For complex-valued functions f, g defined on the set Z of integers, the discrete convolution of f and g is given by:

  
    
      
        (
        f
        ∗
        g
        )
        [
        n
        ]
        =
        
          ∑
          
            m
            =
            −
            ∞
          
          
            ∞
          
        
        f
        [
        m
        ]
        g
        [
        n
        −
        m
        ]
        ,
      
    
    {\displaystyle (f*g)[n]=\sum _{m=-\infty }^{\infty }f[m]g[n-m],}
  or equivalently (see commutativity) by:

  
    
      
        (
        f
        ∗
        g
        )
        [
        n
        ]
        =
        
          ∑
          
            m
            =
            −
            ∞
          
          
            ∞
          
        
        f
        [
        n
        −
        m
        ]
        g
        [
        m
        ]
        .
      
    
    {\displaystyle (f*g)[n]=\sum _{m=-\infty }^{\infty }f[n-m]g[m].}
  The convolution of two finite sequences is defined by extending the sequences to finitely supported functions on the set of integers. When the sequences are the coefficients of two polynomials, then the coefficients of the ordinary product of the two polynomials are the convolution of the original two sequences. This is known as the Cauchy product of the coefficients of the sequences.
Thus when g has finite support in the set 
  
    
      
        {
        −
        M
        ,
        −
        M
        +
        1
        ,
        …
        ,
        M
        −
        1
        ,
        M
        }
      
    
    {\displaystyle \{-M,-M+1,\dots ,M-1,M\}}
   (representing, for instance, a finite impulse response), a finite summation may be used:

  
    
      
        (
        f
        ∗
        g
        )
        [
        n
        ]
        =
        
          ∑
          
            m
            =
            −
            M
          
          
            M
          
        
        f
        [
        n
        −
        m
        ]
        g
        [
        m
        ]
        .
      
    
    {\displaystyle (f*g)[n]=\sum _{m=-M}^{M}f[n-m]g[m].}

Circular discrete convolution
When a function gN is periodic, with period N, then for functions, f, such that f∗gN exists, the convolution is also periodic and identical to:

  
    
      
        (
        f
        ∗
        
          g
          
            N
          
        
        )
        [
        n
        ]
        ≡
        
          ∑
          
            m
            =
            0
          
          
            N
            −
            1
          
        
        
          (
          
            
              ∑
              
                k
                =
                −
                ∞
              
              
                ∞
              
            
            
              f
            
            [
            m
            +
            k
            N
            ]
          
          )
        
        
          g
          
            N
          
        
        [
        n
        −
        m
        ]
        .
      
    
    {\displaystyle (f*g_{N})[n]\equiv \sum _{m=0}^{N-1}\left(\sum _{k=-\infty }^{\infty }{f}[m+kN]\right)g_{N}[n-m].}
  The summation on k is called a periodic summation of the function f.
If gN is a periodic summation of another function, g, then f∗gN is known as a circular convolution of f and g.
When the non-zero durations of both f and g are limited to the interval [0, N − 1],  f∗gN reduces to these common forms:

The notation (f ∗N g) for cyclic convolution denotes convolution over the cyclic group of integers modulo N.
Circular convolution arises most often in the context of fast convolution with a fast Fourier transform (FFT) algorithm.

Fast convolution algorithms
In many situations, discrete convolutions can be converted to circular convolutions so that fast transforms with a convolution property can be used to implement the computation. For example, convolution of digit sequences is the kernel operation in multiplication of multi-digit numbers, which can therefore be efficiently implemented with transform techniques (Knuth 1997, §4.3.3.C; von zur Gathen & Gerhard 2003, §8.2).
Eq.1 requires N arithmetic operations per output value and N2 operations for N outputs. That can be significantly reduced with any of several fast algorithms. Digital signal processing and other applications typically use fast convolution algorithms to reduce the cost of the convolution to O(N log N) complexity.
The most common fast convolution algorithms use fast Fourier transform (FFT) algorithms via the circular convolution theorem. Specifically, the circular convolution of two finite-length sequences is found by taking an FFT of each sequence, multiplying pointwise, and then performing an inverse FFT. Convolutions of the type defined above are then efficiently implemented using that technique in conjunction with zero-extension and/or discarding portions of the output. Other fast convolution algorithms, such as the Schönhage–Strassen algorithm or the Mersenne transform, use fast Fourier transforms in other rings. The Winograd method is used as an alternative to the FFT. It significantly speeds up 1D, 2D, and 3D convolution.
If one sequence is much longer than the other, zero-extension of the shorter sequence and fast circular convolution is not the most computationally efficient method available. Instead, decomposing the longer sequence into blocks and convolving each block allows for faster algorithms such as the overlap–save method and overlap–add method. A hybrid convolution method that combines block and FIR algorithms allows for a zero input-output latency that is useful for real-time convolution computations.

Domain of definition
The convolution of two complex-valued functions on Rd is itself a complex-valued function on Rd, defined by:

  
    
      
        (
        f
        ∗
        g
        )
        (
        x
        )
        =
        
          ∫
          
            
              
                R
              
              
                d
              
            
          
        
        f
        (
        y
        )
        g
        (
        x
        −
        y
        )
        
        d
        y
        =
        
          ∫
          
            
              
                R
              
              
                d
              
            
          
        
        f
        (
        x
        −
        y
        )
        g
        (
        y
        )
        
        d
        y
        ,
      
    
    {\displaystyle (f*g)(x)=\int _{\mathbf {R} ^{d}}f(y)g(x-y)\,dy=\int _{\mathbf {R} ^{d}}f(x-y)g(y)\,dy,}
  and is well-defined only if f and g decay sufficiently rapidly at infinity in order for the integral to exist. Conditions for the existence of the convolution may be tricky, since a blow-up in g at infinity can be easily offset by sufficiently rapid decay in f. The question of existence thus may involve different conditions on f and g:

Compactly supported functions
If f and g are compactly supported continuous functions, then their convolution exists, and is also compactly supported and continuous (Hörmander 1983, Chapter 1). More generally, if either function (say f) is compactly supported and the other is locally integrable, then the convolution f∗g is well-defined and continuous.
Convolution of f and g is also well defined when both functions are locally square integrable on R and supported on an interval of the form [a, +∞) (or both supported on [−∞, a]).

Integrable functions
The convolution of f and g exists if f and g are both Lebesgue integrable functions in L1(Rd), and in this case f∗g is also integrable (Stein & Weiss 1971, Theorem 1.3). This is a consequence of Tonelli's theorem. This is also true for functions in L1, under the discrete convolution, or more generally for the convolution on any group.
Likewise, if f ∈ L1(Rd)  and  g ∈ Lp(Rd)  where 1 ≤ p ≤ ∞,  then  f∗g ∈ Lp(Rd),  and

  
    
      
        ‖
        
          f
        
        ∗
        g
        
          ‖
          
            p
          
        
        ≤
        ‖
        f
        
          ‖
          
            1
          
        
        ‖
        g
        
          ‖
          
            p
          
        
        .
      
    
    {\displaystyle \|{f}*g\|_{p}\leq \|f\|_{1}\|g\|_{p}.}
  In the particular case p = 1, this shows that L1 is a Banach algebra under the convolution (and equality of the two sides holds if f and g are non-negative almost everywhere).
More generally, Young's inequality implies that the convolution is a continuous bilinear map between suitable Lp spaces. Specifically, if  1 ≤ p, q, r ≤ ∞ satisfy:

  
    
      
        
          
            1
            p
          
        
        +
        
          
            1
            q
          
        
        =
        
          
            1
            r
          
        
        +
        1
        ,
      
    
    {\displaystyle {\frac {1}{p}}+{\frac {1}{q}}={\frac {1}{r}}+1,}
  then

  
    
      
        
          
            ‖
            
              f
              ∗
              g
            
            ‖
          
          
            r
          
        
        ≤
        
          
            ‖
            f
            ‖
          
          
            p
          
        
        
          
            ‖
            g
            ‖
          
          
            q
          
        
        ,
        
        f
        ∈
        
          
            
              L
            
          
          
            p
          
        
        ,
         
        g
        ∈
        
          
            
              L
            
          
          
            q
          
        
        ,
      
    
    {\displaystyle \left\Vert f*g\right\Vert _{r}\leq \left\Vert f\right\Vert _{p}\left\Vert g\right\Vert _{q},\quad f\in {\mathcal {L}}^{p},\ g\in {\mathcal {L}}^{q},}
  so that the convolution is a continuous bilinear mapping from Lp×Lq to Lr.
The Young inequality for convolution is also true in other contexts (circle group, convolution on Z). The preceding inequality is not sharp on the real line: when  1 < p, q, r < ∞, there exists a constant Bp,q < 1 such that:

  
    
      
        
          
            ‖
            
              f
              ∗
              g
            
            ‖
          
          
            r
          
        
        ≤
        
          B
          
            p
            ,
            q
          
        
        
          
            ‖
            f
            ‖
          
          
            p
          
        
        
          
            ‖
            g
            ‖
          
          
            q
          
        
        ,
        
        f
        ∈
        
          
            
              L
            
          
          
            p
          
        
        ,
         
        g
        ∈
        
          
            
              L
            
          
          
            q
          
        
        .
      
    
    {\displaystyle \left\Vert f*g\right\Vert _{r}\leq B_{p,q}\left\Vert f\right\Vert _{p}\left\Vert g\right\Vert _{q},\quad f\in {\mathcal {L}}^{p},\ g\in {\mathcal {L}}^{q}.}
  The optimal value of Bp,q was discovered in 1975 and independently in 1976, see Brascamp–Lieb inequality.
A stronger estimate is true provided  1 < p, q, r < ∞:

  
    
      
        ‖
        f
        ∗
        g
        
          ‖
          
            r
          
        
        ≤
        
          C
          
            p
            ,
            q
          
        
        ‖
        f
        
          ‖
          
            p
          
        
        ‖
        g
        
          ‖
          
            q
            ,
            w
          
        
      
    
    {\displaystyle \|f*g\|_{r}\leq C_{p,q}\|f\|_{p}\|g\|_{q,w}}
  where 
  
    
      
        ‖
        g
        
          ‖
          
            q
            ,
            w
          
        
      
    
    {\displaystyle \|g\|_{q,w}}
   is the weak Lq norm. Convolution also defines a bilinear continuous map 
  
    
      
        
          L
          
            p
            ,
            w
          
        
        ×
        
          L
          
            q
            ,
            w
          
        
        →
        
          L
          
            r
            ,
            w
          
        
      
    
    {\displaystyle L^{p,w}\times L^{q,w}\to L^{r,w}}
   for 
  
    
      
        1
        <
        p
        ,
        q
        ,
        r
        <
        ∞
      
    
    {\displaystyle 1<p,q,r<\infty }
  , owing to the weak Young inequality:

  
    
      
        ‖
        f
        ∗
        g
        
          ‖
          
            r
            ,
            w
          
        
        ≤
        
          C
          
            p
            ,
            q
          
        
        ‖
        f
        
          ‖
          
            p
            ,
            w
          
        
        ‖
        g
        
          ‖
          
            r
            ,
            w
          
        
        .
      
    
    {\displaystyle \|f*g\|_{r,w}\leq C_{p,q}\|f\|_{p,w}\|g\|_{r,w}.}

Functions of rapid decay
In addition to compactly supported functions and integrable functions, functions that have sufficiently rapid decay at infinity can also be convolved. An important feature of the convolution is that if f and g both decay rapidly, then f∗g also decays rapidly. In particular, if f and g are rapidly decreasing functions, then so is the convolution f∗g. Combined with the fact that convolution commutes with differentiation (see #Properties), it follows that the class of Schwartz functions is closed under convolution (Stein & Weiss 1971, Theorem 3.3).

Distributions
If f is a smooth function that is compactly supported and g is a distribution, then f∗g is a smooth function defined by

  
    
      
        
          ∫
          
            
              
                R
              
              
                d
              
            
          
        
        
          f
        
        (
        y
        )
        g
        (
        x
        −
        y
        )
        
        d
        y
        =
        (
        f
        ∗
        g
        )
        (
        x
        )
        ∈
        
          C
          
            ∞
          
        
        (
        
          
            R
          
          
            d
          
        
        )
        .
      
    
    {\displaystyle \int _{\mathbb {R} ^{d}}{f}(y)g(x-y)\,dy=(f*g)(x)\in C^{\infty }(\mathbb {R} ^{d}).}
  More generally, it is possible to extend the definition of the convolution in a unique way with 
  
    
      
        φ
      
    
    {\displaystyle \varphi }
   the same as f above, so that the associative law

  
    
      
        f
        ∗
        (
        g
        ∗
        φ
        )
        =
        (
        f
        ∗
        g
        )
        ∗
        φ
      
    
    {\displaystyle f*(g*\varphi )=(f*g)*\varphi }
  remains valid in the case where f is a distribution, and g a compactly supported distribution (Hörmander 1983, §4.2).

Measures
The convolution of any two Borel measures μ and ν of bounded variation is the measure 
  
    
      
        μ
        ∗
        ν
      
    
    {\displaystyle \mu *\nu }
   defined by (Rudin 1962)

  
    
      
        
          ∫
          
            
              
                R
              
              
                d
              
            
          
        
        f
        (
        x
        )
        
        d
        (
        μ
        ∗
        ν
        )
        (
        x
        )
        =
        
          ∫
          
            
              
                R
              
              
                d
              
            
          
        
        
          ∫
          
            
              
                R
              
              
                d
              
            
          
        
        f
        (
        x
        +
        y
        )
        
        d
        μ
        (
        x
        )
        
        d
        ν
        (
        y
        )
        .
      
    
    {\displaystyle \int _{\mathbf {R} ^{d}}f(x)\,d(\mu *\nu )(x)=\int _{\mathbf {R} ^{d}}\int _{\mathbf {R} ^{d}}f(x+y)\,d\mu (x)\,d\nu (y).}
  In particular,

  
    
      
        (
        μ
        ∗
        ν
        )
        (
        A
        )
        =
        
          ∫
          
            
              
                R
              
              
                d
              
            
            ×
            
              
                R
              
              
                d
              
            
          
        
        
          1
          
            A
          
        
        (
        x
        +
        y
        )
        
        d
        (
        μ
        ×
        ν
        )
        (
        x
        ,
        y
        )
        ,
      
    
    {\displaystyle (\mu *\nu )(A)=\int _{\mathbf {R} ^{d}\times \mathbf {R} ^{d}}1_{A}(x+y)\,d(\mu \times \nu )(x,y),}
  where 
  
    
      
        A
        ⊂
        
          
            R
          
          
            d
          
        
      
    
    {\displaystyle A\subset \mathbf {R} ^{d}}
   is a measurable set and 
  
    
      
        
          1
          
            A
          
        
      
    
    {\displaystyle 1_{A}}
   is the indicator function of 
  
    
      
        A
      
    
    {\displaystyle A}
  .
This agrees with the convolution defined above when μ and ν are regarded as distributions, as well as the convolution of L1 functions when μ and ν are absolutely continuous with respect to the Lebesgue measure.
The convolution of measures also satisfies the following version of Young's inequality

  
    
      
        ‖
        μ
        ∗
        ν
        ‖
        ≤
        ‖
        μ
        ‖
        ‖
        ν
        ‖
      
    
    {\displaystyle \|\mu *\nu \|\leq \|\mu \|\|\nu \|}
  where the norm is the total variation of a measure. Because the space of measures of bounded variation is a Banach space, convolution of measures can be treated with standard methods of functional analysis that may not apply for the convolution of distributions.

Properties
Algebraic properties
The convolution defines a product on the linear space of integrable functions. This product satisfies the following algebraic properties, which formally mean that the space of integrable functions with the product given by convolution is a commutative associative algebra without identity (Strichartz 1994, §3.3). Other linear spaces of functions, such as the space of continuous functions of compact support, are closed under the convolution, and so also form commutative associative algebras.

Commutativity
 Proof: By definition:  Changing the variable of integration to 
  
    
      
        u
        =
        t
        −
        τ
      
    
    {\displaystyle u=t-\tau }
   the result follows.Associativity
 Proof: This follows from using Fubini's theorem (i.e., double integrals can be evaluated as iterated integrals in either order).Distributivity
 Proof: This follows from linearity of the integral.Associativity with scalar multiplication
 for any real (or complex) number 
  
    
      
        a
      
    
    {\displaystyle a}
  .Multiplicative identity
No algebra of functions possesses an identity for the convolution. The lack of identity is typically not a major inconvenience, since most collections of functions on which the convolution is performed can be convolved with a delta distribution (a unitary impulse, centered at zero) or, at the very least (as is the case of L1) admit approximations to the identity. The linear space of compactly supported distributions does, however, admit an identity under the convolution. Specifically,  where δ is the delta distribution.Inverse element
Some distributions S have an inverse element S−1 for the convolution which then must satisfy  from which an explicit formula for S−1 may be obtained.The set of invertible distributions forms an abelian group under the convolution.Complex conjugation
Relationship with differentiation
 Proof:

  
    
      
        
          
            
              
                (
                f
                ∗
                g
                
                  )
                  ′
                
              
              
                
                =
                
                  
                    d
                    
                      d
                      t
                    
                  
                
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                f
                (
                τ
                )
                g
                (
                t
                −
                τ
                )
                
                d
                τ
              
            
            
              
              
                
                =
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                f
                (
                τ
                )
                
                  
                    ∂
                    
                      ∂
                      t
                    
                  
                
                g
                (
                t
                −
                τ
                )
                
                d
                τ
              
            
            
              
              
                
                =
                
                  ∫
                  
                    −
                    ∞
                  
                  
                    ∞
                  
                
                f
                (
                τ
                )
                
                  g
                  ′
                
                (
                t
                −
                τ
                )
                
                d
                τ
                =
                f
                ∗
                
                  g
                  ′
                
                .
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}(f*g)'&={\frac {d}{dt}}\int _{-\infty }^{\infty }f(\tau )g(t-\tau )\,d\tau \\&=\int _{-\infty }^{\infty }f(\tau ){\frac {\partial }{\partial t}}g(t-\tau )\,d\tau \\&=\int _{-\infty }^{\infty }f(\tau )g'(t-\tau )\,d\tau =f*g'.\end{aligned}}}
  Relationship with integration
If 
  
    
      
        F
        (
        t
        )
        =
        
          ∫
          
            −
            ∞
          
          
            t
          
        
        f
        (
        τ
        )
        d
        τ
        ,
      
    
    {\textstyle F(t)=\int _{-\infty }^{t}f(\tau )d\tau ,}
   and 
  
    
      
        G
        (
        t
        )
        =
        
          ∫
          
            −
            ∞
          
          
            t
          
        
        g
        (
        τ
        )
        
        d
        τ
        ,
      
    
    {\textstyle G(t)=\int _{-\infty }^{t}g(\tau )\,d\tau ,}
   then

Integration
If f and g are integrable functions, then the integral of their convolution on the whole space is simply obtained as the product of their integrals:

  
    
      
        
          ∫
          
            
              
                R
              
              
                d
              
            
          
        
        (
        f
        ∗
        g
        )
        (
        x
        )
        
        d
        x
        =
        
          (
          
            
              ∫
              
                
                  
                    R
                  
                  
                    d
                  
                
              
            
            f
            (
            x
            )
            
            d
            x
          
          )
        
        
          (
          
            
              ∫
              
                
                  
                    R
                  
                  
                    d
                  
                
              
            
            g
            (
            x
            )
            
            d
            x
          
          )
        
        .
      
    
    {\displaystyle \int _{\mathbf {R} ^{d}}(f*g)(x)\,dx=\left(\int _{\mathbf {R} ^{d}}f(x)\,dx\right)\left(\int _{\mathbf {R} ^{d}}g(x)\,dx\right).}
  This follows from Fubini's theorem. The same result holds if f and g are only assumed to be nonnegative measurable functions, by Tonelli's theorem.

Differentiation
In the one-variable case,

  
    
      
        
          
            d
            
              d
              x
            
          
        
        (
        f
        ∗
        g
        )
        =
        
          
            
              d
              f
            
            
              d
              x
            
          
        
        ∗
        g
        =
        f
        ∗
        
          
            
              d
              g
            
            
              d
              x
            
          
        
      
    
    {\displaystyle {\frac {d}{dx}}(f*g)={\frac {df}{dx}}*g=f*{\frac {dg}{dx}}}
  where 
  
    
      
        
          
            d
            
              d
              x
            
          
        
      
    
    {\displaystyle {\frac {d}{dx}}}
   is the derivative. More generally, in the case of functions of several variables, an analogous formula holds with the partial derivative:

  
    
      
        
          
            ∂
            
              ∂
              
                x
                
                  i
                
              
            
          
        
        (
        f
        ∗
        g
        )
        =
        
          
            
              ∂
              f
            
            
              ∂
              
                x
                
                  i
                
              
            
          
        
        ∗
        g
        =
        f
        ∗
        
          
            
              ∂
              g
            
            
              ∂
              
                x
                
                  i
                
              
            
          
        
        .
      
    
    {\displaystyle {\frac {\partial }{\partial x_{i}}}(f*g)={\frac {\partial f}{\partial x_{i}}}*g=f*{\frac {\partial g}{\partial x_{i}}}.}
  A particular consequence of this is that the convolution can be viewed as a "smoothing" operation: the convolution of f and g is differentiable as many times as f and g are in total.
These identities hold under the precise condition that f and g are absolutely integrable and at least one of them has an absolutely integrable (L1) weak derivative, as a consequence of Young's convolution inequality. For instance, when f is continuously differentiable with compact support, and g is an arbitrary locally integrable function,

  
    
      
        
          
            d
            
              d
              x
            
          
        
        (
        f
        ∗
        g
        )
        =
        
          
            
              d
              f
            
            
              d
              x
            
          
        
        ∗
        g
        .
      
    
    {\displaystyle {\frac {d}{dx}}(f*g)={\frac {df}{dx}}*g.}
  These identities also hold much more broadly in the sense of tempered distributions if one of f or g is a 
rapidly decreasing tempered distribution, a 
compactly supported tempered distribution or a Schwartz function and the other is a tempered distribution. On the other hand, two positive integrable and infinitely differentiable functions may have a nowhere continuous convolution.
In the discrete case, the difference operator D f(n) = f(n + 1) − f(n) satisfies an analogous relationship:

  
    
      
        D
        (
        f
        ∗
        g
        )
        =
        (
        D
        f
        )
        ∗
        g
        =
        f
        ∗
        (
        D
        g
        )
        .
      
    
    {\displaystyle D(f*g)=(Df)*g=f*(Dg).}

Convolution theorem
The convolution theorem states that

  
    
      
        
          
            F
          
        
        {
        f
        ∗
        g
        }
        =
        
          
            F
          
        
        {
        f
        }
        ⋅
        
          
            F
          
        
        {
        g
        }
      
    
    {\displaystyle {\mathcal {F}}\{f*g\}={\mathcal {F}}\{f\}\cdot {\mathcal {F}}\{g\}}
  where 
  
    
      
        
          
            F
          
        
        {
        f
        }
      
    
    {\displaystyle {\mathcal {F}}\{f\}}
   denotes the Fourier transform of 
  
    
      
        f
      
    
    {\displaystyle f}
  .

Convolution in other types of transformations
Versions of this theorem also hold for the Laplace transform, two-sided Laplace transform, Z-transform and Mellin transform.

Convolution on matrices
If 
  
    
      
        
          
            W
          
        
      
    
    {\displaystyle {\mathcal {W}}}
   is the Fourier transform matrix, then

  
    
      
        
          
            W
          
        
        
          (
          
            
              C
              
                (
                1
                )
              
            
            x
            ∗
            
              C
              
                (
                2
                )
              
            
            y
          
          )
        
        =
        
          (
          
            
              
                W
              
            
            
              C
              
                (
                1
                )
              
            
            ∙
            
              
                W
              
            
            
              C
              
                (
                2
                )
              
            
          
          )
        
        (
        x
        ⊗
        y
        )
        =
        
          
            W
          
        
        
          C
          
            (
            1
            )
          
        
        x
        ∘
        
          
            W
          
        
        
          C
          
            (
            2
            )
          
        
        y
      
    
    {\displaystyle {\mathcal {W}}\left(C^{(1)}x\ast C^{(2)}y\right)=\left({\mathcal {W}}C^{(1)}\bullet {\mathcal {W}}C^{(2)}\right)(x\otimes y)={\mathcal {W}}C^{(1)}x\circ {\mathcal {W}}C^{(2)}y}
  ,where 
  
    
      
        ∙
      
    
    {\displaystyle \bullet }
   is face-splitting product, 
  
    
      
        ⊗
      
    
    {\displaystyle \otimes }
   denotes Kronecker product, 
  
    
      
        ∘
      
    
    {\displaystyle \circ }
   denotes Hadamard product (this result is an evolving of count sketch properties).

Translational equivariance
The convolution commutes with translations, meaning that

  
    
      
        
          τ
          
            x
          
        
        (
        f
        ∗
        g
        )
        =
        (
        
          τ
          
            x
          
        
        f
        )
        ∗
        g
        =
        f
        ∗
        (
        
          τ
          
            x
          
        
        g
        )
      
    
    {\displaystyle \tau _{x}(f*g)=(\tau _{x}f)*g=f*(\tau _{x}g)}
  where τxf is the translation of the function f by x defined by

  
    
      
        (
        
          τ
          
            x
          
        
        f
        )
        (
        y
        )
        =
        f
        (
        y
        −
        x
        )
        .
      
    
    {\displaystyle (\tau _{x}f)(y)=f(y-x).}
  If f is a Schwartz function, then τxf is the convolution with a translated Dirac delta function τxf = f ∗ τx δ. So translation invariance of the convolution of Schwartz functions is a consequence of the associativity of convolution.
Furthermore, under certain conditions, convolution is the most general translation invariant operation. Informally speaking, the following holds

Suppose that S is a bounded linear operator acting on functions which commutes with translations: S(τxf) = τx(Sf) for all x. Then S is given as convolution with a function (or distribution) gS; that is Sf = gS ∗ f.Thus some translation invariant operations can be represented as convolution. Convolutions play an important role in the study of time-invariant systems, and especially LTI system theory. The representing function gS is the impulse response of the transformation S.
A more precise version of the theorem quoted above requires specifying the class of functions on which the convolution is defined, and also requires assuming in addition that S must be a continuous linear operator with respect to the appropriate topology. It is known, for instance, that every continuous translation invariant continuous linear operator on L1 is the convolution with a finite Borel measure. More generally, every continuous translation invariant continuous linear operator on Lp for 1 ≤ p < ∞ is the convolution with a tempered distribution whose Fourier transform is bounded. To wit, they are all given by bounded Fourier multipliers.

Convolutions on groups
If G is a suitable group endowed with a measure λ, and if f and g are real or complex valued integrable functions on G, then we can define their convolution by

  
    
      
        (
        f
        ∗
        g
        )
        (
        x
        )
        =
        
          ∫
          
            G
          
        
        f
        (
        y
        )
        g
        
          (
          
            
              y
              
                −
                1
              
            
            x
          
          )
        
        
        d
        λ
        (
        y
        )
        .
      
    
    {\displaystyle (f*g)(x)=\int _{G}f(y)g\left(y^{-1}x\right)\,d\lambda (y).}
  It is not commutative in general. In typical cases of interest G is a locally compact Hausdorff topological group and λ is a (left-) Haar measure. In that case, unless G is unimodular, the convolution defined in this way is not the same as 
  
    
      
        ∫
        f
        
          (
          
            x
            
              y
              
                −
                1
              
            
          
          )
        
        g
        (
        y
        )
        
        d
        λ
        (
        y
        )
      
    
    {\textstyle \int f\left(xy^{-1}\right)g(y)\,d\lambda (y)}
  . The preference of one over the other is made so that convolution with a fixed function g commutes with left translation in the group:

  
    
      
        
          L
          
            h
          
        
        (
        f
        ∗
        g
        )
        =
        (
        
          L
          
            h
          
        
        f
        )
        ∗
        g
        .
      
    
    {\displaystyle L_{h}(f*g)=(L_{h}f)*g.}
  Furthermore, the convention is also required for consistency with the definition of the convolution of measures given below. However, with a right instead of a left Haar measure, the latter integral is preferred over the former.
On locally compact abelian groups, a version of the convolution theorem holds: the Fourier transform of a convolution is the pointwise product of the Fourier transforms. The circle group T with the Lebesgue measure is an immediate example. For a fixed g in L1(T), we have the following familiar operator acting on the Hilbert space L2(T):

  
    
      
        T
        
          f
        
        (
        x
        )
        =
        
          
            1
            
              2
              π
            
          
        
        
          ∫
          
            
              T
            
          
        
        
          f
        
        (
        y
        )
        g
        (
        x
        −
        y
        )
        
        d
        y
        .
      
    
    {\displaystyle T{f}(x)={\frac {1}{2\pi }}\int _{\mathbf {T} }{f}(y)g(x-y)\,dy.}
  The operator T is compact. A direct calculation shows that its adjoint T*  is convolution with

  
    
      
        
          
            
              g
              ¯
            
          
        
        (
        −
        y
        )
        .
      
    
    {\displaystyle {\bar {g}}(-y).}
  By the commutativity property cited above, T is normal: T* T = TT* . Also, T commutes with the translation operators. Consider the family S of operators consisting of all such convolutions and the translation operators. Then S is a commuting family of normal operators. According to spectral theory, there exists an orthonormal basis {hk} that simultaneously diagonalizes S. This characterizes convolutions on the circle. Specifically, we have

  
    
      
        
          h
          
            k
          
        
        (
        x
        )
        =
        
          e
          
            i
            k
            x
          
        
        ,
        
        k
        ∈
        
          Z
        
        ,
        
      
    
    {\displaystyle h_{k}(x)=e^{ikx},\quad k\in \mathbb {Z} ,\;}
  which are precisely the characters of T. Each convolution is a compact multiplication operator in this basis. This can be viewed as a version of the convolution theorem discussed above.
A discrete example is a finite cyclic group of order n. Convolution operators are here represented by circulant matrices, and can be diagonalized by the discrete Fourier transform.
A similar result holds for compact groups (not necessarily abelian): the matrix coefficients of finite-dimensional unitary representations form an orthonormal basis in L2 by the Peter–Weyl theorem, and an analog of the convolution theorem continues to hold, along with many other aspects of harmonic analysis that depend on the Fourier transform.

Convolution of measures
Let G be a (multiplicatively written) topological group.
If μ and ν are finite Borel measures on G, then their convolution μ∗ν is defined as the pushforward measure of the group action and can be written as

  
    
      
        (
        μ
        ∗
        ν
        )
        (
        E
        )
        =
        ∬
        
          1
          
            E
          
        
        (
        x
        y
        )
        
        d
        μ
        (
        x
        )
        
        d
        ν
        (
        y
        )
      
    
    {\displaystyle (\mu *\nu )(E)=\iint 1_{E}(xy)\,d\mu (x)\,d\nu (y)}
  for each measurable subset E of G. The convolution is also a finite measure, whose total variation satisfies

  
    
      
        ‖
        μ
        ∗
        ν
        ‖
        ≤
        
          ‖
          μ
          ‖
        
        
          ‖
          ν
          ‖
        
        .
      
    
    {\displaystyle \|\mu *\nu \|\leq \left\|\mu \right\|\left\|\nu \right\|.}
  In the case when G is locally compact with (left-)Haar measure λ, and μ and ν are absolutely continuous with respect to a λ, so that each has a density function, then the convolution μ∗ν is also absolutely continuous, and its density function is just the convolution of the two separate density functions.
If μ and ν are probability measures on the topological group (R,+), then the convolution μ∗ν is the probability distribution of the sum X + Y of two independent random variables X and Y whose respective distributions are μ and ν.

Infimal convolution
In convex analysis, the infimal convolution of proper (not identically 
  
    
      
        +
        ∞
      
    
    {\displaystyle +\infty }
  ) convex functions 
  
    
      
        
          f
          
            1
          
        
        ,
        …
        ,
        
          f
          
            m
          
        
      
    
    {\displaystyle f_{1},\dots ,f_{m}}
   on 
  
    
      
        
          
            R
          
          
            n
          
        
      
    
    {\displaystyle \mathbb {R} ^{n}}
   is defined by:
It can be shown that the infimal convolution of convex functions is convex.  Furthermore, it satisfies an identity analogous to that of the Fourier transform of a traditional convolution, with the role of the Fourier transform is played instead by the Legendre transform:

We have:

Bialgebras
Let (X, Δ, ∇, ε, η) be a bialgebra with comultiplication Δ, multiplication ∇, unit η, and counit ε. The convolution is a product defined on the endomorphism algebra End(X) as follows. Let φ, ψ ∈ End(X), that is, φ, ψ: X → X are functions that respect all algebraic structure of X, then the convolution φ∗ψ is defined as the composition

  
    
      
        X
        
          
            →
            
              Δ
            
          
        
        X
        ⊗
        X
        
          
            →
            
              ϕ
              ⊗
              ψ
            
          
        
        X
        ⊗
        X
        
          
            →
            
              ∇
            
          
        
        X
        .
      
    
    {\displaystyle X\mathrel {\xrightarrow {\Delta } } X\otimes X\mathrel {\xrightarrow {\phi \otimes \psi } } X\otimes X\mathrel {\xrightarrow {\nabla } } X.}
  The convolution appears notably in the definition of Hopf algebras (Kassel 1995, §III.3). A bialgebra is a Hopf algebra if and only if it has an antipode: an endomorphism S such that

  
    
      
        S
        ∗
        
          id
          
            X
          
        
        =
        
          id
          
            X
          
        
        ∗
        S
        =
        η
        ∘
        ε
        .
      
    
    {\displaystyle S*\operatorname {id} _{X}=\operatorname {id} _{X}*S=\eta \circ \varepsilon .}

Applications
Convolution and related operations are found in many applications in science, engineering and mathematics.

Convolutional neural networks apply multiple cascaded convolution kernels with applications in machine vision and artificial intelligence. Though these are actually cross-correlations rather than convolutions in most cases.
In non-neural-network-based image processing
In digital image processing convolutional filtering plays an important role in many important algorithms in edge detection and related processes (see Kernel (image processing))
In optics, an out-of-focus photograph is a convolution of the sharp image with a lens function. The photographic term for this is bokeh.
In image processing applications such as adding blurring.
In digital data processing
In analytical chemistry, Savitzky–Golay smoothing filters are used for the analysis of spectroscopic data. They can improve signal-to-noise ratio with minimal distortion of the spectra
In statistics, a weighted moving average is a convolution.
In acoustics, reverberation is the convolution of the original sound with echoes from objects surrounding the sound source.
In digital signal processing, convolution is used to map the impulse response of a real room on a digital audio signal.
In electronic music convolution is the imposition of a spectral or rhythmic structure on a sound. Often this envelope or structure is taken from another sound. The convolution of two signals is the filtering of one through the other.
In electrical engineering, the convolution of one function (the input signal) with a second function (the impulse response) gives the output of a linear time-invariant system (LTI). At any given moment, the output is an accumulated effect of all the prior values of the input function, with the most recent values typically having the most influence (expressed as a multiplicative factor). The impulse response function provides that factor as a function of the elapsed time since each input value occurred.
In physics, wherever there is a linear system with a "superposition principle", a convolution operation makes an appearance. For instance, in spectroscopy line broadening due to the Doppler effect on its own gives a Gaussian spectral line shape and collision broadening alone gives a Lorentzian line shape. When both effects are operative, the line shape is a convolution of Gaussian and Lorentzian, a Voigt function.
In time-resolved fluorescence spectroscopy, the excitation signal can be treated as a chain of delta pulses, and the measured fluorescence is a sum of exponential decays from each delta pulse.
In computational fluid dynamics, the large eddy simulation (LES) turbulence model uses the convolution operation to lower the range of length scales necessary in computation thereby reducing computational cost.
In probability theory, the probability distribution of the sum of two independent random variables is the convolution of their individual distributions.
In kernel density estimation, a distribution is estimated from sample points by convolution with a kernel, such as an isotropic Gaussian.
In radiotherapy treatment planning systems, most part of all modern codes of calculation applies a convolution-superposition algorithm.
In structural reliability, the reliability index can be defined based on the convolution theorem.
The definition of reliability index for limit state functions with nonnormal distributions can be established corresponding to the joint distribution function. In fact, the joint distribution function can be obtained using the convolution theory.
In Smoothed-particle hydrodynamics, simulations of fluid dynamics are calculated using particles, each with surrounding kernels. For any given particle 
  
    
      
        i
      
    
    {\displaystyle i}
  , some physical quantity 
  
    
      
        
          A
          
            i
          
        
      
    
    {\displaystyle A_{i}}
   is calculated as a convolution of 
  
    
      
        
          A
          
            j
          
        
      
    
    {\displaystyle A_{j}}
   with a weighting function, where 
  
    
      
        j
      
    
    {\displaystyle j}
   denotes the neighbors of particle 
  
    
      
        i
      
    
    {\displaystyle i}
  : those that are located within its kernel. The convolution is approximated as a summation over each neighbor.
In Fractional calculus convolution is instrumental in various definitions of fractional integral and fractional derivative.

See also
Notes
References
Further reading
Bracewell, R. (1986), The Fourier Transform and Its Applications (2nd ed.), McGraw–Hill, ISBN 0-07-116043-4.
Damelin, S.; Miller, W. (2011), The Mathematics of Signal Processing, Cambridge University Press, ISBN 978-1107601048
Diggle, P. J. (1985), "A kernel method for smoothing point process data", Journal of the Royal Statistical Society, Series C, 34 (2): 138–147, doi:10.2307/2347366, JSTOR 2347366, S2CID 116746157
Dominguez-Torres, Alejandro (Nov 2, 2010). "Origin and history of convolution". 41 pgs. http://www.slideshare.net/Alexdfar/origin-adn-history-of-convolution. Cranfield, Bedford MK43 OAL, UK. Retrieved Mar 13, 2013.
Ghasemi, S. Hooman; Nowak, Andrzej S. (2017), "Reliability Index for Non-normal Distributions of Limit State Functions", Structural Engineering and Mechanics, 62 (3): 365–372, doi:10.12989/sem.2017.62.3.365
Grinshpan, A. Z. (2017), "An inequality for multiple convolutions with respect to Dirichlet probability measure", Advances in Applied Mathematics, 82 (1): 102–119, doi:10.1016/j.aam.2016.08.001
Hewitt, Edwin; Ross, Kenneth A. (1979), Abstract harmonic analysis. Vol. I, Grundlehren der Mathematischen Wissenschaften [Fundamental Principles of Mathematical Sciences], vol. 115 (2nd ed.), Berlin, New York: Springer-Verlag, ISBN 978-3-540-09434-0, MR 0551496.
Hewitt, Edwin; Ross, Kenneth A. (1970), Abstract harmonic analysis. Vol. II: Structure and analysis for compact groups. Analysis on locally compact Abelian groups, Die Grundlehren der mathematischen Wissenschaften, Band 152, Berlin, New York: Springer-Verlag, MR 0262773.
Hörmander, L. (1983), The analysis of linear partial differential operators I, Grundl. Math. Wissenschaft., vol. 256, Springer, doi:10.1007/978-3-642-96750-4, ISBN 3-540-12104-8, MR 0717035.
Kassel, Christian (1995), Quantum groups, Graduate Texts in Mathematics, vol. 155, Berlin, New York: Springer-Verlag, doi:10.1007/978-1-4612-0783-2, ISBN 978-0-387-94370-1, MR 1321145.
Knuth, Donald (1997), Seminumerical Algorithms (3rd. ed.), Reading, Massachusetts: Addison–Wesley, ISBN 0-201-89684-2.
Narici, Lawrence; Beckenstein, Edward (2011). Topological Vector Spaces. Pure and applied mathematics (Second ed.). Boca Raton, FL: CRC Press. ISBN 978-1584888666. OCLC 144216834.
Reed, Michael; Simon, Barry (1975), Methods of modern mathematical physics. II. Fourier analysis, self-adjointness, New York-London: Academic Press Harcourt Brace Jovanovich, Publishers, pp. xv+361, ISBN 0-12-585002-6, MR 0493420
Rudin, Walter (1962), Fourier analysis on groups, Interscience Tracts in Pure and Applied Mathematics, vol. 12, New York–London: Interscience Publishers, ISBN 0-471-52364-X, MR 0152834.
Schaefer, Helmut H.; Wolff, Manfred P. (1999). Topological Vector Spaces. GTM. Vol. 8 (Second ed.). New York, NY: Springer New York Imprint Springer. ISBN 978-1-4612-7155-0. OCLC 840278135.
Stein, Elias; Weiss, Guido (1971), Introduction to Fourier Analysis on Euclidean Spaces, Princeton University Press, ISBN 0-691-08078-X.
Sobolev, V.I. (2001) [1994], "Convolution of functions", Encyclopedia of Mathematics, EMS Press.
Strichartz, R. (1994), A Guide to Distribution Theory and Fourier Transforms, CRC Press, ISBN 0-8493-8273-4.
Titchmarsh, E (1948), Introduction to the theory of Fourier integrals (2nd ed.), New York, N.Y.: Chelsea Pub. Co. (published 1986), ISBN 978-0-8284-0324-5.
Trèves, François (2006) [1967]. Topological Vector Spaces, Distributions and Kernels. Mineola, N.Y.: Dover Publications. ISBN 978-0-486-45352-1. OCLC 853623322.
Uludag, A. M. (1998), "On possible deterioration of smoothness under the operation of convolution", J. Math. Anal. Appl., 227 (2): 335–358, doi:10.1006/jmaa.1998.6091
von zur Gathen, J.; Gerhard, J . (2003), Modern Computer Algebra, Cambridge University Press, ISBN 0-521-82646-2.

External links

Earliest Uses: The entry on Convolution has some historical information.
Convolution, on The Data Analysis BriefBook
http://www.jhu.edu/~signals/convolve/index.html Visual convolution Java Applet
http://www.jhu.edu/~signals/discreteconv2/index.html Visual convolution Java Applet for discrete-time functions
https://get-the-solution.net/projects/discret-convolution discret-convolution online calculator
https://lpsa.swarthmore.edu/Convolution/CI.html Convolution demo and visualization in javascript
https://phiresky.github.io/convolution-demo/ Another convolution demo in javascript
Lectures on Image Processing: A collection of 18 lectures in pdf format from Vanderbilt University. Lecture 7 is on 2-D convolution., by Alan Peters
* https://archive.org/details/Lectures_on_Image_Processing
Convolution Kernel Mask Operation Interactive tutorial
Convolution at MathWorld
Freeverb3 Impulse Response Processor: Opensource zero latency impulse response processor with VST plugins
Stanford University CS 178 interactive Flash demo  showing how spatial convolution works.
A video lecture on the subject of convolution given by Salman Khan
Example of FFT convolution for pattern-recognition (image processing)
Intuitive Guide to Convolution A blogpost about an intuitive interpretation of convolution.