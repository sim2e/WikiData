In mathematics, a pairing function is a process to uniquely encode two natural numbers into a single natural number.Any pairing function can be used in set theory to prove that integers and rational numbers have the same cardinality as natural numbers.

Definition
A pairing function is a bijection

  
    
      
        π
        :
        
          N
        
        ×
        
          N
        
        →
        
          N
        
        .
      
    
    {\displaystyle \pi :\mathbb {N} \times \mathbb {N} \to \mathbb {N} .}
  More generally, a pairing function on a set A is a function that maps each pair of elements from A into an element of A, such that any two pairs of elements of A are associated with different elements of A, or a bijection from 
  
    
      
        
          A
          
            2
          
        
      
    
    {\displaystyle A^{2}}
   to A.

Hopcroft and Ullman pairing function
Hopcroft and Ullman (1979) define the following pairing function: 
  
    
      
        ⟨
        i
        ,
        j
        ⟩
        :=
        
          
            1
            2
          
        
        (
        i
        +
        j
        −
        2
        )
        (
        i
        +
        j
        −
        1
        )
        +
        i
      
    
    {\displaystyle \langle i,j\rangle :={\frac {1}{2}}(i+j-2)(i+j-1)+i}
  , where 
  
    
      
        i
        ,
        j
        ∈
        {
        1
        ,
        2
        ,
        3
        ,
        …
        }
      
    
    {\displaystyle i,j\in \{1,2,3,\dots \}}
  . This is the same as the Cantor pairing function below, shifted to exclude 0 (i.e., 
  
    
      
        i
        =
        
          k
          
            2
          
        
        +
        1
      
    
    {\displaystyle i=k_{2}+1}
  , 
  
    
      
        j
        =
        
          k
          
            1
          
        
        +
        1
      
    
    {\displaystyle j=k_{1}+1}
  , and 
  
    
      
        ⟨
        i
        ,
        j
        ⟩
        −
        1
        =
        π
        (
        
          k
          
            2
          
        
        ,
        
          k
          
            1
          
        
        )
      
    
    {\displaystyle \langle i,j\rangle -1=\pi (k_{2},k_{1})}
  ).

Cantor pairing function
The Cantor pairing function is a primitive recursive pairing function

  
    
      
        π
        :
        
          N
        
        ×
        
          N
        
        →
        
          N
        
      
    
    {\displaystyle \pi :\mathbb {N} \times \mathbb {N} \to \mathbb {N} }
  defined by 

  
    
      
        π
        (
        
          k
          
            1
          
        
        ,
        
          k
          
            2
          
        
        )
        :=
        
          
            1
            2
          
        
        (
        
          k
          
            1
          
        
        +
        
          k
          
            2
          
        
        )
        (
        
          k
          
            1
          
        
        +
        
          k
          
            2
          
        
        +
        1
        )
        +
        
          k
          
            2
          
        
      
    
    {\displaystyle \pi (k_{1},k_{2}):={\frac {1}{2}}(k_{1}+k_{2})(k_{1}+k_{2}+1)+k_{2}}
  where 
  
    
      
        
          k
          
            1
          
        
        ,
        
          k
          
            2
          
        
        ∈
        {
        0
        ,
        1
        ,
        2
        ,
        3
        ,
        …
        }
      
    
    {\displaystyle k_{1},k_{2}\in \{0,1,2,3,\dots \}}
  .It can also be expressed as 
  
    
      
        P
        a
        i
        r
        [
        x
        ,
        y
        ]
        :=
        
          
            
              
                x
                
                  2
                
              
              +
              x
              +
              2
              x
              y
              +
              3
              y
              +
              
                y
                
                  2
                
              
            
            2
          
        
      
    
    {\displaystyle Pair[x,y]:={\frac {x^{2}+x+2xy+3y+y^{2}}{2}}}
  .It is also strictly monotonic w.r.t. each argument, that is, for all 
  
    
      
        
          k
          
            1
          
        
        ,
        
          k
          
            1
          
          ′
        
        ,
        
          k
          
            2
          
        
        ,
        
          k
          
            2
          
          ′
        
        ∈
        
          N
        
      
    
    {\displaystyle k_{1},k_{1}',k_{2},k_{2}'\in \mathbb {N} }
  , if 
  
    
      
        
          k
          
            1
          
        
        <
        
          k
          
            1
          
          ′
        
      
    
    {\displaystyle k_{1}<k_{1}'}
  , then 
  
    
      
        π
        (
        
          k
          
            1
          
        
        ,
        
          k
          
            2
          
        
        )
        <
        π
        (
        
          k
          
            1
          
          ′
        
        ,
        
          k
          
            2
          
        
        )
      
    
    {\displaystyle \pi (k_{1},k_{2})<\pi (k_{1}',k_{2})}
  ; similarly, if 
  
    
      
        
          k
          
            2
          
        
        <
        
          k
          
            2
          
          ′
        
      
    
    {\displaystyle k_{2}<k_{2}'}
  , then 
  
    
      
        π
        (
        
          k
          
            1
          
        
        ,
        
          k
          
            2
          
        
        )
        <
        π
        (
        
          k
          
            1
          
        
        ,
        
          k
          
            2
          
          ′
        
        )
      
    
    {\displaystyle \pi (k_{1},k_{2})<\pi (k_{1},k_{2}')}
  .The statement that this is the only quadratic pairing function is known as the Fueter–Pólya theorem. Whether this is the only polynomial pairing function is still an open question. When we apply the pairing function to k1 and k2 we often denote the resulting number as ⟨k1, k2⟩.This definition can be inductively generalized to the Cantor tuple function

  
    
      
        
          π
          
            (
            n
            )
          
        
        :
        
          
            N
          
          
            n
          
        
        →
        
          N
        
      
    
    {\displaystyle \pi ^{(n)}:\mathbb {N} ^{n}\to \mathbb {N} }
  for 
  
    
      
        n
        >
        2
      
    
    {\displaystyle n>2}
   as

  
    
      
        
          π
          
            (
            n
            )
          
        
        (
        
          k
          
            1
          
        
        ,
        …
        ,
        
          k
          
            n
            −
            1
          
        
        ,
        
          k
          
            n
          
        
        )
        :=
        π
        (
        
          π
          
            (
            n
            −
            1
            )
          
        
        (
        
          k
          
            1
          
        
        ,
        …
        ,
        
          k
          
            n
            −
            1
          
        
        )
        ,
        
          k
          
            n
          
        
        )
      
    
    {\displaystyle \pi ^{(n)}(k_{1},\ldots ,k_{n-1},k_{n}):=\pi (\pi ^{(n-1)}(k_{1},\ldots ,k_{n-1}),k_{n})}
  with the base case defined above for a pair: 
  
    
      
        
          π
          
            (
            2
            )
          
        
        (
        
          k
          
            1
          
        
        ,
        
          k
          
            2
          
        
        )
        :=
        π
        (
        
          k
          
            1
          
        
        ,
        
          k
          
            2
          
        
        )
        .
      
    
    {\displaystyle \pi ^{(2)}(k_{1},k_{2}):=\pi (k_{1},k_{2}).}

Inverting the Cantor pairing function
Let 
  
    
      
        z
        ∈
        
          N
        
      
    
    {\displaystyle z\in \mathbb {N} }
   be an arbitrary natural number. We will show that there exist unique values 
  
    
      
        x
        ,
        y
        ∈
        
          N
        
      
    
    {\displaystyle x,y\in \mathbb {N} }
   such that

  
    
      
        z
        =
        π
        (
        x
        ,
        y
        )
        =
        
          
            
              (
              x
              +
              y
              +
              1
              )
              (
              x
              +
              y
              )
            
            2
          
        
        +
        y
      
    
    {\displaystyle z=\pi (x,y)={\frac {(x+y+1)(x+y)}{2}}+y}
  and hence that the function π(x, y) is invertible. It is helpful to define some intermediate values in the calculation: 

  
    
      
        w
        =
        x
        +
        y
        
      
    
    {\displaystyle w=x+y\!}
  

  
    
      
        t
        =
        
          
            1
            2
          
        
        w
        (
        w
        +
        1
        )
        =
        
          
            
              
                w
                
                  2
                
              
              +
              w
            
            2
          
        
      
    
    {\displaystyle t={\frac {1}{2}}w(w+1)={\frac {w^{2}+w}{2}}}
  

  
    
      
        z
        =
        t
        +
        y
        
      
    
    {\displaystyle z=t+y\!}
  where t is the triangle number of w. If we solve the quadratic equation 

  
    
      
        
          w
          
            2
          
        
        +
        w
        −
        2
        t
        =
        0
        
      
    
    {\displaystyle w^{2}+w-2t=0\!}
  for w as a function of t, we get 

  
    
      
        w
        =
        
          
            
              
                
                  8
                  t
                  +
                  1
                
              
              −
              1
            
            2
          
        
      
    
    {\displaystyle w={\frac {{\sqrt {8t+1}}-1}{2}}}
  which is a strictly increasing and continuous function when t is non-negative real. Since 

  
    
      
        t
        ≤
        z
        =
        t
        +
        y
        <
        t
        +
        (
        w
        +
        1
        )
        =
        
          
            
              (
              w
              +
              1
              
                )
                
                  2
                
              
              +
              (
              w
              +
              1
              )
            
            2
          
        
      
    
    {\displaystyle t\leq z=t+y<t+(w+1)={\frac {(w+1)^{2}+(w+1)}{2}}}
  we get that 

  
    
      
        w
        ≤
        
          
            
              
                
                  8
                  z
                  +
                  1
                
              
              −
              1
            
            2
          
        
        <
        w
        +
        1
      
    
    {\displaystyle w\leq {\frac {{\sqrt {8z+1}}-1}{2}}<w+1}
  and thus 

  
    
      
        w
        =
        
          ⌊
          
            
              
                
                  
                    8
                    z
                    +
                    1
                  
                
                −
                1
              
              2
            
          
          ⌋
        
        .
      
    
    {\displaystyle w=\left\lfloor {\frac {{\sqrt {8z+1}}-1}{2}}\right\rfloor .}
  where ⌊ ⌋ is the floor function.
So to calculate x and y from z, we do:

  
    
      
        w
        =
        
          ⌊
          
            
              
                
                  
                    8
                    z
                    +
                    1
                  
                
                −
                1
              
              2
            
          
          ⌋
        
      
    
    {\displaystyle w=\left\lfloor {\frac {{\sqrt {8z+1}}-1}{2}}\right\rfloor }
  

  
    
      
        t
        =
        
          
            
              
                w
                
                  2
                
              
              +
              w
            
            2
          
        
      
    
    {\displaystyle t={\frac {w^{2}+w}{2}}}
  

  
    
      
        y
        =
        z
        −
        t
        
      
    
    {\displaystyle y=z-t\!}
  

  
    
      
        x
        =
        w
        −
        y
        .
        
      
    
    {\displaystyle x=w-y.\!}
  Since the Cantor pairing function is invertible, it must be one-to-one and onto.

Examples
To calculate π(47, 32):

47 + 32 = 79,
79 + 1 = 80,
79 × 80 = 6320,
6320 ÷ 2 = 3160,
3160 + 32 = 3192,so π(47, 32) = 3192.
To find x and y such that π(x, y) = 1432:

8 × 1432 = 11456,
11456 + 1 = 11457,
√11457 = 107.037,
107.037 − 1 = 106.037,
106.037 ÷ 2 = 53.019,
⌊53.019⌋ = 53,so w = 53;

53 + 1 = 54,
53 × 54 = 2862,
2862 ÷ 2 = 1431,so t = 1431;

1432 − 1431 = 1,so y = 1;

53 − 1 = 52,so x = 52; thus π(52, 1) = 1432.

Derivation
The graphical shape of Cantor's pairing function, a diagonal progression, is a standard trick in working with infinite sequences and countability. The algebraic rules of this diagonal-shaped function can verify its validity for a range of polynomials, of which a quadratic will turn out to be the simplest, using the method of induction. Indeed, this same technique can also be followed to try and derive any number of other functions for any variety of schemes for enumerating the plane.
A pairing function can usually be defined inductively – that is, given the nth pair, what is the (n+1)th pair? The way Cantor's function progresses diagonally across the plane can be expressed as

  
    
      
        π
        (
        x
        ,
        y
        )
        +
        1
        =
        π
        (
        x
        −
        1
        ,
        y
        +
        1
        )
      
    
    {\displaystyle \pi (x,y)+1=\pi (x-1,y+1)}
  .The function must also define what to do when it hits the boundaries of the 1st quadrant – Cantor's pairing function resets back to the x-axis to resume its diagonal progression one step further out, or algebraically:

  
    
      
        π
        (
        0
        ,
        k
        )
        +
        1
        =
        π
        (
        k
        +
        1
        ,
        0
        )
      
    
    {\displaystyle \pi (0,k)+1=\pi (k+1,0)}
  .Also we need to define the starting point, what will be the initial step in our induction method: π(0, 0) = 0.
Assume that there is a quadratic 2-dimensional polynomial that can fit these conditions (if there were not, one could just repeat by trying a higher-degree polynomial). The general form is then

  
    
      
        π
        (
        x
        ,
        y
        )
        =
        a
        
          x
          
            2
          
        
        +
        b
        
          y
          
            2
          
        
        +
        c
        x
        y
        +
        d
        x
        +
        e
        y
        +
        f
      
    
    {\displaystyle \pi (x,y)=ax^{2}+by^{2}+cxy+dx+ey+f}
  .Plug in our initial and boundary conditions to get f = 0 and:

  
    
      
        b
        
          k
          
            2
          
        
        +
        e
        k
        +
        1
        =
        a
        (
        k
        +
        1
        
          )
          
            2
          
        
        +
        d
        (
        k
        +
        1
        )
      
    
    {\displaystyle bk^{2}+ek+1=a(k+1)^{2}+d(k+1)}
  ,so we can match our k terms to get

b = a
d = 1-a
e = 1+a.So every parameter can be written in terms of a except for c, and we have a final equation, our diagonal step, that will relate them:

  
    
      
        
          
            
              
                π
                (
                x
                ,
                y
                )
                +
                1
              
              
                
                =
                a
                (
                
                  x
                  
                    2
                  
                
                +
                
                  y
                  
                    2
                  
                
                )
                +
                c
                x
                y
                +
                (
                1
                −
                a
                )
                x
                +
                (
                1
                +
                a
                )
                y
                +
                1
              
            
            
              
              
                
                =
                a
                (
                (
                x
                −
                1
                
                  )
                  
                    2
                  
                
                +
                (
                y
                +
                1
                
                  )
                  
                    2
                  
                
                )
                +
                c
                (
                x
                −
                1
                )
                (
                y
                +
                1
                )
                +
                (
                1
                −
                a
                )
                (
                x
                −
                1
                )
                +
                (
                1
                +
                a
                )
                (
                y
                +
                1
                )
                .
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}\pi (x,y)+1&=a(x^{2}+y^{2})+cxy+(1-a)x+(1+a)y+1\\&=a((x-1)^{2}+(y+1)^{2})+c(x-1)(y+1)+(1-a)(x-1)+(1+a)(y+1).\end{aligned}}}
  Expand and match terms again to get fixed values for a and c, and thus all parameters:

a = 1/2 = b = d
c = 1
e = 3/2
f = 0.Therefore

  
    
      
        
          
            
              
                π
                (
                x
                ,
                y
                )
              
              
                
                =
                
                  
                    1
                    2
                  
                
                (
                
                  x
                  
                    2
                  
                
                +
                
                  y
                  
                    2
                  
                
                )
                +
                x
                y
                +
                
                  
                    1
                    2
                  
                
                x
                +
                
                  
                    3
                    2
                  
                
                y
              
            
            
              
              
                
                =
                
                  
                    1
                    2
                  
                
                (
                x
                +
                y
                )
                (
                x
                +
                y
                +
                1
                )
                +
                y
                ,
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}\pi (x,y)&={\frac {1}{2}}(x^{2}+y^{2})+xy+{\frac {1}{2}}x+{\frac {3}{2}}y\\&={\frac {1}{2}}(x+y)(x+y+1)+y,\end{aligned}}}
  is the Cantor pairing function, and we also demonstrated through the derivation that this satisfies all the conditions of induction.

Other pairing functions
The function 
  
    
      
        
          P
          
            2
          
        
        (
        x
        ,
        y
        )
        :=
        
          2
          
            x
          
        
        (
        2
        y
        +
        1
        )
        −
        1
      
    
    {\displaystyle P_{2}(x,y):=2^{x}(2y+1)-1}
   is a pairing function.
In 1990, Regan proposed the first known pairing function that is computable in linear time and with constant space (as the previously known examples can only be computed in linear time iff multiplication can be too, which is doubtful). In fact, both this pairing function and its inverse can be computed with finite-state transducers that run in real time. In the same paper, the author proposed two more monotone pairing functions that can be computed online in linear time and with logarithmic space; the first can also be computed offline with zero space.In 2001, Pigeon proposed a pairing function based on bit-interleaving, defined recursively as:

  
    
      
        ⟨
        i
        ,
        j
        
          ⟩
          
            P
          
        
        =
        
          
            {
            
              
                
                  T
                
                
                  
                    if
                  
                   
                  i
                  =
                  j
                  =
                  0
                  ;
                
              
              
                
                  ⟨
                  ⌊
                  i
                  
                    /
                  
                  2
                  ⌋
                  ,
                  ⌊
                  j
                  
                    /
                  
                  2
                  ⌋
                  
                    ⟩
                    
                      P
                    
                  
                  :
                  
                    i
                    
                      0
                    
                  
                  :
                  
                    j
                    
                      0
                    
                  
                
                
                  
                    otherwise,
                  
                
              
            
            
          
        
      
    
    {\displaystyle \langle i,j\rangle _{P}={\begin{cases}T&{\text{if}}\ i=j=0;\\\langle \lfloor i/2\rfloor ,\lfloor j/2\rfloor \rangle _{P}:i_{0}:j_{0}&{\text{otherwise,}}\end{cases}}}
  where 
  
    
      
        
          i
          
            0
          
        
      
    
    {\displaystyle i_{0}}
   and 
  
    
      
        
          j
          
            0
          
        
      
    
    {\displaystyle j_{0}}
   are the least significant bits of i and j respectively.In 2006, Szudzik proposed a "more elegant" pairing function defined by the expression:

  
    
      
        ElegantPair
        ⁡
        [
        x
        ,
        y
        ]
        :=
        
          
            {
            
              
                
                  
                    y
                    
                      2
                    
                  
                  +
                  x
                
                
                  
                    if
                  
                   
                  x
                  ≠
                  max
                  {
                  x
                  ,
                  y
                  }
                  ,
                
              
              
                
                  
                    x
                    
                      2
                    
                  
                  +
                  x
                  +
                  y
                
                
                  
                    if
                  
                   
                  x
                  =
                  max
                  {
                  x
                  ,
                  y
                  }
                  .
                
              
            
            
          
        
      
    
    {\displaystyle \operatorname {ElegantPair} [x,y]:={\begin{cases}y^{2}+x&{\text{if}}\ x\neq \max\{x,y\},\\x^{2}+x+y&{\text{if}}\ x=\max\{x,y\}.\\\end{cases}}}
  Which can be unpaired using the expression:

  
    
      
        ElegantUnpair
        ⁡
        [
        z
        ]
        :=
        
          
            {
            
              
                
                  
                    {
                    
                      z
                      −
                      ⌊
                      
                        
                          z
                        
                      
                      
                        ⌋
                        
                          2
                        
                      
                      ,
                      ⌊
                      
                        
                          z
                        
                      
                      ⌋
                    
                    }
                  
                
                
                  
                    if 
                  
                  z
                  −
                  ⌊
                  
                    
                      z
                    
                  
                  
                    ⌋
                    
                      2
                    
                  
                  <
                  ⌊
                  
                    
                      z
                    
                  
                  ⌋
                  ,
                
              
              
                
                  
                    {
                    
                      ⌊
                      
                        
                          z
                        
                      
                      ⌋
                      ,
                      z
                      −
                      ⌊
                      
                        
                          z
                        
                      
                      
                        ⌋
                        
                          2
                        
                      
                      −
                      ⌊
                      
                        
                          z
                        
                      
                      ⌋
                    
                    }
                  
                
                
                  
                    if 
                  
                  z
                  −
                  ⌊
                  
                    
                      z
                    
                  
                  
                    ⌋
                    
                      2
                    
                  
                  ≥
                  ⌊
                  
                    
                      z
                    
                  
                  ⌋
                  .
                
              
            
            
          
        
      
    
    {\displaystyle \operatorname {ElegantUnpair} [z]:={\begin{cases}\left\{z-\lfloor {\sqrt {z}}\rfloor ^{2},\lfloor {\sqrt {z}}\rfloor \right\}&{\text{if }}z-\lfloor {\sqrt {z}}\rfloor ^{2}<\lfloor {\sqrt {z}}\rfloor ,\\\left\{\lfloor {\sqrt {z}}\rfloor ,z-\lfloor {\sqrt {z}}\rfloor ^{2}-\lfloor {\sqrt {z}}\rfloor \right\}&{\text{if }}z-\lfloor {\sqrt {z}}\rfloor ^{2}\geq \lfloor {\sqrt {z}}\rfloor .\end{cases}}}
  (Qualitatively, it assigns consecutive numbers to pairs along the edges of squares.) This pairing function orders SK combinator calculus expressions by depth.
This method is the mere application to 
  
    
      
        
          N
        
      
    
    {\displaystyle \mathbb {N} }
   of the idea, found in most textbooks on Set Theory,
used to establish 
  
    
      
        
          κ
          
            2
          
        
        =
        κ
      
    
    {\displaystyle \kappa ^{2}=\kappa }
   for any infinite cardinal 
  
    
      
        κ
      
    
    {\displaystyle \kappa }
   in ZFC.
Define on 
  
    
      
        κ
        ×
        κ
      
    
    {\displaystyle \kappa \times \kappa }
   the binary relation

  
    
      
        (
        α
        ,
        β
        )
        ≼
        (
        γ
        ,
        δ
        )
        
           if either 
        
        
          
            {
            
              
                
                  (
                  α
                  ,
                  β
                  )
                  =
                  (
                  γ
                  ,
                  δ
                  )
                  ,
                
              
              
                
                  max
                  (
                  α
                  ,
                  β
                  )
                  <
                  max
                  (
                  γ
                  ,
                  δ
                  )
                  ,
                
              
              
                
                  max
                  (
                  α
                  ,
                  β
                  )
                  =
                  max
                  (
                  γ
                  ,
                  δ
                  )
                   
                  
                    and
                  
                   
                  α
                  <
                  γ
                  ,
                  
                     or
                  
                
              
              
                
                  max
                  (
                  α
                  ,
                  β
                  )
                  =
                  max
                  (
                  γ
                  ,
                  δ
                  )
                   
                  
                    and
                  
                   
                  α
                  =
                  γ
                   
                  
                    and
                  
                   
                  β
                  <
                  δ
                  .
                
              
            
            
          
        
      
    
    {\displaystyle (\alpha ,\beta )\preccurlyeq (\gamma ,\delta ){\text{ if either }}{\begin{cases}(\alpha ,\beta )=(\gamma ,\delta ),\\[4pt]\max(\alpha ,\beta )<\max(\gamma ,\delta ),\\[4pt]\max(\alpha ,\beta )=\max(\gamma ,\delta )\ {\text{and}}\ \alpha <\gamma ,{\text{ or}}\\[4pt]\max(\alpha ,\beta )=\max(\gamma ,\delta )\ {\text{and}}\ \alpha =\gamma \ {\text{and}}\ \beta <\delta .\end{cases}}}
  
  
    
      
        ≼
      
    
    {\displaystyle \preccurlyeq }
   is then shown to be a well-ordering such that every element has 
  
    
      
        

        
        <
        κ
      
    
    {\displaystyle {}<\kappa }
   predecessors, which implies that 
  
    
      
        
          κ
          
            2
          
        
        =
        κ
      
    
    {\displaystyle \kappa ^{2}=\kappa }
  .
It follows that 
  
    
      
        (
        
          N
        
        ×
        
          N
        
        ,
        ≼
        )
      
    
    {\displaystyle (\mathbb {N} \times \mathbb {N} ,\preccurlyeq )}
   is isomorphic to 
  
    
      
        (
        
          N
        
        ,
        ⩽
        )
      
    
    {\displaystyle (\mathbb {N} ,\leqslant )}
   and the pairing function above is nothing more than the enumeration of integer couples in increasing order. (See also Talk:Tarski's theorem about choice#Proof of the converse.)

Notes


== References ==