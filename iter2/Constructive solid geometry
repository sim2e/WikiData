Constructive solid geometry (CSG; formerly called computational binary solid geometry) is a technique used in solid modeling. Constructive solid geometry allows a modeler to create a complex surface or object by using Boolean operators to combine simpler objects, potentially generating visually complex objects by combining a few primitive ones.In 3D computer graphics and CAD, CSG is often used in procedural modeling. CSG can also be performed on polygonal meshes, and may or may not be procedural and/or parametric.
Contrast CSG with polygon mesh modeling and box modeling.

Workings
The simplest solid objects used for the representation are called geometric primitives. Typically they are the objects of simple shape: cuboids, cylinders, prisms, pyramids, spheres, cones. The set of allowable primitives is limited by each software package. Some software packages allow CSG on curved objects while other packages do not.
An object is constructed from primitives by means of allowable operations, which are typically Boolean operations on sets: union, intersection and difference, as well as geometric transformations of those sets.A primitive can typically be described by a procedure which accepts some number of parameters; for example, a sphere may be described by the coordinates of its center point, along with a radius value. These primitives can be combined into compound objects using operations like these:

			
			
		
		
			
			
		
		
			
			
		
Combining these elementary operations, it is possible to build up objects with high complexity starting from simple ones.

Ray tracing
Rendering of constructive solid geometry is particularly simple when ray tracing. Ray tracers intersect a ray with both primitives that are being operated on, apply the operator to the intersection intervals along the 1D ray, and then take the point closest to the camera along the ray as being the result.

Applications
Constructive solid geometry has a number of practical uses. It is used in cases where simple geometric objects are desired, or where mathematical accuracy is important.
Nearly all engineering CAD packages use CSG (where it may be useful for representing tool cuts, and features where parts must fit together). 
The Quake engine and Unreal Engine both use this system, as does Hammer (the native Source engine level editor), and Torque Game Engine/Torque Game Engine Advanced.  CSG is popular because a modeler can use a set of relatively simple objects to create very complicated geometry. When CSG is procedural or parametric, the user can revise their complex geometry by changing the position of objects or by changing the Boolean operation used to combine those objects.
One of the advantages of CSG is that it can easily assure that objects are "solid" or water-tight if all of the primitive shapes are water-tight. This can be important for some manufacturing or engineering computation applications.  By comparison, when creating geometry based upon boundary representations, additional topological data is required, or consistency checks must be performed to assure that the given boundary description specifies a valid solid object.A convenient property of CSG shapes is that it is easy to classify arbitrary points as being either inside or outside the shape created by CSG.  The point is simply classified against all the underlying primitives and the resulting boolean expression is evaluated. This is a desirable quality for some applications such as ray tracing.

Conversion from meshes to CSG
With CSG models being parameterized by construction, they are often favorable over usual meshes when it comes to applications where the goal is to fabricate customized models. For such applications it can be interesting to convert already existing meshes to CSG trees. This problem of automatically converting meshes to CSG trees is called inverse CSG.
A resulting CSG tree is required to occupy the same volume in 3D space as the input mesh while having a minimal number of nodes. Simple solutions are preferred to ensure that the resulting model is easy to edit.
Solving this problem is a challenge because of the large search space that has to be explored. It combines continuous parameters such as dimension and size of the primitive shapes, and discrete parameters such as the Boolean operators used to build the final CSG tree.
Deductive methods solve this problem by building a set of half-spaces that describe the interior of the geometry. These half-spaces are used to describe primitives that can be combined to get the final model.Another approach decouples the detection of primitive shapes and the computation of the CSG tree that defines the final model. This approach exploits the ability of modern program synthesis tools to find a CSG tree with minimal complexity.There are also approaches that use genetic algorithms to iteratively optimize an initial shape towards the shape of the desired mesh.

Notable applications with CSG support
Generic modelling languages and software
HyperFun
PLaSM

Ray tracing and particle transport
PhotoRealistic RenderMan
POV-Ray

Computer-aided design
AutoCAD
Autodesk Inventor
Autodesk Fusion 360
BRL-CAD
CATIA
FreeCAD
NX CAD
SolveSpace
Onshape
OpenSCAD
PTC Creo Parametric (formerly known as Pro/Engineer)
Realsoft 3D
Rhino
SelfCAD
Solid Edge
SolidWorks
Tinkercad
Vectorworks

Gaming
Dreams
Godot
GtkRadiant
Unity, via free or paid plug-ins from the Unity Asset Store.
UnrealEd
Valve Hammer Editor
Roblox

Others
3Delight
Aqsis (as of version 0.6.0)
Blender â€“ primarily a surface mesh editor, but capable of simple CSG using meta objects and using the Boolean modifier on mesh objects.
Clara.io
Geant4
MCNP
SketchUp


== References ==