In computational complexity theory, the complexity class 2-EXPTIME (sometimes called 2-EXP) is the set of all decision problems solvable by a deterministic Turing machine in O(22p(n)) time, where p(n) is a polynomial function of n.
In terms of DTIME,

  
    
      
        
          
            2
            
              
                -
              
            
            E
            X
            P
            T
            I
            M
            E
          
        
        =
        
          ⋃
          
            k
            ∈
            
              N
            
          
        
        
          
            D
            T
            I
            M
            E
          
        
        
          (
          
            2
            
              
                2
                
                  
                    n
                    
                      k
                    
                  
                
              
            
          
          )
        
        .
      
    
    {\displaystyle {\mathsf {2{\mbox{-}}EXPTIME}}=\bigcup _{k\in \mathbb {N} }{\mathsf {DTIME}}\left(2^{2^{n^{k}}}\right).}
  We know

P ⊆ NP ⊆ PSPACE ⊆ EXPTIME ⊆ NEXPTIME ⊆ EXPSPACE ⊆ 2-EXPTIME ⊆ ELEMENTARY.2-EXPTIME can also be reformulated as the space class AEXPSPACE, the problems that can be solved by an alternating Turing machine in exponential space. This is one way to see that EXPSPACE ⊆ 2-EXPTIME, since an alternating Turing machine is at least as powerful as a deterministic Turing machine.2-EXPTIME is one class in a hierarchy of complexity classes with increasingly higher time bounds. The class 3-EXPTIME is defined similarly to 2-EXPTIME but with a triply exponential time bound 
  
    
      
        
          2
          
            
              2
              
                
                  2
                  
                    
                      n
                      
                        k
                      
                    
                  
                
              
            
          
        
      
    
    {\displaystyle 2^{2^{2^{n^{k}}}}}
  . This can be generalized to higher and higher time bounds.

Examples
Examples of algorithms that require at least 2-EXPTIME include:

Each decision procedure for Presburger arithmetic provably requires at least doubly exponential time
Computing a Gröbner basis over a field. In the worst case, a Gröbner basis may have a number of elements which is doubly exponential in the number of variables. On the other hand, the worst-case complexity of Gröbner basis algorithms is doubly exponential in the number of variables as well as in the entry size.
Finding a complete set of associative-commutative unifiers
Satisfying CTL+ (which is, in fact, 2-EXPTIME-complete)
Quantifier elimination on real closed fields takes doubly exponential time (see Cylindrical algebraic decomposition).
Calculating the complement of a regular expression

2-EXPTIME-complete problems
Generalizations of many fully observable games are EXPTIME-complete. These games can be viewed as particular instances of a class of transition systems defined in terms of a set of state variables and actions/events that change the values of the state variables, together with the question of whether a winning strategy exists. A generalization of this class of fully observable problems to partially observable problems lifts the complexity from EXPTIME-complete to 2-EXPTIME-complete.

See also
Double exponential function


== References ==