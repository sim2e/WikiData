In mathematics, engineering, computer science and economics, an optimization problem is the problem of finding the best solution from all feasible solutions.
Optimization problems can be divided into two categories, depending on whether the variables are continuous or discrete: 

An optimization problem with discrete variables is known as a discrete optimization, in which an object such as an integer, permutation or graph must be found from a countable set.
A problem with continuous variables is known as a continuous optimization, in which an optimal value from a continuous function must be found. They can include constrained problems and multimodal problems.

Continuous optimization problem
The standard form of a continuous optimization problem is
where

f : ℝn → ℝ is the objective function to be minimized over the n-variable vector x,
gi(x) ≤ 0 are called inequality constraints
hj(x) = 0 are called equality constraints, and
m ≥ 0 and p ≥ 0.If m = p = 0, the problem is an unconstrained optimization problem. By convention, the standard form defines a minimization problem. A maximization problem can be treated by negating the objective function.

Combinatorial optimization problem
Formally, a combinatorial optimization problem A is a quadruple (I, f, m, g), where

I is a set of instances;
given an instance x ∈ I, f(x) is the set of feasible solutions;
given an instance x and a feasible solution y of x, m(x, y) denotes the measure of y, which is usually a positive real.
g is the goal function, and is either min or max.The goal is then to find for some instance x an optimal solution, that is, a feasible solution y with

For each combinatorial optimization problem, there is a corresponding decision problem that asks whether there is a feasible solution for some particular measure m0. For example, if there is a graph G which contains vertices u and v, an optimization problem might be "find a path from u to v that uses the fewest edges". This problem might have an answer of, say, 4. A corresponding decision problem would be "is there a path from u to v that uses 10 or fewer edges?" This problem can be answered with a simple 'yes' or 'no'.
In the field of approximation algorithms, algorithms are designed to find near-optimal solutions to hard problems. The usual decision version is then an inadequate definition of the problem since it only specifies acceptable solutions. Even though we could introduce suitable decision problems, the problem is more naturally characterized as an optimization problem.

See also
Counting problem (complexity) – Type of computational problem
Design Optimization
Ekeland's variational principle
Function problem – Type of computational problem
Glove problem
Operations research – Discipline concerning the application of advanced analytical methods
Satisficing – Cognitive heuristic of searching for an acceptable decision − the optimum need not be found, just a "good enough" solution.
Search problem – type of computational problem represented by a binary relationPages displaying wikidata descriptions as a fallback
Semi-infinite programming – optimization problem with a finite number of variables and an infinite number of constraints, or an infinite number of variables and a finite number of constraintsPages displaying wikidata descriptions as a fallback

References
External links
"How Traffic Shaping Optimizes Network Bandwidth". IPC. 12 July 2016. Retrieved 13 February 2017.