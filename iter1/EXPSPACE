In computational complexity theory, EXPSPACE is the set of all decision problems solvable by a deterministic Turing machine in exponential space, i.e., in 
  
    
      
        O
        (
        
          2
          
            p
            (
            n
            )
          
        
        )
      
    
    {\displaystyle O(2^{p(n)})}
   space, where 
  
    
      
        p
        (
        n
        )
      
    
    {\displaystyle p(n)}
   is a polynomial function of 
  
    
      
        n
      
    
    {\displaystyle n}
  . Some authors restrict 
  
    
      
        p
        (
        n
        )
      
    
    {\displaystyle p(n)}
   to be a linear function, but most authors instead call the resulting class ESPACE. If we use a nondeterministic machine instead, we get the class NEXPSPACE, which is equal to EXPSPACE by Savitch's theorem.
A decision problem is EXPSPACE-complete if it is in EXPSPACE, and every problem in EXPSPACE has a polynomial-time many-one reduction to it.  In other words, there is a polynomial-time algorithm that transforms instances of one to instances of the other with the same answer.  EXPSPACE-complete problems might be thought of as the hardest problems in EXPSPACE.
EXPSPACE is a strict superset of PSPACE, NP, and P and is believed to be a strict superset of EXPTIME.

Formal definition
In terms of DSPACE and NSPACE,

  
    
      
        
          
            E
            X
            P
            S
            P
            A
            C
            E
          
        
        =
        
          ⋃
          
            k
            ∈
            
              N
            
          
        
        
          
            D
            S
            P
            A
            C
            E
          
        
        
          (
          
            2
            
              
                n
                
                  k
                
              
            
          
          )
        
        =
        
          ⋃
          
            k
            ∈
            
              N
            
          
        
        
          
            N
            S
            P
            A
            C
            E
          
        
        
          (
          
            2
            
              
                n
                
                  k
                
              
            
          
          )
        
      
    
    {\displaystyle {\mathsf {EXPSPACE}}=\bigcup _{k\in \mathbb {N} }{\mathsf {DSPACE}}\left(2^{n^{k}}\right)=\bigcup _{k\in \mathbb {N} }{\mathsf {NSPACE}}\left(2^{n^{k}}\right)}

Examples of problems
An example of an EXPSPACE-complete problem is the problem of recognizing whether two regular expressions represent different languages, where the expressions are limited to four operators: union, concatenation, the Kleene star (zero or more copies of an expression), and squaring (two copies of an expression).If the Kleene star is left out, then that problem becomes NEXPTIME-complete, which is like EXPTIME-complete, except it is defined in terms of non-deterministic Turing machines rather than deterministic.
It has also been shown by L. Berman in 1980 that the problem of verifying/falsifying any first-order statement about real numbers that involves only addition and comparison (but no multiplication) is in EXPSPACE.
Alur and Henzinger extended linear temporal logic with times (integer) and prove that the validity problem of their logic is EXPSPACE-complete.The coverability problem for Petri Nets is EXPSPACE-complete. The reachability problem for Petri nets was known to be EXPSPACE-hard for a long time, but shown to be nonelementary, so it is probably not in EXPSPACE.

Relationship to other classes
EXPSPACE is known to be a strict superset of PSPACE, NP, and P. It is further suspected to be a strict superset of EXPTIME, however this is not known.

See also
Game complexity

References

Berman, Leonard (1 May 1980). "The complexity of logical theories". Theoretical Computer Science. 11 (1): 71–77. doi:10.1016/0304-3975(80)90037-7.
Michael Sipser (1997). Introduction to the Theory of Computation. PWS Publishing. ISBN 0-534-94728-X. Section 9.1.1: Exponential space completeness, pp. 313–317. Demonstrates that determining equivalence of regular expressions with exponentiation is EXPSPACE-complete.